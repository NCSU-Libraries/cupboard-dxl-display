{"version":3,"sources":["enums.ts","hooks.ts","components/AppWrappers/AppDragContext.tsx","static/appConfig.ts","components/AppWrappers/AppTimers.tsx","components/Background/TestShader1.js","utils.ts","components/Background/BackgroundShader.js","components/Background.tsx","components/CardContent/CardIFrame.tsx","components/CardContent/CardImage.tsx","components/CardContent.tsx","components/Shared/Pulsar.tsx","components/DragAndDrop/IXDrop.tsx","components/Widgets/Clock.tsx","components/Shared/Modal.tsx","components/Shared/Panel.tsx","components/HowToUse/HowToUsePopUp.tsx","components/Shared/Button.tsx","components/Widgets/HowToUse.tsx","components/Widgets/WidgetRenderer.tsx","components/CardLayout/ViewCard/CardBackdrop.tsx","components/CardLayout/ViewCard/CardInfo.tsx","components/CardLayout/ViewCard/CardMotionWrapper.tsx","components/CardLayout/ViewCard/DeleteButton.tsx","components/CardLayout/ViewCard/SettingsButton.tsx","components/CardLayout/ViewCard/ViewCard.tsx","components/CardLayout/GuideGrid.tsx","components/CardLayout/CardLayout.tsx","components/Shared/FlexColumn.tsx","components/Shared/FlexRow.tsx","components/EditorPanel/EditorTabs/TabPane.tsx","components/EditorPanel/EditorTabs/AppTab/AppTab.tsx","components/DragAndDrop/DraggableRow.tsx","IFrameValidator.ts","components/Loader.tsx","components/EditorPanel/PopOver.tsx","components/EditorPanel/TableHeader.tsx","components/EditorPanel/EditorTabs/ContentsTab/ContentsTab.tsx","components/EditorPanel/EditorTabs/IssuesTab/IssuesTable.tsx","components/EditorPanel/EditorTabs/IssuesTab/IssuesTab.tsx","components/EditorPanel/EditorTabs/LayoutTab/GoogleFormPopup/GoogleFormIframe.tsx","components/EditorPanel/EditorTabs/LayoutTab/GoogleFormPopup.tsx","components/EditorPanel/EditorTabs/LayoutTab/LayoutTable.tsx","components/EditorPanel/EditorTabs/LayoutTab/LayoutTab.tsx","components/DragAndDrop/DraggableWidget.tsx","components/EditorPanel/EditorTabs/WidgetsTab/WidgetsTab.tsx","components/EditorPanel/EditorTabs/EditorTabs.tsx","components/EditorPanel/SettingsMenu.tsx","components/EditorPanel/EditorPanel.tsx","components/ModeChangeButton.tsx","components/Shared/Screen.tsx","components/Shared/Timer.tsx","LoadingScreen.tsx","App.tsx","data_structs/CardData.ts","data_structs/WidgetData.ts","static/widgets.ts","model/appModel.ts","model/appSettingsModel.ts","data_structs/GoogleSheetData.ts","model/googleSheetsModel.ts","static/extendedLayoutTest.ts","data_structs/LayoutData.ts","model/index.ts","model/layoutsModel.ts","store.ts","index.tsx"],"names":["AppMode","CardView","DragType","InteractionType","DndTypes","DragSource","appModelHooks","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","useCardEditor","actions","layoutsModel","setCardScale","setCardBackgroundColor","setCardContentFit","setEditingCard","appModel","editingCard","state","cardScale","cardBackgroundColor","cardContentFit","clearEditingCard","undefined","useAppSettings","setRotationSpeed","appSettingsModel","setShowQrCodes","setBlockIframeInteractions","setEnableIframeInteractions","setMuteIframeAudio","setEnableIframeAudio","setRotateLayouts","rotationSpeed","enableIframeAudio","rotateLayouts","enableQrCodes","enableIframeInteractions","useSheets","fetchTopLevelSheet","googleSheetsModel","urlQueryLink","urlSheet","parentSheetUrl","cardSheetUrl","layoutSheetUrl","setUrlSheet","formUrl","refreshSheets","useErrors","appErrors","layoutErrors","googleSheetsErrors","allErrors","useApp","toggleAppMode","sheetsAreLoaded","transitionLayout","addAppError","appMode","useLayout","activeCards","activeWidgets","externalLayouts","swapCard","swapCardContent","deleteCard","addCard","setBufferLayout","activeLayout","useNextLayout","setNextLayout","setActiveLayout","clearCards","resetLayout","useEventListener","eventName","handler","element","savedHandler","useRef","useEffect","targetElement","current","window","addEventListener","eventListener","event","removeEventListener","useWindowSize","useState","width","height","windowSize","setWindowSize","handleSize","innerWidth","innerHeight","useLayoutEffect","stringToGridPos","cardId","posString","split","x","Number","parseInt","charAt","y","AppDragContext","children","externalLayoutsState","onDragEnd","response","destination","droppableId","source","draggableId","CARD_TABLE","startsWith","cardPos","sourceId","targetPosition","targetId","WIDGETS_TABLE","LAYOUT_TABLE","newLayout","filter","l","id","console","log","appConfig","idleTime","defaultIframeScale","defaultEmbedScale","defaultLayoutName","widgetIds","gridRows","gridCols","showModeSwitchButton","useStaticLayout","gridBottomPadding","rotationDuration","noUrlTimeout","backupParentSheetUrl","AppTimers","isIdle","useIdle","reset","callback","delay","savedCallback","intervalReference","setInterval","clearInterval","useCallback","stop","useInterval","DISPLAY","EDIT","TestShader1","uniforms","time","value","vertexShader","fragmentShader","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","toString","slice","length","join","randomIntFromInterval","min","max","Math","floor","random","randomNumber","randomisePosition","THREE","rgb","r","g","b","baseColors","pink","brightPink","darkPurple","orange","darkgrey","lightgrey","red","u_bg","type","u_bgMain","u_color1","u_color2","u_time","u_randomisePosition","ShadedGeometry1","position","shaderMaterialRef","t","j","vCheck","useFrame","clock","cos","R","sin","G","B","rotation","degToRad","attach","args","ref","BackgroundShader","cam","gl","antialias","alpha","PerspectiveCamera","fov","aspect","near","far","faceResolution","OrbitControls","Background","backgroundColor","backgroundStyle","setBackgroundStyle","style","top","left","transition","backgroundClass","classNames","ReactDOM","createPortal","className","document","querySelector","React","memo","CardIFrame","onLoad","onError","card","cardSettings","cardView","scale","src","transform","pointerEvents","transformOrigin","CardImage","objectFit","contentFit","objectPosition","PREVIEW","IFrameView","active","setActive","valid","setIsLoaded","indexFrameContainerClass","contentType","onDoubleClick","onReady","ResponsivePlayer","controls","muted","playing","url","Pulsar","AddIcon","size","IXDrop","properties","cardType","provided","snapshot","innerRef","isDraggingOver","placeholder","Clock","setDate","timerID","padding","overflow","fontWeight","color","boxSizing","fontSize","toLocaleTimeString","hour12","timeStyle","Modal","containerClassName","onClose","backdropOpacity","motion","div","animate","display","justifyContent","alignItems","zIndex","MyBackdrop","onMouseUp","opacity","Panel","flexDirection","panelStyle","HowToUsePopUp","borderRadius","variants","hidden","visible","duration","Heading","Text","process","Button","onClick","text","appearance","iconBefore","containerClass","intent","cursor","HowToUse","initialValue","setValue","useToggle","toggleVisible","HandUpIcon","WidgetRenderer","widget","colWidth","rowHeight","w","h","widgetId","widg","renderWidget","CardBackdrop","boxShadow","border","CardInfo","data","title","CardMotionWrapper","animation","preview","none","error","loaded","out","initial","layoutId","DeleteButton","action","onTouchEnd","e","DeleteIcon","SettingsButton","bottom","background","CogIcon","ViewCard","useAnimation","GRID","oldCardView","setCardView","setIsError","animationVariant","setAnimationVariant","animationCounter","reference","useLocalStore","setScale","setBackgroundColor","setShowMenu","show","showMenu","toggleMenu","handleCardPress","thunk","_","getState","rootel","setTimeout","getElementById","s","devTools","cardModalBackdrop","FULL_SCREEN","cardChildContainer","keyCode","disabled","enable","disable","handleAction","preventDefault","useKeyboardShortcut","showDeleteButton","renderCardInfo","containerReference","listener","contains","target","errorType","description","link","renderReturnButton","ReturnButton","GuideGrid","gridSettings","ResponsiveGridLayout","WidthProvider","Responsive","guideCards","rows","cols","allGridSpots","push","emptyCards","map","rr","i","minW","maxW","minH","maxH","static","isDraggable","isResizable","resizeHandles","lg","md","sm","xs","xxs","generateFilledLayout","justCardNames","c","layouts","preventCollision","p","index","key","PLACEHOLDER","CardLayout","layout","margin","onLayoutChange","cards","widgets","sharedGridSettings","breakpoints","compactType","onDragStart","oldItem","newItem","verticalCompact","exit","IFRAME","find","contentCard","FlexColumn","FlexRow","TabPane","SwitchContainer","onChange","checked","setChecked","paddingLeft","Switch","defaultChecked","Label","AppTab","SheetLinks","links","titles","SheetLink","href","rel","textOverflow","maxWidth","DraggableRow","dndType","dragAll","isValidElement","createElement","body","append","remove","useDraggableInPortal","dragHandleProperties","dragHandleProps","isDragging","draggableProps","offsetLeft","offsetTop","cloneElement","defaultProps","IFrameLoadError","IFrameLoadWarning","getDefaultStyle","Loader","ariaLabel","wrapperStyle","wrapperClass","fill","viewBox","xmlns","attributeName","dur","from","repeatCount","to","PopOver","AnimatePresence","ease","transformBox","TableHeader","headerTitle","setFilter","setFilterDirection","activeFilter","sortDirection","setSortDirection","showSortArrow","string","regex","toLowerCase","match","forEach","char","replace","toUpperCase","titleCapitilization","TitleWithIcon","iconId","setPosition","hovered","setHovered","setPreviewLoaded","delayHandler","setDelayHandler","onMouseEnter","pageY","parentElement","getBoundingClientRect","onMouseLeave","_event","clearTimeout","isActive","fallbackImage","_c","marginTop","marginBottom","textAlign","ContentsTab","availableCards","filterKey","setFilterKey","filterDirection","cardItems","setCardItems","searchTerm","setSearchTerm","filteredCards","setFilteredCards","aboveThreshholdCardTitles","fuzzysort","go","filtered","includes","sortedItems","sort","a","aText","bText","reverse","SearchInput","currentTarget","Tooltip","content","IconButton","icon","RefreshIcon","CLOCK","isDropDisabled","autoHeight","autoHeightMax","autoHeightMin","added","author","interaction","CARD_ROW","isDragDisabled","ErrorMessage","marginRight","borderBottom","textTransform","IssuesTable","setReference","setSize","offsetWidth","offsetHeight","useElementSize","squareReference","overflowY","IssuesTab","GoogleFormIframe","frameBorder","marginHeight","marginWidth","GoogleFormPopup","onCloseComplete","isShown","isCopiedJSON","layoutString","JSON","stringify","ReactDom","LayoutTable","activeLayoutState","StatusIndicator","LayoutTitle","layoutCardIds","sources","layoutWidgetsIds","availableWidgets","pageX","textDecoration","layoutSettings","LayoutTab","bufferState","bufferLayout","showNewLayoutPopup","setShowNewLayoutPopup","setLayoutString","DraggableWidget","currentLayoutState","isInLayout","WidgetsTab","widgetsToRender","setWidgetsToRender","WIDGET","WidgetWrapper","editorPanelReference","scalar","setScalar","Editor","ErrorsNofictions","aspectRatio","marginLeft","InputRow","ScaleControls","localScale","setLocalScale","ChevronLeftIcon","defaultValue","ChevronRightIcon","SettingsMenu","getCardSettings","currentCardSettings","cardSettingsToGet","setcardSettingsToGet","classNamePrefix","selected","option","options","label","EditorPanel","minimized","setMinimized","editorPanelClass","editorClass","bounds","right","defaultClassName","defaultPosition","handle","PlusIcon","MinusIcon","EditorTabs","PanelHeader","BarButton","ModeChangeButton","toggleModeAction","longPressEvent","useLongPress","modeChangeButtonStyle","whileTap","Screen","Timer","seconds","onEnd","timeLeft","setTimeLeft","intervalId","LoadingScreenContext","createContext","setVisible","v","LoadingScreen","Provider","minHeight","backdropFilter","in","Spinner","NoUrlError","useContext","WarningSignIcon","Body","effect","query","search","useLocation","useMemo","URLSearchParams","useQuery","get","setGridLayout","App","IFrameValidator","errors","warnings","this","malformedUrlCheckArray","warningsArray","RegExp","test","MALFORMED_URL","validURL","CROSS_ORIGIN","CardData","row","metaData","validator","failed","isImgLink","isVideo","isEmbed","isWebsite","widgetType","WidgetData","info","isLoaded","Object","values","widgetInfo","manageViewModeChange","viewModeEnum","setAppMode","CYCLE","setAvailableCards","cardDataArray","setActiveCards","setActiveWidgets","widgetDataArray","speed","should","errorsString","newError","onCardSheetLoadSuccess","thunkOn","storeActions","setAppGoogleSheetData","payload","getSheetRows","then","rawCardRowsArray","sourceid","entries","onSetActiveLayout","activeSourceIds","Set","availableCardsUpdated","has","onSwapCardContent","newCards","GoogleSheetData","sheetId","sheets","Map","Promise","resolve","reject","rowArray","set","layoutDataGoogleSheet","cardDataGoogleSheet","parentGoogleSheet","computed","every","getSheetData","sheetRow","setFormUrl","googleForm","setLayoutsSheetUrl","layoutsSheet","setCardSheetUrl","cardsSheet","setParentSheetUrl","fetchSheet","name","googleSheetUrlToCSVUrl","catch","addGoogleSheetError","REACT_APP_SHEET_URL","sheetResponses","allSettled","results","sheetData","goodValues","result","status","addSheet","sheetTitle","setCardDataGoogleSheet","setLayoutDataGoogleSheet","fetchAppGoogleSheet","getCardDataResponse","getLayoutDataResponse","googleSheet","sheet","googleSheetError","sheetKey","gid","sheetUrl","Papa","parse","download","header","delimiter","dynamicTyping","complete","extendedLayoutTest","defaultBackgroundColor","defaultCardSettings","defaultGridSettings","LayoutData","sourceLayout","layoutWidgets","testGetLayout","timestamp","swapInfo","k","toRemoveId","toAdd","pos","cs","newGridLayout","keys","object","model","layoutsString","onSetAppGoogleSheetData","rawLayoutRows","currentLayoutIds","addLayoutError","defaultLayout","setExternalLayouts","onToggleViewMode","getStoreState","buf","newActiveLayout","currentIndex","indexOf","selectedRandom","newLayoutArray","cardToDelete","removeCard","cardAddEvent","cardToAdd","setCardSettings","settings","currentSettings","updateLayout","swap","old","setAnimationCounter","store","createStore","render"],"mappings":"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","file":"static/js/main.67313c0b.chunk.js","sourcesContent":["export enum AppMode {\r\n  DISPLAY = \"DISPLAY\",\r\n  EDIT = \"EDIT\",\r\n  CYCLE = \"CYCLE\",\r\n}\r\n\r\nexport enum CardView {\r\n  GRID = \"GRID\",\r\n  PREVIEW = \"PREVIEW\",\r\n  FULL_SCREEN = \"FULL_SCREEN\",\r\n}\r\n\r\nexport enum DragType {\r\n  CARD_TABLE_DATA = \"CARD_TABLE_DATA\",\r\n  DISPLAY_CARD = \"DISPLAY_CARD\",\r\n}\r\n\r\nexport enum InteractionType {\r\n  ACTIVE = \"ACTIVE\",\r\n  STATIC = \"STATIC\",\r\n  FIXED = \"FIXED\",\r\n  IMAGE = \"IMAGE\",\r\n}\r\n\r\nexport enum DndTypes {\r\n  PLACEHOLDER = \"PLACEHOLDER\",\r\n  CLOCK = \"CLOCK\",\r\n  IFRAME = \"IFRAME\",\r\n  CARD_ROW = \"CARD_ROW\",\r\n  LAYOUT = \"LAYOUT\",\r\n  WIDGET = \"WIDGET\",\r\n}\r\n\r\nexport enum DragSource {\r\n  LAYOUT_TABLE = \"LAYOUT_TABLE\",\r\n  CARD_TABLE = \"CARD_TABLE\",\r\n  CARD_GRID = \"CARD_GRID\",\r\n  WIDGETS_TABLE = \"WIDGETS_TABLE\"\r\n}\r\n\r\nexport type SheetNames = \"CARDS\" | \"LAYOUTS\" | \"TOP_LEVEL\"","import type { ActionCreator, ThunkCreator } from \"easy-peasy\";\r\nimport { createTypedHooks } from \"easy-peasy\";\r\nimport type { EffectCallback, RefObject } from \"react\";\r\nimport React, {\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport type CardData from \"./data_structs/CardData\";\r\nimport type LayoutData from \"./data_structs/LayoutData\";\r\nimport type WidgetData from \"./data_structs/WidgetData\";\r\nimport type { AppMode } from \"./enums\";\r\nimport type AppError from \"./interfaces/AppError\";\r\nimport type { CardAddEvent, CardSwapEvent } from \"./interfaces/CardEvents\";\r\nimport type { StoreModel } from \"./model\";\r\n\r\nconst appModelHooks = createTypedHooks<StoreModel>();\r\n\r\nexport const useStoreActions = appModelHooks.useStoreActions;\r\nexport const useStoreDispatch = appModelHooks.useStoreDispatch;\r\nexport const useStoreState = appModelHooks.useStoreState;\r\n\r\nexport function useToggle(initialValue: boolean): [boolean, () => void] {\r\n  const [value, setValue] = useState<boolean>(initialValue);\r\n\r\n  const toggleValue = () => setValue(!value);\r\n\r\n  return [value, toggleValue];\r\n}\r\n\r\ninterface UseCardEditorProperties {\r\n  editingCard: CardData | undefined;\r\n  setEditingCard: ActionCreator<CardData | undefined>;\r\n  setCardScale: ActionCreator<{\r\n    cardId: string;\r\n    scale: number;\r\n  }>;\r\n  setCardBackgroundColor: ActionCreator<{\r\n    cardId: string;\r\n    color: string;\r\n  }>;\r\n  setCardContentFit: ActionCreator<{\r\n    cardId: string;\r\n    contentFit: string;\r\n  }>;\r\n  clearEditingCard: () => void;\r\n  cardScale: number | undefined;\r\n  cardBackgroundColor: string | undefined;\r\n  cardContentFit: string | undefined;\r\n}\r\n\r\nexport const useCardEditor = (): UseCardEditorProperties => {\r\n  const { setCardScale, setCardBackgroundColor, setCardContentFit } =\r\n    useStoreActions((actions) => actions.layoutsModel);\r\n  const { setEditingCard } = useStoreActions((actions) => actions.appModel);\r\n  const { editingCard } = useStoreState((state) => state.appModel);\r\n  const { cardScale, cardBackgroundColor, cardContentFit } = useStoreState(\r\n    (state) => state.layoutsModel\r\n  );\r\n\r\n  const clearEditingCard = () => {\r\n    // eslint-disable-next-line unicorn/no-useless-undefined\r\n    setEditingCard(undefined);\r\n  };\r\n\r\n  return {\r\n    setEditingCard,\r\n    editingCard,\r\n    setCardScale,\r\n    setCardBackgroundColor,\r\n    clearEditingCard,\r\n    cardScale,\r\n    cardBackgroundColor,\r\n    cardContentFit,\r\n    setCardContentFit,\r\n  };\r\n};\r\n\r\ninterface UseAppSettingsProperties {\r\n  rotationSpeed: number;\r\n  enableQrCodes: boolean;\r\n  rotateLayouts: boolean;\r\n  enableIframeAudio: boolean;\r\n  enableIframeInteractions: boolean;\r\n  setRotationSpeed: ActionCreator<number>;\r\n  setShowQrCodes: ActionCreator<boolean>;\r\n  setBlockIframeInteractions: ActionCreator<boolean>;\r\n  setMuteIframeAudio: ActionCreator<boolean>;\r\n  setRotateLayouts: ActionCreator<boolean>;\r\n}\r\n\r\nexport const useAppSettings = (): UseAppSettingsProperties => {\r\n  const setRotationSpeed = useStoreActions(\r\n    (actions) => actions.appSettingsModel.setRotationSpeed\r\n  );\r\n  const setShowQrCodes = useStoreActions(\r\n    (actions) => actions.appSettingsModel.setShowQrCodes\r\n  );\r\n  const setBlockIframeInteractions = useStoreActions(\r\n    (actions) => actions.appSettingsModel.setEnableIframeInteractions\r\n  );\r\n  const setMuteIframeAudio = useStoreActions(\r\n    (state) => state.appSettingsModel.setEnableIframeAudio\r\n  );\r\n  const setRotateLayouts = useStoreActions(\r\n    (actions) => actions.appSettingsModel.setRotateLayouts\r\n  );\r\n  const rotationSpeed = useStoreState(\r\n    (state) => state.appSettingsModel.rotationSpeed\r\n  );\r\n  const enableIframeAudio = useStoreState(\r\n    (state) => state.appSettingsModel.enableIframeAudio\r\n  );\r\n  const rotateLayouts = useStoreState(\r\n    (state) => state.appSettingsModel.rotateLayouts\r\n  );\r\n  const enableQrCodes = useStoreState(\r\n    (state) => state.appSettingsModel.enableQrCodes\r\n  );\r\n  const enableIframeInteractions = useStoreState(\r\n    (state) => state.appSettingsModel.enableIframeInteractions\r\n  );\r\n\r\n  return {\r\n    rotationSpeed,\r\n    enableQrCodes,\r\n    enableIframeInteractions,\r\n    rotateLayouts,\r\n    enableIframeAudio,\r\n    setRotationSpeed,\r\n    setShowQrCodes,\r\n    setBlockIframeInteractions,\r\n    setRotateLayouts,\r\n    setMuteIframeAudio,\r\n  };\r\n};\r\n\r\ninterface UseSheetsProperties {\r\n  fetchTopLevelSheet: ThunkCreator<string, any>;\r\n  setUrlSheet: ActionCreator<string | null>;\r\n  parentSheetUrl: string | undefined;\r\n  cardSheetUrl: string | undefined;\r\n  layoutSheetUrl: string | undefined;\r\n  formUrl: string | undefined;\r\n  refreshSheets: ThunkCreator<void, any>;\r\n  urlQueryLink: string | null;\r\n}\r\n\r\nexport const useSheets = (): UseSheetsProperties => {\r\n  const fetchTopLevelSheet = useStoreActions(\r\n    (actions) => actions.googleSheetsModel.fetchTopLevelSheet\r\n  );\r\n  const urlQueryLink = useStoreState(\r\n    (state) => state.googleSheetsModel.urlSheet\r\n  );\r\n\r\n  const parentSheetUrl = useStoreState(\r\n    (state) => state.googleSheetsModel.parentSheetUrl\r\n  );\r\n  const cardSheetUrl = useStoreState(\r\n    (state) => state.googleSheetsModel.cardSheetUrl\r\n  );\r\n  const layoutSheetUrl = useStoreState(\r\n    (state) => state.googleSheetsModel.layoutSheetUrl\r\n  );\r\n\r\n  const setUrlSheet = useStoreActions(\r\n    (actions) => actions.googleSheetsModel.setUrlSheet\r\n  );\r\n  const formUrl = useStoreState((state) => state.googleSheetsModel.formUrl);\r\n\r\n  const refreshSheets = useStoreActions(\r\n    (actions) => actions.googleSheetsModel.refreshSheets\r\n  );\r\n\r\n  return {\r\n    fetchTopLevelSheet,\r\n    parentSheetUrl,\r\n    cardSheetUrl,\r\n    layoutSheetUrl,\r\n    formUrl,\r\n    setUrlSheet,\r\n    refreshSheets,\r\n    urlQueryLink,\r\n  };\r\n};\r\n\r\ninterface UseErrorProperties {\r\n  appErrors: AppError[];\r\n  layoutErrors: AppError[];\r\n  googleSheetsErrors: AppError[];\r\n  allErrors: AppError[];\r\n}\r\n\r\nexport const useErrors = (): UseErrorProperties => {\r\n  const appErrors = useStoreState((state) => state.appModel.appErrors);\r\n  const layoutErrors = useStoreState(\r\n    (state) => state.layoutsModel.layoutErrors\r\n  );\r\n  const googleSheetsErrors = useStoreState(\r\n    (state) => state.googleSheetsModel.googleSheetsErrors\r\n  );\r\n  const allErrors = [...appErrors, ...layoutErrors, ...googleSheetsErrors];\r\n  return {\r\n    appErrors,\r\n    layoutErrors,\r\n    googleSheetsErrors,\r\n    allErrors,\r\n  };\r\n};\r\n\r\ninterface UseAppProperties {\r\n  appMode: AppMode;\r\n  rotationSpeed: number;\r\n  setRotationSpeed: ActionCreator<number>;\r\n  transitionLayout: ThunkCreator<number, any>;\r\n  toggleAppMode: ThunkCreator<void, any>;\r\n  setRotateLayouts: ActionCreator<boolean>;\r\n  rotateLayouts: boolean;\r\n  addAppError: ActionCreator<AppError>;\r\n  sheetsAreLoaded: boolean;\r\n  editingCard: CardData | undefined;\r\n  setEditingCard: ActionCreator<CardData>;\r\n}\r\n\r\nexport const useApp = (): UseAppProperties => {\r\n  const toggleAppMode = useStoreActions(\r\n    (actions) => actions.appModel.toggleAppMode\r\n  );\r\n\r\n  const rotationSpeed = useStoreState((state) => state.appModel.rotationSpeed);\r\n  const editingCard = useStoreState((state) => state.appModel.editingCard);\r\n  const rotateLayouts = useStoreState((state) => state.appModel.rotateLayouts);\r\n  const sheetsAreLoaded = useStoreState(\r\n    (state) => state.googleSheetsModel.sheetsAreLoaded\r\n  );\r\n\r\n  const setRotationSpeed = useStoreActions(\r\n    (actions) => actions.appModel.setRotationSpeed\r\n  );\r\n  const transitionLayout = useStoreActions(\r\n    (actions) => actions.layoutsModel.transitionLayout\r\n  );\r\n  const setRotateLayouts = useStoreActions(\r\n    (actions) => actions.appModel.setRotateLayouts\r\n  );\r\n  const addAppError = useStoreActions(\r\n    (actions) => actions.appModel.addAppError\r\n  );\r\n  const setEditingCard = useStoreActions(\r\n    (actions) => actions.appModel.setEditingCard\r\n  );\r\n  const appMode = useStoreState((state) => state.appModel.appMode);\r\n\r\n  return {\r\n    appMode,\r\n    rotationSpeed,\r\n    setRotationSpeed,\r\n    editingCard,\r\n    toggleAppMode,\r\n    rotateLayouts,\r\n    setRotateLayouts,\r\n    addAppError,\r\n    sheetsAreLoaded,\r\n    transitionLayout,\r\n    setEditingCard,\r\n    // animationCounter,\r\n  };\r\n};\r\n\r\nexport function useQuery() {\r\n  const { search } = useLocation();\r\n  return React.useMemo(() => new URLSearchParams(search), [search]);\r\n}\r\n\r\ninterface UseLayoutProperties {\r\n  activeCards: CardData[];\r\n  activeWidgets: WidgetData[];\r\n  setBufferLayout: ActionCreator<ReactGridLayout.Layouts>;\r\n  activeLayout: LayoutData | undefined;\r\n  deleteCard: ThunkCreator<string, any>;\r\n  addCard: ThunkCreator<CardAddEvent, any>;\r\n  swapCard: ThunkCreator<CardSwapEvent, any>;\r\n  // addWidget: ThunkCreator<CardAddEvent, any>;\r\n  setActiveLayout: ActionCreator<LayoutData>;\r\n  useNextLayout: ThunkCreator<void, any>;\r\n  clearCards: ThunkCreator<void, any>;\r\n  resetLayout: ThunkCreator<void, any>;\r\n  externalLayouts: LayoutData[];\r\n}\r\n\r\nexport const useLayout = (): UseLayoutProperties => {\r\n  const activeCards = useStoreState((state) => state.appModel.activeCards);\r\n  const activeWidgets = useStoreState((state) => state.appModel.activeWidgets);\r\n  const externalLayouts = useStoreState(\r\n    (state) => state.layoutsModel.externalLayouts\r\n  );\r\n  const swapCard = useStoreActions(\r\n    (actions) => actions.layoutsModel.swapCardContent\r\n  );\r\n\r\n  // const addWidget = useStoreActions(\r\n  //   (actions) => actions.layoutsModel.addWidget\r\n  // );\r\n\r\n  const deleteCard = useStoreActions(\r\n    (actions) => actions.layoutsModel.deleteCard\r\n  );\r\n  const addCard = useStoreActions((actions) => actions.layoutsModel.addCard);\r\n\r\n  const setBufferLayout = useStoreActions(\r\n    (actions) => actions.layoutsModel.setBufferLayout\r\n  );\r\n  // const set\r\n  const activeLayout = useStoreState(\r\n    (state) => state.layoutsModel.activeLayout\r\n  );\r\n\r\n  const useNextLayout = useStoreActions(\r\n    (actions) => actions.layoutsModel.setNextLayout\r\n  );\r\n\r\n  const setActiveLayout = useStoreActions(\r\n    (actions) => actions.layoutsModel.setActiveLayout\r\n  );\r\n  const clearCards = useStoreActions(\r\n    (actions) => actions.layoutsModel.clearCards\r\n  );\r\n\r\n  const resetLayout = useStoreActions(\r\n    (actions) => actions.layoutsModel.resetLayout\r\n  );\r\n\r\n  return {\r\n    activeCards,\r\n    activeWidgets,\r\n    setBufferLayout,\r\n    activeLayout,\r\n    deleteCard,\r\n    addCard,\r\n    swapCard,\r\n    // addWidget,\r\n    setActiveLayout,\r\n    useNextLayout,\r\n    clearCards,\r\n    resetLayout,\r\n    externalLayouts,\r\n  };\r\n};\r\nexport const useKeyboardShortcut = ({\r\n  keyCode,\r\n  action,\r\n  disabled,\r\n}: {\r\n  keyCode: number;\r\n  action: (event: KeyboardEvent) => void;\r\n  disabled: boolean;\r\n}): { enable: () => void; disable: () => void } => {\r\n  React.useEffect(() => {\r\n    if (!disabled) {\r\n      enable();\r\n    }\r\n    return () => {\r\n      disable();\r\n    };\r\n  });\r\n\r\n  const enable = () => {\r\n    document.addEventListener(\"keydown\", handleAction);\r\n  };\r\n\r\n  const disable = () => {\r\n    document.removeEventListener(\"keydown\", handleAction);\r\n  };\r\n\r\n  const handleAction = (e: KeyboardEvent) => {\r\n    if (e.keyCode === keyCode) {\r\n      e.preventDefault();\r\n      action(e);\r\n    }\r\n  };\r\n\r\n  return { enable, disable };\r\n};\r\n\r\ntype AnyEvent = MouseEvent | TouchEvent;\r\n\r\nexport function useOnClickOutside<T extends HTMLElement = HTMLElement>(\r\n  reference: RefObject<T>,\r\n  handler: (event: AnyEvent) => void\r\n): void {\r\n  useEffect(() => {\r\n    const listener = (event: AnyEvent) => {\r\n      const element = reference?.current;\r\n\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!element || element.contains(event.target as Node)) {\r\n        return;\r\n      }\r\n\r\n      handler(event);\r\n    };\r\n\r\n    document.addEventListener(`mousedown`, listener);\r\n    document.addEventListener(`touchstart`, listener);\r\n\r\n    return () => {\r\n      // \\\r\n\r\n      document.removeEventListener(`mousedown`, listener);\r\n      document.removeEventListener(`touchstart`, listener);\r\n    };\r\n\r\n    // Reload only if ref or handler changes\r\n  }, [reference, handler]);\r\n}\r\n\r\nexport function useEffectOnce(effect: EffectCallback): void {\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(effect, []);\r\n}\r\n\r\nexport function useTimeout(\r\n  callback: () => void,\r\n  delay: number | null\r\n): { reset: () => void; stop: () => void } {\r\n  const savedCallback = useRef(callback);\r\n  const timeOutReference = useRef<NodeJS.Timeout>();\r\n\r\n  // Remember the latest callback if it changes.\r\n  useLayoutEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    // Don't schedule if no delay is specified.\r\n    // Note: 0 is a valid value for delay.\r\n    if (!delay && delay !== 0) {\r\n      return;\r\n    }\r\n\r\n    const id = setTimeout(() => savedCallback.current(), delay);\r\n    timeOutReference.current = id;\r\n    return () => clearTimeout(id);\r\n  }, [delay]);\r\n\r\n  const reset = useCallback(() => {\r\n    if (timeOutReference.current && delay) {\r\n      clearTimeout(timeOutReference.current);\r\n      timeOutReference.current = setTimeout(savedCallback.current, delay);\r\n    }\r\n  }, [delay]);\r\n\r\n  const stop = useCallback(() => {\r\n    if (timeOutReference.current) {\r\n      clearTimeout(timeOutReference.current);\r\n    }\r\n  }, []);\r\n\r\n  return { reset, stop };\r\n}\r\nexport function useInterval(\r\n  callback: () => void,\r\n  delay: number | null\r\n): { reset: () => void; stop: () => void } {\r\n  const savedCallback = useRef(callback);\r\n  const intervalReference = useRef<NodeJS.Timeout>();\r\n\r\n  // Remember the latest callback if it changes.\r\n  useLayoutEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    // Don't schedule if no delay is specified.\r\n    // Note: 0 is a valid value for delay.\r\n    if (!delay && delay !== 0) {\r\n      return;\r\n    }\r\n\r\n    const id = setInterval(() => savedCallback.current(), delay);\r\n    intervalReference.current = id;\r\n    return () => clearInterval(id);\r\n  }, [delay]);\r\n\r\n  const reset = useCallback(() => {\r\n    if (intervalReference.current && delay) {\r\n      clearInterval(intervalReference.current);\r\n      intervalReference.current = setInterval(savedCallback.current, delay);\r\n    }\r\n  }, [delay]);\r\n\r\n  const stop = useCallback(() => {\r\n    if (intervalReference.current) {\r\n      clearInterval(intervalReference.current);\r\n    }\r\n  }, []);\r\n\r\n  return { reset, stop };\r\n}\r\n\r\nfunction useEventListener<K extends keyof WindowEventMap>(\r\n  eventName: K,\r\n  handler: (event: WindowEventMap[K]) => void\r\n): void;\r\nfunction useEventListener<\r\n  K extends keyof HTMLElementEventMap,\r\n  T extends HTMLElement = HTMLDivElement\r\n>(\r\n  eventName: K,\r\n  handler: (event: HTMLElementEventMap[K]) => void,\r\n  element: RefObject<T>\r\n): void;\r\n\r\nfunction useEventListener<\r\n  KW extends keyof WindowEventMap,\r\n  KH extends keyof HTMLElementEventMap,\r\n  T extends HTMLElement | void = void\r\n>(\r\n  eventName: KW | KH,\r\n  handler: (\r\n    event: WindowEventMap[KW] | HTMLElementEventMap[KH] | Event\r\n  ) => void,\r\n  element?: RefObject<T>\r\n) {\r\n  // Create a ref that stores handler\r\n  const savedHandler = useRef<typeof handler>();\r\n\r\n  useEffect(() => {\r\n    // Define the listening target\r\n    const targetElement: T | Window = element?.current || window;\r\n    if (!(targetElement && targetElement.addEventListener)) {\r\n      return;\r\n    }\r\n\r\n    // Update saved handler if necessary\r\n    if (savedHandler.current !== handler) {\r\n      savedHandler.current = handler;\r\n    }\r\n\r\n    // Create event listener that calls handler function stored in ref\r\n    const eventListener: typeof handler = (event) => {\r\n      // eslint-disable-next-line no-extra-boolean-cast\r\n      if (!!savedHandler?.current) {\r\n        savedHandler.current(event);\r\n      }\r\n    };\r\n\r\n    targetElement.addEventListener(eventName, eventListener);\r\n\r\n    // Remove event listener on cleanup\r\n    return () => {\r\n      targetElement.removeEventListener(eventName, eventListener);\r\n    };\r\n  }, [eventName, element, handler]);\r\n}\r\n\r\n// See: https://usehooks-ts.com/react-hook/use-event-listener\r\n\r\ninterface Size {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport function useElementSize<T extends HTMLElement = HTMLDivElement>(): [\r\n  (node: T | null) => void,\r\n  Size\r\n] {\r\n  // Mutable values like 'ref.current' aren't valid dependencies\r\n  // because mutating them doesn't re-render the component.\r\n  // Instead, we use a state as a ref to be reactive.\r\n  const [reference, setReference] = useState<T | null>(null);\r\n  const [size, setSize] = useState<Size>({\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n\r\n  // Prevent too many rendering using useCallback\r\n  const handleSize = useCallback(() => {\r\n    setSize({\r\n      width: reference?.offsetWidth || 0,\r\n      height: reference?.offsetHeight || 0,\r\n    });\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [reference?.offsetHeight, reference?.offsetWidth]);\r\n\r\n  useEventListener(\"resize\", handleSize);\r\n\r\n  useLayoutEffect(() => {\r\n    handleSize();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [reference?.offsetHeight, reference?.offsetWidth]);\r\n\r\n  return [setReference, size];\r\n}\r\n\r\nexport function useHover<T extends HTMLElement = HTMLElement>(\r\n  elementReference: RefObject<T>\r\n): boolean {\r\n  const [value, setValue] = useState<boolean>(false);\r\n\r\n  const handleMouseEnter = () => setValue(true);\r\n  const handleMouseLeave = () => setValue(false);\r\n\r\n  useEventListener(\"mouseenter\", handleMouseEnter, elementReference);\r\n  useEventListener(\"mouseleave\", handleMouseLeave, elementReference);\r\n\r\n  return value;\r\n}\r\n\r\ninterface WindowSize {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport function useWindowSize(): WindowSize {\r\n  const [windowSize, setWindowSize] = useState<WindowSize>({\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n\r\n  const handleSize = () => {\r\n    setWindowSize({\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    });\r\n  };\r\n\r\n  useEventListener(\"resize\", handleSize);\r\n\r\n  // Set size at the first client-side load\r\n  useLayoutEffect(() => {\r\n    handleSize();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return windowSize;\r\n}\r\n\r\ntype Handler = (event: MouseEvent) => void;\r\n\r\nexport function useClickAnyWhere(handler: Handler) {\r\n  useEventListener(\"click\", (event) => {\r\n    handler(event);\r\n  });\r\n}\r\n","import React from \"react\";\nimport type { DropResult } from \"react-beautiful-dnd\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\nimport { DragSource } from \"../../enums\";\nimport { useLayout, useStoreState } from \"../../hooks\";\nimport type { CardAddEvent, CardSwapEvent } from \"../../interfaces/CardEvents\";\nimport type { GridPosition } from \"../../interfaces/GridPosition\";\n\n/**\n * Handles all functionality for dragging and dropping content into the layout\n */\n\nconst stringToGridPos = (cardId: string): GridPosition => {\n  //card id's of empty cards is of \"empty_card_[x, y]\" format\n\n  const posString = cardId.split(\"[\")[1];\n  //x,y]\n  const x = Number.parseInt(posString.charAt(0));\n  //x\n  const y = Number.parseInt(posString.charAt(3));\n  //y\n  return {\n    x: x,\n    y: y,\n  } as GridPosition;\n};\n\nconst cardIsEmpty = (cardId: string): boolean => {\n  return cardId.startsWith(\"empty\");\n};\n\nconst AppDragContext = ({\n  children,\n}: {\n  children: JSX.Element | JSX.Element[];\n}): JSX.Element => {\n  const { addCard, swapCard, setActiveLayout } = useLayout();\n\n  const externalLayoutsState = useStoreState(\n    (state) => state.layoutsModel.externalLayouts\n  );\n\n  const onDragEnd = (response: DropResult): void => {\n    if (response.destination?.droppableId == response.source?.droppableId)\n      return;\n    const { source, destination, draggableId } = response;\n\n    if (!destination) return;\n    switch (source.droppableId) {\n      case DragSource.CARD_TABLE:\n        if (destination.droppableId) {\n          if (cardIsEmpty(destination.droppableId)) {\n            const cardPos = stringToGridPos(destination.droppableId);\n            const addEvent = {\n              sourceId: draggableId,\n              targetPosition: cardPos,\n            } as CardAddEvent;\n            addCard(addEvent);\n          } else {\n            swapCard({\n              sourceId: draggableId,\n              targetId: destination.droppableId,\n            } as CardSwapEvent);\n          }\n        }\n        break;\n      case DragSource.WIDGETS_TABLE:\n        const cardPos = stringToGridPos(destination.droppableId);\n        const addEvent = {\n          sourceId: draggableId,\n          targetPosition: cardPos,\n        } as CardAddEvent;\n        addCard(addEvent);\n        break;\n      case DragSource.LAYOUT_TABLE:\n        const newLayout = externalLayoutsState.filter(\n          (l) => l.id === draggableId\n        )[0];\n        setActiveLayout(newLayout);\n        break;\n      default:\n        console.log(\"got unkown drag source\");\n    }\n  };\n\n  return <DragDropContext onDragEnd={onDragEnd}>{children}</DragDropContext>;\n};\n\nexport default AppDragContext;\n","interface AppConfig {\n  //time for the app to return to display mode after no interactions in edit mode\n  idleTime: number;\n  //link to the sheet containing the list of different card content\n  //google sheets form link for saving new layouts\n  gridRows: number;\n  gridCols: number;\n  gridBottomPadding: number;\n  //scale for regular web pages\n  defaultIframeScale: number;\n  //scale of content which meant for embedding, i.e. includes \"embed\" in the url\n  defaultEmbedScale: number;\n  //the default layout from your \"layouts\" google sheet to display\n  defaultLayoutName: string;\n  showModeSwitchButton: boolean;\n  widgetIds: string[];\n  useStaticLayout: boolean;\n  rotationDuration: number;\n  noUrlTimeout: number;\n  backupParentSheetUrl: string;\n}\n\nconst appConfig: AppConfig = {\n  idleTime: process.env.NODE_ENV === \"development\" ? 100_000_000 : 10_000_000,\n  defaultIframeScale: 0.5,\n  defaultEmbedScale: 1,\n  defaultLayoutName: \"Data Vis Types Chart 1\",\n  widgetIds: [\"clock\", \"group label\", \"info\"],\n  gridRows: 6,\n  gridCols: 4,\n  showModeSwitchButton: false,\n  useStaticLayout: false,\n  gridBottomPadding: 50,\n  rotationDuration: 100_000, //ms\n  noUrlTimeout: 10,\n  backupParentSheetUrl: \"./backupSheets/BACKUP_PARENT_SHEET\",\n};\n\nexport default appConfig;\n","// eslint-disable-next-line simple-import-sort/imports\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  useApp,\r\n  useAppSettings,\r\n  useClickAnyWhere,\r\n  useInterval,\r\n  useLayout,\r\n} from \"../../hooks\";\r\nimport { AppMode } from \"../../enums\";\r\nimport appConfig from \"../../static/appConfig\";\r\nimport { useIdle } from \"react-use\";\r\n\r\nconst AppTimers = ({ children }: { children: JSX.Element }): JSX.Element => {\r\n  const isIdle = useIdle(appConfig.idleTime, false);\r\n  const { rotationSpeed, rotateLayouts } = useAppSettings();\r\n  const { appMode, toggleAppMode, transitionLayout } = useApp();\r\n\r\n  const { reset } = useInterval(() => {\r\n    if (appMode === AppMode.DISPLAY && rotateLayouts) {\r\n      transitionLayout(1);\r\n    }\r\n  }, rotationSpeed);\r\n\r\n  useClickAnyWhere(() => {\r\n    reset();\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (appMode === AppMode.EDIT) {\r\n      toggleAppMode();\r\n    }\r\n  }, [isIdle]);\r\n\r\n  return children;\r\n};\r\n\r\nexport default AppTimers;\r\n","const TestShader1 = {\n    uniforms: {\n      time: { value: 0.0 }\n    },\n    vertexShader: `\n    vec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\n    vec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\n    vec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n  \n    float snoise(vec2 v) {\n        const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                            0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                            -0.577350269189626,  // -1.0 + 2.0 * C.x\n                            0.024390243902439); // 1.0 / 41.0\n        vec2 i  = floor(v + dot(v, C.yy) );\n        vec2 x0 = v -   i + dot(i, C.xx);\n        vec2 i1;\n        i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n        vec4 x12 = x0.xyxy + C.xxzz;\n        x12.xy -= i1;\n        i = mod289(i); // Avoid truncation effects in permutation\n        vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n            + i.x + vec3(0.0, i1.x, 1.0 ));\n  \n        vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n        m = m*m ;\n        m = m*m ;\n        vec3 x = 2.0 * fract(p * C.www) - 1.0;\n        vec3 h = abs(x) - 0.5;\n        vec3 ox = floor(x + 0.5);\n        vec3 a0 = x - ox;\n        m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n        vec3 g;\n        g.x  = a0.x  * x0.x  + h.x  * x0.y;\n        g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n        return 130.0 * dot(m, g);\n    }\n  \n  \n    \n  \n    uniform float u_time;\n    uniform vec2 u_randomisePosition;\n  \n    varying float vDistortion;\n    varying float xDistortion;\n    varying vec2 vUv;\n  \n    void main() {\n        vUv = uv;\n        vDistortion = snoise(vUv.xx * 3. - u_randomisePosition * 0.15);\n        xDistortion = snoise(vUv.yy * 1. - u_randomisePosition * 0.05);\n        vec3 pos = position;\n        pos.z += (vDistortion * 35.);\n        pos.x += (xDistortion * 25.);\n  \n        gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n    }\n    `,\n    fragmentShader: `\n    vec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\n    vec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\n    vec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n  \n    float snoise(vec2 v) {\n        const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                            0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                            -0.577350269189626,  // -1.0 + 2.0 * C.x\n                            0.024390243902439); // 1.0 / 41.0\n        vec2 i  = floor(v + dot(v, C.yy) );\n        vec2 x0 = v -   i + dot(i, C.xx);\n        vec2 i1;\n        i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n        vec4 x12 = x0.xyxy + C.xxzz;\n        x12.xy -= i1;\n        i = mod289(i); // Avoid truncation effects in permutation\n        vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n            + i.x + vec3(0.0, i1.x, 1.0 ));\n  \n        vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n        m = m*m ;\n        m = m*m ;\n        vec3 x = 2.0 * fract(p * C.www) - 1.0;\n        vec3 h = abs(x) - 0.5;\n        vec3 ox = floor(x + 0.5);\n        vec3 a0 = x - ox;\n        m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n        vec3 g;\n        g.x  = a0.x  * x0.x  + h.x  * x0.y;\n        g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n        return 130.0 * dot(m, g);\n    }\n  \n  \n  \n  \n  \n    vec3 rgb(float r, float g, float b) {\n      return vec3(r / 255., g / 255., b / 255.);\n  }\n  \n  vec3 rgb(float c) {\n      return vec3(c / 255., c / 255., c / 255.);\n  }\n  \n  uniform vec3 u_bg;\n  uniform vec3 u_bgMain;\n  uniform vec3 u_color1;\n  uniform vec3 u_color2;\n  uniform float u_time;\n  \n  varying vec2 vUv;\n  varying float vDistortion;\n  \n  void main() {\n      vec3 bg = rgb(u_bg.r, u_bg.g, u_bg.b);\n      vec3 c1 = rgb(u_color1.r, u_color1.g, u_color1.b);\n      vec3 c2 = rgb(u_color2.r, u_color2.g, u_color2.b);\n      vec3 bgMain = rgb(u_bgMain.r, u_bgMain.g, u_bgMain.b);\n  \n      float noise1 = snoise(vUv + u_time * 0.08);\n      float noise2 = snoise(vUv * 2. + u_time * 0.1);\n  \n      vec3 color = bg;\n      color = mix(color, c1, noise1 * 0.6);\n      color = mix(color, c2, noise2 * .4);\n  \n      color = mix(color, mix(c1, c2, vUv.x), vDistortion);\n  \n      float border = smoothstep(0.1, 0.6, vUv.x);\n  \n      color = mix(color, bgMain, 1. -border);\n  \n      gl_FragColor = vec4(color, 1.0);\n  }\n    `\n  }\n  \n  export default TestShader1","import type GoogleSheet from \"./interfaces/GoogleSheet\";\nimport type SheetId from \"./interfaces/SheetId\";\n\n// export function getSheet<T>(sheetId: SheetId): Promise<GoogleSheet<T>> {\n//   return new Promise<GoogleSheet<T>>(function (resolve, reject) {\n//     fetch(\n//       \"https://spreadsheets.google.com/feeds/list/1wQ1TGqnCTmaqqDak1rTRxPMSGSGLMilwrecf7TuqDGc/1/public/values?alt=json\"\n//     ).then((res) => {\n//       console.log(res);\n//       res.json();\n//     });\n//     // labeledCols(sheetId.key, sheetId.sheet_number)\n//     GetSheetDone.labeledCols(sheetId.key, sheetId.sheet_number)\n//       .then((sheet: GoogleSheet<T>) => {\n//         console.log(sheet);\n//         resolve(sheet);\n//       })\n//       .catch((error: unknown) => {\n//         console.error(\n//           `Error: ${error} fetching DOC_KEY ${sheetId.key}, sheet number ${sheetId.sheet_number}`\n//         );\n//       });\n//   });\n// }\n\nexport function formatDate(date: Date | undefined): string {\n  if (date) {\n    const d = new Date(date);\n    let month = \"\" + (d.getMonth() + 1);\n    let day = \"\" + d.getDate();\n    const year = d.getFullYear().toString().slice(2);\n\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n\n    return [month, day, year].join(\".\");\n  } else {\n    return \"faulty date\";\n  }\n}\n\n// String.prototype.toTitleCase = function () { return this.valueOf().toLowerCase().replace(this.valueOf()[0], this.valueOf()[0].toUpperCase()); }\nexport function toTitleCase(string: string) {\n  const words = string.split(\" \");\n  return words.map((w) => titleCapitilization(w)).join(\" \");\n}\nfunction titleCapitilization(string: string) {\n  const regex = /^[a-z]{0,1}|\\s\\w/gi;\n\n  string = string.toLowerCase();\n\n  string.match(regex)?.forEach((char) => {\n    string = string.replace(char, char.toUpperCase());\n  });\n\n  return string;\n}\n\nexport function randomIntFromInterval(min: number, max: number) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport function randomNumber(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\n// function\n\n// const toTitleCase = (str: string) => {\n//   const articles = ['a', 'an', 'the'];\n//   const conjunctions = ['for', 'and', 'nor', 'but', 'or', 'yet', 'so'];\n//   const prepositions = [\n//     'with', 'at', 'from', 'into','upon', 'of', 'to', 'in', 'for',\n//     'on', 'by', 'like', 'over', 'plus', 'but', 'up', 'down', 'off', 'near'\n//   ];\n\n//   // The list of spacial characters can be tweaked here\n//   const replaceCharsWithSpace = (str) => str.replace(/[^0-9a-z&/\\\\]/gi, ' ').replace(/(\\s\\s+)/gi, ' ');\n//   const capitalizeFirstLetter = (str) => str.charAt(0).toUpperCase() + str.substr(1);\n//   const normalizeStr = (str) => str.toLowerCase().trim();\n//   const shouldCapitalize = (word, fullWordList, posWithinStr) => {\n//     if ((posWithinStr == 0) || (posWithinStr == fullWordList.length - 1)) {\n//       return true;\n//     }\n\n//     return !(articles.includes(word) || conjunctions.includes(word) || prepositions.includes(word));\n//   }\n\n//   str = replaceCharsWithSpace(str);\n//   str = normalizeStr(str);\n\n//   let words = str.split(' ');\n//   if (words.length <= 2) { // Strings less than 3 words long should always have first words capitalized\n//     words = words.map(w => capitalizeFirstLetter(w));\n//   }\n//   else {\n//     for (let i = 0; i < words.length; i++) {\n//       words[i] = (shouldCapitalize(words[i], words, i) ? capitalizeFirstLetter(words[i], words, i) : words[i]);\n//     }\n//   }\n\n//   return words.join(' ');\n// }\n","import React, { useRef } from 'react'\nimport { Canvas, useFrame, } from '@react-three/fiber'\n\nimport TestShader1 from './TestShader1'\nimport { OrbitControls, PerspectiveCamera } from '@react-three/drei'\nimport * as THREE from 'three'\nimport {randomIntFromInterval} from \"../../utils\"\nvar randomisePosition = new THREE.Vector2(1, 2)\n\nfunction rgb(r, g, b) {\n  return new THREE.Vector3(r, g, b)\n}\n\nconst segmentsResolution = 45\n\nconst baseColors = {\n  pink: rgb(182, 9, 76),\n  brightPink: rgb(241, 3, 66),\n  darkPurple: rgb(42, 8, 56),\n  orange: rgb(244, 93, 31),\n  darkgrey: rgb(50,50,50),\n  lightgrey: rgb(150,150,150),\n  red: rgb(204, 0, 0)\n}\n\nconst uniforms = {\n  u_bg: { type: 'v3', value: baseColors.lightgrey },\n  u_bgMain: { type: 'v3', value: baseColors.lightgrey },\n  u_color1: { type: 'v3', value: baseColors.lightgrey },\n  u_color2: { type: 'v3', value: baseColors.lightgrey },\n  u_time: { type: 'f', value: 0 },\n  u_randomisePosition: { type: 'v2', value: randomisePosition }\n}\nconst R = function (x, y, t) {\n  return Math.floor(192 + 64 * Math.cos((x * x - y * y) / 300 + t))\n}\n\nconst G = function (x, y, t) {\n  return Math.floor(192 + 64 * Math.sin((x * x * Math.cos(t / 4) + y * y * Math.sin(t / 3)) / 300))\n}\n\nconst B = function (x, y, t) {\n  return Math.floor(192 + 64 * Math.sin(5 * Math.sin(t / 9) + ((x - 100) * (x - 100) + (y - 100) * (y - 100)) / 1100))\n}\n\nconst ShadedGeometry1 = ({ position }) => {\n  const shaderMaterialRef = useRef()\n  let t = 0\n  let j = 0\n  \n  let x = randomIntFromInterval(0,32)\n  let y = randomIntFromInterval(0, 32)\n  let vCheck = false\n\n  useFrame(({ clock }) => {\n    shaderMaterialRef.current.uniforms.u_randomisePosition.value = new THREE.Vector2(j, j)\n    shaderMaterialRef.current.uniforms.u_color1.value = new THREE.Vector3(R(x, y, t / 2), G(x, y, t / 2), B(x, y, t / 2))\n\n    shaderMaterialRef.current.uniforms.u_time.value = t\n    if (t % 0.1 === 0) {\n      if (vCheck === false) {\n        x -= 1\n        if (x <= 0) {\n          vCheck = true\n        }\n      } else {\n        x += 1\n        if (x >= 32) {\n          vCheck = false\n        }\n      }\n    }\n    // Increase t by a certain value every frame\n    j = j + 0.01\n    t = t + 0.01\n  })\n\n  return (\n    <mesh position={position} rotation={[THREE.MathUtils.degToRad(0), THREE.MathUtils.degToRad(0), THREE.MathUtils.degToRad(90)]}>\n      <planeGeometry attach=\"geometry\" args={[400, window.innerWidth / 2, segmentsResolution, segmentsResolution]} />\n      <shaderMaterial\n        attach=\"material\"\n        vertexShader={TestShader1.vertexShader}\n        fragmentShader={TestShader1.fragmentShader}\n        uniforms={uniforms}\n        ref={shaderMaterialRef}\n      />\n    </mesh>\n  )\n}\n\nconst BackgroundShader = () => {\n  const cam = useRef()\n  return (\n    <Canvas gl={{ antialias: false, alpha: false }}>\n      <PerspectiveCamera ref={cam} position={[0, 0, 0]} fov={75} aspect={window.innerWidth / window.innerHeight} near={0.1} far={1000} />\n      <ShadedGeometry1 position={[0, 0, -100]} faceResolution={100} />\n      <OrbitControls />\n    </Canvas>\n  )\n}\n\nexport default BackgroundShader\n","import \"../css/background.css\";\n\nimport classNames from \"classnames\";\nimport React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { AppMode } from \"../enums\";\nimport { useApp } from \"../hooks\";\nimport BackgroundShader from \"./Background/BackgroundShader\";\n\nconst Background = (): JSX.Element => {\n  const { appMode } = useApp();\n\n  const [backgroundStyle, setBackgroundStyle] = useState({\n    backgroundColor: \"gray\",\n  } as React.CSSProperties);\n  useEffect(() => {\n    const style = {\n      position: \"absolute\",\n      height: \"100vh\",\n      width: \"100vw\",\n      top: 0,\n      left: 0,\n      backgroundColor: appMode === AppMode.EDIT ? \"#2d2d2d\" : \"gray\",\n      transition: \"background-color 0.5s ease\",\n    } as React.CSSProperties;\n    setBackgroundStyle(style);\n  }, [appMode]);\n\n  const backgroundClass = classNames(\"background-container\", {\n    \"background-container-display-mode\": appMode == AppMode.DISPLAY,\n    \"background-container-edit-mode\": appMode == AppMode.EDIT,\n  });\n\n  const bgFillSolid = {\n    position: \"absolute\",\n    height: \"100vh\",\n    width: \"100vw\",\n    top: 0,\n    left: 0,\n    backgroundColor: \"lightgrey\",\n    transition: \"background-color 0.5s ease\",\n  } as React.CSSProperties;\n\n  return ReactDOM.createPortal(\n    <div className={backgroundClass} style={backgroundStyle}>\n      {appMode === AppMode.EDIT ? (\n        <div style={bgFillSolid}></div>\n      ) : (\n        <div className=\"background-container\">\n          <div className=\"shader-container\">\n            <BackgroundShader />\n          </div>\n          <div className=\"particle-container\"></div>\n        </div>\n      )}\n    </div>,\n    document.querySelector(\"#background\") as HTMLElement\n  );\n};\n\nexport default React.memo(Background);\n","import React, { useEffect, useRef,useState } from \"react\";\r\n\r\nimport { CardView } from \"../../enums\";\r\nimport { useAppSettings } from \"../../hooks\";\r\nimport type { CardContentProperties } from \"../CardContent\";\r\n\r\ntype CardIFrameProperties = Pick<\r\n  CardContentProperties,\r\n  \"onLoad\" | \"onError\" | \"cardSettings\" | \"card\" | \"cardView\"\r\n>;\r\n\r\nconst CardIFrame = ({\r\n  onLoad,\r\n  onError,\r\n  card,\r\n  cardSettings,\r\n  cardView,\r\n}: CardIFrameProperties): JSX.Element => {\r\n  const { enableIframeInteractions } = useAppSettings();\r\n  //   const { scale } = cardSettings;\r\n  const scale = cardSettings?.scale ?? 1;\r\n  const { src } = card;\r\n  return (\r\n    <iframe\r\n      onError={(event) => {\r\n        onError(event, card);\r\n      }}\r\n      onLoad={(event) => {\r\n        onLoad(event, card);\r\n      }}\r\n      src={src}\r\n      style={{\r\n        transform: `scale(${scale})`,\r\n        pointerEvents: enableIframeInteractions ? \"all\" : \"none\",\r\n        width: `${100 * (1 / scale)}%`,\r\n        height: `${100 * (1 / scale)}%`,\r\n        transformOrigin: \"top left\",\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default CardIFrame;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport { CardView } from \"../../enums\";\r\nimport type { CardContentProperties } from \"../CardContent\";\r\n\r\ntype CardImageProperties = Pick<\r\n  CardContentProperties,\r\n  \"onLoad\" | \"onError\" | \"cardSettings\" | \"card\" | \"cardView\"\r\n>;\r\n\r\nconst CardImage = ({\r\n  onLoad,\r\n  onError,\r\n  card,\r\n  cardSettings,\r\n  cardView,\r\n}: CardImageProperties): JSX.Element => {\r\n  const { src } = card;\r\n  return (\r\n    <img\r\n      onError={(event) => {\r\n        onError(event, card);\r\n      }}\r\n      onLoad={(event) => {\r\n        // setIsLoaded(true);\r\n        onLoad(event, card);\r\n      }}\r\n      src={src}\r\n      style={{\r\n        transform: `scale(${cardSettings?.scale ?? 1})`,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        //@ts-ignore\r\n        objectFit: cardSettings?.contentFit ?? \"cover\",\r\n        objectPosition: cardView === CardView.PREVIEW ? \"contain\" : \"center\",\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default CardImage;\r\n","import \"../css/iframeView.css\";\r\n\r\nimport classNames from \"classnames\";\r\nimport type { FC} from \"react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\n\r\nimport type CardData from \"../data_structs/CardData\";\r\nimport type { CardView } from \"../enums\";\r\nimport { useAppSettings } from \"../hooks\";\r\nimport type { CardSettings } from \"../interfaces/CardSettings\";\r\nimport CardIFrame from \"./CardContent/CardIFrame\";\r\nimport CardImage from \"./CardContent/CardImage\";\r\nimport type {\r\n  CardErrorHandler,\r\n  CardLoadHandler,\r\n} from \"./CardLayout/ViewCard/ViewCard\";\r\n\r\nexport interface CardContentProperties {\r\n  card: CardData;\r\n  scale: number;\r\n  cardView: CardView;\r\n  onError: CardErrorHandler;\r\n  onLoad: CardLoadHandler;\r\n  cardSettings?: CardSettings;\r\n  objectFit?: string;\r\n}\r\n/**\r\n * Minimal warpper for an <iframe>. Can be toggled between a full screen, active view, and a regular card view.\r\n * @component\r\n * @example\r\n * const my_url = \"https://www.youtube.com/embed/tgbNymZ7vqY\";\r\n * return(\r\n *  <IFrameView src = {my_url}/>\r\n * )\r\n */\r\nconst IFrameView: FC<CardContentProperties> = ({\r\n  card,\r\n  scale,\r\n  cardView,\r\n  onError,\r\n  onLoad,\r\n  objectFit,\r\n  cardSettings,\r\n}) => {\r\n  const [active, setActive] = useState(false);\r\n  const [valid, setIsValid] = useState(true);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  const indexFrameContainerClass = classNames(\"iframe-container\", {\r\n    \"iframe-container-hidden\": !valid,\r\n  });\r\n\r\n  useEffect(() => {}, [cardView]);\r\n\r\n  const qrContainerStyle = {\r\n    width: \"100%\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    zIndex: 10,\r\n  } as React.CSSProperties;\r\n\r\n  const { src, contentType } = card;\r\n\r\n  return (\r\n    <div\r\n      className={indexFrameContainerClass}\r\n      onDoubleClick={() => {\r\n        setActive(!active);\r\n      }}\r\n    >\r\n      {contentType === \"video\" ? (\r\n        <ResponsivePlayer\r\n          onReady={(event) => {\r\n            setIsLoaded(true);\r\n          }}\r\n          src={card.src}\r\n        />\r\n      ) : contentType === \"image\" ? (\r\n        <CardImage\r\n          card={card}\r\n          cardSettings={cardSettings}\r\n          cardView={cardView}\r\n          onError={onError}\r\n          onLoad={onLoad}\r\n        />\r\n      ) : (\r\n        <CardIFrame\r\n          card={card}\r\n          cardSettings={cardSettings}\r\n          cardView={cardView}\r\n          onError={onError}\r\n          onLoad={onLoad}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(IFrameView);\r\n\r\nconst ResponsivePlayer = ({\r\n  src,\r\n  onReady,\r\n}: {\r\n  src: string;\r\n  onReady: (e: ReactPlayer) => void;\r\n}): JSX.Element => {\r\n  return (\r\n    <div className=\"player-wrapper\">\r\n      <ReactPlayer\r\n        className=\"react-player\"\r\n        controls\r\n        height=\"100%\"\r\n        muted\r\n        onReady={onReady}\r\n        playing\r\n        url={src}\r\n        width=\"100%\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import \"../../css/pulsar.css\";\r\n\r\nimport { AddIcon } from \"evergreen-ui\";\r\nimport React from \"react\";\r\ninterface PulsarProperties {}\r\n\r\nconst Pulsar = () => {\r\n  return (\r\n    <div className=\"pulsar\">\r\n      <AddIcon size={150}></AddIcon>\r\n      {/* <div className={\"ring\"}></div> */}\r\n      {/* <div className={\"ring\"}></div>\r\n      <div className={\"ring\"}></div>\r\n      <div className={\"ring\"}></div>\r\n      <div className={\"ring\"}></div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pulsar;\r\n","import \"../../css/droppable.css\";\n\nimport { AddIcon } from \"evergreen-ui\";\nimport type { FC, ReactNode} from \"react\";\nimport React, { useEffect } from \"react\";\nimport type { DroppableProps } from \"react-beautiful-dnd\";\nimport { Droppable } from \"react-beautiful-dnd\";\n\nimport type { DndTypes } from \"../../enums\";\nimport Pulsar from \"../Shared/Pulsar\";\ninterface IXDrop extends Omit<DroppableProps, \"children\"> {\n  children: ReactNode;\n  cardType: DndTypes;\n  className?: string;\n}\n\n/**A droppable container. Wraps child widgets in a react-beautiful-dnd Droppable component, and renders a \"+\" if a draggable is dragging over the container */\nconst IXDrop: FC<IXDrop> = ({\n  children,\n  className,\n  cardType,\n  ...properties\n}) => {\n  // const droppableContainert className = {\"droppable \" + className}\n  return (\n    <Droppable {...properties} type=\"DEFAULT\">\n      {(provided, snapshot) => {\n        return (\n          <div\n            {...provided.innerRef}\n            className={\n              snapshot.isDraggingOver\n                ? \"droppable-hovered\" + \" \" + className\n                : \"droppable\" + \" \" + className\n            }\n            ref={provided.innerRef}\n          >\n            <div\n              className={\n                snapshot.isDraggingOver\n                  ? \"droppable-overlay droppable-overlay-visible\"\n                  : \"droppable-overlay droppable-overlay-hidden\"\n              }\n            >\n              <Pulsar />\n            </div>\n            {children}\n            {provided.placeholder}\n          </div>\n        );\n      }}\n    </Droppable>\n  );\n};\n\nexport default IXDrop;\n","import \"../../css/clock.css\";\r\n\r\nimport { Heading } from \"evergreen-ui\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n/**\r\n * Simple clock widget for displaying the current time.\r\n * @component\r\n */\r\nconst Clock = (): JSX.Element => {\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  const containerStyle = {\r\n    height: \"100%\",\r\n    padding: \".25em\",\r\n    overflow: \"hidden\",\r\n    width: \"100%\",\r\n    fontWeight: 600,\r\n    color: \"white\",\r\n    boxSizing: \"border-box\",\r\n  } as React.CSSProperties;\r\n\r\n  useEffect(() => {\r\n    const timerID = setInterval(() => tick(), 1000);\r\n    return function cleanup() {\r\n      clearInterval(timerID);\r\n    };\r\n  });\r\n\r\n  function tick(): void {\r\n    setDate(new Date());\r\n  }\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <div style={{ color: \"white\", fontSize: \"9vmin\" }}>\r\n        Data Experience Lab\r\n      </div>\r\n      <div style={{ color: \"white\", fontSize: \"9vmin\" }}>\r\n        {date.toLocaleTimeString(\"en-IT\", { hour12: true, timeStyle: \"short\" })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Clock;\r\n","//TODO: UNIFY MODAL CSS\nimport \"../../css/howToUse.css\";\nimport \"../../css/popup.css\";\n\nimport { motion } from \"framer-motion\";\nimport React, { useEffect,useRef, useState } from \"react\";\n\nconst Modal = ({\n  children,\n  active,\n  containerClassName,\n  onClose,\n  backdropOpacity,\n}: {\n  active: boolean;\n  children: JSX.Element | JSX.Element[];\n\n  onClose: () => void;\n  backdropOpacity?: number;\n  containerClassName?: string;\n}): JSX.Element => {\n  return (\n    <motion.div\n      animate={{ y: 0 }}\n      className=\"modal-container\"\n      style={{\n        display: active ? \"flex\" : \"none\",\n        width: \"100vw\",\n        height: \"100vh\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        // y: -200,\n      }}\n    >\n      <MyBackdrop backdropOpacity={backdropOpacity ?? 0} onClose={onClose} />\n      <div className={containerClassName} style={{ zIndex: 1000 }}>\n        {children}\n      </div>\n    </motion.div>\n  );\n};\n\nexport default Modal;\n\ninterface BackdropProperties {\n  backdropOpacity: number;\n  onClose: () => void;\n}\nconst MyBackdrop = ({ onClose, backdropOpacity }: BackdropProperties) => {\n  return (\n    <div\n      className=\"pop-up-background\"\n      onMouseUp={onClose}\n      style={{ opacity: backdropOpacity, zIndex: 200 }}\n    ></div>\n  );\n};\n","import \"../../css/panel.css\";\n\nimport { AddIcon } from \"evergreen-ui\";\nimport React from \"react\";\n\ninterface PanelProperties{\n    children: JSX.Element | JSX.Element[]\n    padding?: string;\n    flexDirection?: \"column\" | \"row\"; \n    className?: string;\n\n}\n\nconst Panel = ({children, className, padding, flexDirection}:PanelProperties): JSX.Element => {\n  const panelStyle = {\n      padding: padding??\"0em\",\n      flexDirection: flexDirection??\"column\"\n  } as React.CSSProperties\n\n  return (\n    <div className={\"panel\"+ \" \" + className??\"\"} style = {panelStyle}>\n        {children}\n    </div>\n  );\n};\n\nexport default Panel;\n","import \"../../css/howToUse.css\";\n\nimport { Heading, Text } from \"evergreen-ui\";\nimport { motion } from \"framer-motion\";\nimport React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Modal from \"../Shared/Modal\";\nimport Panel from \"../Shared/Panel\";\n\nconst HowToUsePopUp = ({\n  active,\n  onClose,\n}: {\n  active: boolean;\n  onClose: () => void;\n}): JSX.Element => {\n  const variants = {\n    hidden: {\n      y: 100,\n      opacity: 0,\n    },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        duration: 0.5,\n      },\n    },\n  };\n\n  useEffect(() => {\n    console.log(active);\n  }, [active]);\n  return ReactDOM.createPortal(\n    <Modal\n      active={active}\n      // containerClassName=\"how-to-use-popup\"\n      backdropOpacity={0}\n      onClose={onClose}\n    >\n      <motion.div\n        animate={active ? \"visible\" : \"hidden\"}\n        style={{\n          width: \"30vw\",\n          height: \"80vh\",\n          backgroundColor: \"white\",\n          borderRadius: 10,\n          padding: \"1em\",\n        }}\n        variants={variants}\n      >\n        <Panel>\n          <Heading>Connect Labtop</Heading>\n          <hr></hr>\n          <Text>Connect your labtop to use this screen as a display.</Text>\n          <img\n            className=\"how-to-image\"\n            src={process.env.PUBLIC_URL + \"/labtopdiagram.png\"}\n          />\n          <Heading>Explore Content</Heading>\n          <hr></hr>\n          <Text>Click on a card to explore data related content.</Text>\n          <img\n            className=\"how-to-image\"\n            src={process.env.PUBLIC_URL + \"/masonary.png\"}\n          />\n        </Panel>\n      </motion.div>\n    </Modal>,\n    document.querySelector(\"#popup-container\") as HTMLDivElement\n  );\n};\n\nexport default HowToUsePopUp;\n","import type { ButtonAppearance, IntentTypes } from \"evergreen-ui\";\r\nimport { Button as EverGreenButton } from \"evergreen-ui\";\r\nimport React from \"react\";\r\n\r\n/**\r\n * Wraps an Evergreen UI Button, providing it with an onClick property.\r\n */\r\n\r\ninterface ButtonProperties {\r\n  onClick: React.MouseEventHandler<HTMLDivElement>;\r\n  text?: string;\r\n  appearance?: ButtonAppearance;\r\n  className?: string;\r\n  iconBefore?: JSX.Element;\r\n  width?: number | string;\r\n  height?: number | string;\r\n  containerClass?: string;\r\n  style?: React.CSSProperties;\r\n  fontSize?: string;\r\n  intent?: IntentTypes;\r\n}\r\nconst Button = ({\r\n  onClick,\r\n  text,\r\n  appearance,\r\n  className,\r\n  iconBefore,\r\n  width,\r\n  height,\r\n  style,\r\n  containerClass,\r\n  fontSize,\r\n  intent,\r\n}: ButtonProperties): JSX.Element => {\r\n  return (\r\n    <div\r\n      className={containerClass}\r\n      onMouseUp={onClick}\r\n      style={{ width: width, height: \"100%\" }}\r\n    >\r\n      <EverGreenButton\r\n        appearance={appearance ?? \"default\"}\r\n        //use evergreen's default button with if no width is provided\r\n        className={className}\r\n        cursor=\"pointer\"\r\n        fontSize={fontSize}\r\n        height={height ?? undefined}\r\n        iconBefore={iconBefore ?? undefined}\r\n        intent={intent ?? \"none\"}\r\n        style={style}\r\n        width={width ?? undefined}\r\n      >\r\n        {text}\r\n      </EverGreenButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import \"../../css/clock.css\";\n\nimport { HandUpIcon } from \"evergreen-ui\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { AppMode } from \"../../enums\";\nimport { useApp, useToggle } from \"../../hooks\";\nimport HowToUsePopUp from \"../HowToUse/HowToUsePopUp\";\nimport Button from \"../Shared/Button\";\n\n/**\n * Simple clock widget for displaying the current time.\n * @component\n */\nconst HowToUse = (): JSX.Element => {\n  const [date, setDate] = useState(new Date());\n\n  const containerStyle = {\n    height: \"100%\",\n    // padding: \".25em\",\n    width: \"100%\",\n    fontSize: \"9vmin\",\n    fontWeight: 600,\n    color: \"white\",\n    boxSizing: \"border-box\",\n    backgroundColor: \"blue\",\n  } as React.CSSProperties;\n\n  const [visible, toggleVisible] = useToggle(false);\n\n  useEffect(() => {\n    const timerID = setInterval(() => tick(), 1000);\n    return function cleanup() {\n      clearInterval(timerID);\n    };\n  });\n\n  function tick(): void {\n    setDate(new Date());\n  }\n\n  const { appMode } = useApp();\n\n  return (\n    <div id=\"how-to-use-button-widget\" style={containerStyle}>\n      {/* {appMode === AppMode.DISPLAY && ( */}\n      <HowToUsePopUp active={visible} onClose={toggleVisible} />\n      {/* )} */}\n      {/* {appMode === AppMode.DISPLAY && ( */}\n      <Button\n        appearance=\"primary\"\n        className=\"how-to-use-button\"\n        fontSize=\"xx-large\"\n        // height=\"4vh\"\n        height=\"100%\"\n        iconBefore={<HandUpIcon />}\n        onClick={toggleVisible}\n        // width=\"35vw\"\n        text=\"Learn how to use this display\"\n        width=\"100%\"\n      />\n      {/* )} */}\n    </div>\n  );\n};\n\nexport default HowToUse;\n","import React from \"react\";\r\n\r\nimport type { WidgetType } from \"../../data_structs/WidgetData\";\r\nimport type WidgetData from \"../../data_structs/WidgetData\";\r\nimport type { CardSettings } from \"../../interfaces/CardSettings\";\r\nimport Clock from \"./Clock\";\r\nimport HowToUse from \"./HowToUse\";\r\n\r\nconst WidgetRenderer = ({\r\n  widget,\r\n  scale,\r\n  colWidth,\r\n  rowHeight,\r\n  cardSettings,\r\n}: {\r\n  widget: WidgetData;\r\n  scale?: number;\r\n  colWidth?: number;\r\n  rowHeight?: number;\r\n  cardSettings?: CardSettings;\r\n}): JSX.Element => {\r\n  const renderWidget = (widgetId: WidgetType) => {\r\n    let widg = <div></div>;\r\n    switch (widgetId) {\r\n      case \"clock\":\r\n        widg = <Clock />;\r\n        break;\r\n      case \"info\":\r\n        widg = <HowToUse />;\r\n        break;\r\n      default:\r\n        widg = <div></div>;\r\n    }\r\n\r\n    return widg;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"card-display\"\r\n      style={{\r\n        width: colWidth ? widget.w * colWidth : \"100%\",\r\n        height: rowHeight ? widget.h * rowHeight : \"100%\",\r\n        transform: `scale(${scale})`,\r\n        transformOrigin: \"top left\",\r\n        borderRadius: \".5em\",\r\n        overflow: \"hidden\",\r\n      }}\r\n    >\r\n      {renderWidget(widget.id)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WidgetRenderer;\r\n","import type { ReactNode } from \"react\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport type CardData from \"../../../data_structs/CardData\";\r\nimport type WidgetData from \"../../../data_structs/WidgetData\";\r\nimport { useCardEditor } from \"../../../hooks\";\r\nimport type { CardSettings } from \"../../../interfaces/CardSettings\";\r\n\r\nconst CardBackdrop = ({\r\n  children,\r\n  card,\r\n  cardSettings,\r\n}: {\r\n  cardSettings?: CardSettings;\r\n  children: ReactNode;\r\n  card: WidgetData | CardData;\r\n}): JSX.Element => {\r\n  const { editingCard } = useCardEditor();\r\n  return (\r\n    <div\r\n      className=\"card-backdrop\"\r\n      style={{\r\n        overflow: \"hidden\",\r\n        borderRadius: \"0.5em\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        backgroundColor: cardSettings?.backgroundColor ?? \"\",\r\n        boxShadow: \"0 8px 32px 0 rgba(49, 49, 49, 0.37)\",\r\n        border:\r\n          card.id === editingCard?.id\r\n            ? \"3px solid white\"\r\n            : \"1px solid rgba(255, 255, 255, 0.294)\",\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardBackdrop;\r\n","import \"../../../css/cardInfo.css\"\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nimport type CardData from \"../../../data_structs/CardData\";\r\n/**\r\n * Formats text from a CardData object, including it's title and source url.\r\n * @component\r\n */\r\nconst CardInfo = ({\r\n  data,\r\n  className,\r\n}: {\r\n  data: CardData;\r\n  className: string;\r\n}): JSX.Element => {\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  const titleStyle = {\r\n    // fontSize: \"large\",\r\n  };\r\n  return (\r\n    <div className=\"card-footer\">\r\n        <h2 style={titleStyle}>{data.title}</h2>\r\n        {/* <a>{data.src}</a> */}\r\n        <p>\r\n          Lorem Ipsum is simply dummy text of the printing and typesetting\r\n          industry. Lorem Ipsum has been the industry&apos standard dummy text\r\n          ever since the 1500s, when an unknown printer took a galley of type\r\n          and scrambled it to make a type specimen book{\" \"}\r\n        </p>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default CardInfo;\r\n","import { motion } from \"framer-motion\";\r\nimport React from \"react\";\r\n\r\nimport type CardData from \"../../../data_structs/CardData\";\r\nimport type WidgetData from \"../../../data_structs/WidgetData\";\r\nimport { AppMode } from \"../../../enums\";\r\nimport { useApp } from \"../../../hooks\";\r\nimport { randomNumber } from \"../../../utils\";\r\n\r\nconst CardMotionWrapper = ({\r\n  children,\r\n  animation,\r\n  card,\r\n  backgroundColor,\r\n}: {\r\n  card: WidgetData | CardData;\r\n  animation: string;\r\n  children: JSX.Element | JSX.Element[] | undefined;\r\n  backgroundColor: string;\r\n}): JSX.Element => {\r\n  const variants = {\r\n    active: {\r\n      opacity: 1,\r\n      transition: {\r\n        delay: randomNumber(0.4, 0.5),\r\n        duration: 0.5,\r\n      },\r\n    },\r\n    preview: {\r\n      opacity: 1,\r\n      transition: {\r\n        duration: 0.2,\r\n      },\r\n    },\r\n    none: {\r\n      opacity: 1,\r\n      x: 0,\r\n      y: 0,\r\n    },\r\n    error: {\r\n      backgroundColor: \"red\",\r\n    },\r\n    loaded: {\r\n      opacity: 1,\r\n      transition: {\r\n        delay: randomNumber(0.4, 0.5),\r\n        duration: 0.5,\r\n      },\r\n      x: 0,\r\n    },\r\n    out: {\r\n      y: randomNumber(-50, -75),\r\n      opacity: 0,\r\n      transition: {\r\n        delay: randomNumber(0.1, 0.5),\r\n        duration: 0.5,\r\n      },\r\n    },\r\n  };\r\n\r\n  const { appMode } = useApp();\r\n\r\n  return (\r\n    <motion.div\r\n      animate={animation}\r\n      initial={card?.contentType === \"widget\" ? \"loaded\" : \"\"}\r\n      layoutId=\"viewcard\"\r\n      style={{\r\n        // boxShadow: \"0 8px 32px 0 rgba(49, 49, 49, 0.37)\",\r\n        // border: \"1px solid rgba(255, 255, 255, 0.294)\",\r\n        // transformOrigin: \"center\",\r\n        // willChange: \"transform\",\r\n        // height: \"100%\",\r\n        // backgroundColor: backgroundColor,\r\n        opacity: appMode === AppMode.DISPLAY ? 0 : 1,\r\n        y: 0,\r\n      }}\r\n      variants={variants}\r\n    >\r\n      {children}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default CardMotionWrapper;\r\n","import \"../../../css/deleteButton.css\";\n\nimport { DeleteIcon } from \"evergreen-ui\";\nimport React from \"react\";\n\ninterface DeleteButtonProperties {\n    action: ()=>void;\n    onClick: React.MouseEventHandler<HTMLDivElement>;\n  }\n  \n\nconst DeleteButton = ({ onClick, action }: DeleteButtonProperties): JSX.Element => {\n    return (\n      <div\n        className=\"delete-button-container\"\n        onClick={onClick}\n        onMouseUp={onClick}\n        onTouchEnd={(e)=>{action}}\n      >\n        <div\n          // onClick={onClick}\n        style={{display: \"flex\"}}\n        >\n          <DeleteIcon size={30} />\n        </div>\n      </div>\n    );\n  };\n  \n\n  export default DeleteButton","import \"../../../css/card/settingsButton.css\";\n\nimport { CogIcon, Popover } from \"evergreen-ui\";\nimport React, { useRef } from \"react\";\n\nimport SettingsMenu from \"../../EditorPanel/SettingsMenu\";\n\nconst SettingsButton = ({\n  onClick,\n}: {\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\n}): JSX.Element => {\n  return (\n    <div\n      // className=\"settings-button-container\"\n      onMouseUp={onClick}\n      style={{\n        position: \"absolute\",\n        /* top: -2em; */\n        bottom: \"40%\",\n        left: 0,\n        width: 40,\n        height: 40,\n        // width: \"20px !important\",\n        // height: \"20px !important\",\n        borderRadius: \"50%\",\n        overflow: \"hidden\",\n        boxShadow: \"var(--shadow)\",\n        zIndex: 100,\n        background: \"white\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        display: \"flex\",\n        transform: \"translate(-50%, 0px)\",\n      }}\n    >\n      <div\n        //   onClick={onClick}\n        style={{ display: \"flex\" }}\n      >\n        <CogIcon size={30} />\n      </div>\n    </div>\n  );\n};\n\nexport default SettingsButton;\n","import \"../../../css/viewCard.css\";\r\n\r\nimport classNames from \"classnames\";\r\nimport type { Action, Thunk } from \"easy-peasy\";\r\nimport { action, thunk, useLocalStore } from \"easy-peasy\";\r\nimport type {\r\n  FC,\r\n  MouseEventHandler,\r\n  PropsWithChildren,\r\n  ReactNode,\r\n  RefObject,\r\n  SyntheticEvent,\r\n} from \"react\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport type { Layouts } from \"react-grid-layout\";\r\nimport QRCode from \"react-qr-code\";\r\n\r\nimport type CardData from \"../../../data_structs/CardData\";\r\nimport type WidgetData from \"../../../data_structs/WidgetData\";\r\nimport type { DndTypes } from \"../../../enums\";\r\nimport { AppMode, CardView } from \"../../../enums\";\r\nimport {\r\n  useApp,\r\n  useCardEditor,\r\n  useKeyboardShortcut,\r\n  useLayout,\r\n  useOnClickOutside,\r\n  useStoreState,\r\n} from \"../../../hooks\";\r\nimport type { CardSettings } from \"../../../interfaces/CardSettings\";\r\nimport Button from \"../../Shared/Button\";\r\nimport CardBackdrop from \"./CardBackdrop\";\r\nimport CardInfo from \"./CardInfo\";\r\nimport CardMotionWrapper from \"./CardMotionWrapper\";\r\nimport DeleteButton from \"./DeleteButton\";\r\nimport SettingsButton from \"./SettingsButton\";\r\n/**\r\n * Wraps each of the cards in the card layouts.\r\n * Click/Touch => Change the cards view mode\r\n * @component\r\n */\r\nexport interface CardModel {\r\n  cardBackgroundColor: string;\r\n  cardType: DndTypes;\r\n  cardView: CardView;\r\n  handleCardPress: Thunk<CardModel>;\r\n  scale: number;\r\n  setBackgroundColor: Action<CardModel, string>;\r\n  setCardView: Action<CardModel, CardView>;\r\n  setScale: Action<CardModel, number>;\r\n  setShowMenu: Action<CardModel, boolean>;\r\n  showMenu: boolean;\r\n  toggleMenu: Action<CardModel>;\r\n}\r\n\r\nexport type CardErrorHandler = (\r\n  e: SyntheticEvent<HTMLDivElement | HTMLIFrameElement | HTMLImageElement>,\r\n  card: CardData\r\n) => void;\r\nexport type CardLoadHandler = (\r\n  e: SyntheticEvent<HTMLDivElement | HTMLIFrameElement | HTMLImageElement>,\r\n  card: CardData\r\n) => void;\r\n\r\ninterface ViewCardProperties {\r\n  cardId?: string;\r\n  cardType: DndTypes;\r\n  useAnimation: boolean;\r\n  cardSettings?: CardSettings;\r\n  children?: (\r\n    scale: number,\r\n    cardView: CardView,\r\n    onError: CardErrorHandler,\r\n    onLoad: CardLoadHandler,\r\n    cardSettings: CardSettings\r\n  ) => ReactNode;\r\n  data?: CardData | WidgetData;\r\n  dataGrid?: Layouts;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst ViewCard: FC<ViewCardProperties> = ({\r\n  cardType,\r\n  children,\r\n  cardId,\r\n  data,\r\n  onClick,\r\n  cardSettings,\r\n  useAnimation,\r\n}: ViewCardProperties) => {\r\n  // const cardContainerReference = useRef<HTMLDivElement>(null);\r\n  const { appMode, addAppError, setEditingCard } = useApp();\r\n  const { deleteCard } = useLayout();\r\n  const [oldCardView, setCardView] = useState(CardView.GRID);\r\n  const [isError, setIsError] = useState(false);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  const [animationVariant, setAnimationVariant] = useState(\r\n    data?.contentType === \"widget\" ? \"loaded\" : \"\"\r\n  );\r\n\r\n  const { setCardScale } = useCardEditor();\r\n\r\n  const animationCounter = useStoreState(\r\n    (state) => state.layoutsModel.animationCounter\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (appMode === AppMode.DISPLAY) {\r\n      setAnimationVariant(\"out\");\r\n    }\r\n    if (data?.contentType === \"widget\") {\r\n      setAnimationVariant(\"loaded\");\r\n    }\r\n  }, [animationCounter]);\r\n\r\n  const [state, actions] = useLocalStore<CardModel>(\r\n    () => ({\r\n      cardView: CardView.GRID,\r\n      setCardView: action((state, cardView) => {\r\n        state.cardView = cardView;\r\n      }),\r\n      scale: cardSettings?.scale ?? 1,\r\n      // data?.contentType === \"embed\"\r\n      //   ? appConfig.defaultEmbedScale\r\n      //   : appConfig.defaultIframeScale,\r\n      setScale: action((state, scale) => {\r\n        state.scale += scale;\r\n        if (data) {\r\n          setCardScale({ cardId: data?.id, scale: state.scale });\r\n        }\r\n      }),\r\n      cardBackgroundColor: \"\",\r\n      setBackgroundColor: action((state, color) => {\r\n        state.cardBackgroundColor = color;\r\n      }),\r\n      setShowMenu: action((state, show) => {\r\n        state.showMenu = show;\r\n      }),\r\n      toggleMenu: action((state) => {\r\n        state.showMenu = !state.showMenu;\r\n      }),\r\n      showMenu: false,\r\n      cardType: cardType,\r\n      handleCardPress: thunk((actions, _, { getState }) => {\r\n        const rootel = document.querySelector(\"#root\") as HTMLDivElement;\r\n        if ((rootel.style.pointerEvents = \"all\")) {\r\n          rootel.style.pointerEvents = \"none\";\r\n        }\r\n\r\n        setTimeout(() => {\r\n          rootel.style.pointerEvents = \"all\";\r\n        }, 1000);\r\n        if (appMode === AppMode.DISPLAY && cardId != undefined) {\r\n          switch (getState().cardView) {\r\n            case CardView.GRID:\r\n              break;\r\n            case CardView.PREVIEW:\r\n              actions.setCardView(CardView.GRID);\r\n              const element = document.getElementById(\r\n                data?.id ?? \"view_card\"\r\n              ) as HTMLDivElement;\r\n              element.style.zIndex = \"0\";\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n      }),\r\n    }),\r\n    [appMode],\r\n    (s) => {\r\n      return { devTools: false };\r\n    }\r\n  );\r\n\r\n  const cardModalBackdrop = classNames(\"card-modal-backdrop\", {\r\n    \"card-modal-backdrop-active\":\r\n      oldCardView === CardView.PREVIEW || oldCardView === CardView.FULL_SCREEN,\r\n    \"card-modal-backdrop-inactive\": oldCardView === CardView.GRID,\r\n  });\r\n\r\n  const cardChildContainer = classNames(\"card-child-container\", {\r\n    \"card-child-container-preview\": state.cardView === CardView.PREVIEW,\r\n    \"card-child-container-fullscreen\": state.cardView === CardView.FULL_SCREEN,\r\n    \"card-child-container-grid\": state.cardView === CardView.GRID,\r\n  });\r\n\r\n  const { enable, disable } = useKeyboardShortcut({\r\n    keyCode: 27, //escape\r\n    action: () => {\r\n      if (\r\n        oldCardView === CardView.FULL_SCREEN ||\r\n        oldCardView === CardView.PREVIEW\r\n      ) {\r\n        setCardView(CardView.GRID);\r\n      }\r\n    },\r\n    disabled: false,\r\n  });\r\n\r\n  const showDeleteButton = (): JSX.Element | undefined => {\r\n    if (appMode == AppMode.EDIT && data) {\r\n      return (\r\n        <>\r\n          <DeleteButton\r\n            action={() => {\r\n              deleteCard(data.id);\r\n            }}\r\n            onClick={() => {\r\n              deleteCard(data.id);\r\n            }}\r\n          />\r\n          {data.contentType !== \"widget\" && (\r\n            <SettingsButton\r\n              onClick={(e) => {\r\n                if (data.contentType !== \"widget\") {\r\n                  setEditingCard(data as CardData);\r\n                }\r\n              }}\r\n            />\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderCardInfo = (): JSX.Element | undefined => {\r\n    if (\r\n      oldCardView === CardView.PREVIEW &&\r\n      data &&\r\n      data.contentType !== \"widget\"\r\n    ) {\r\n      return <CardInfo className=\"\" data={data as CardData} />;\r\n    }\r\n  };\r\n\r\n  const renderInternals = () => {\r\n    return data?.contentType !== \"widget\"\r\n      ? [showDeleteButton(), renderCardInfo()]\r\n      : [showDeleteButton()];\r\n  };\r\n\r\n  const renderReturnButton = (): JSX.Element | undefined => {\r\n    if (oldCardView === CardView.FULL_SCREEN) {\r\n      return (\r\n        <ReturnButton\r\n          onClick={() => {\r\n            setCardView(CardView.GRID);\r\n          }}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  const containerReference = useRef(null);\r\n  useOnClickOutside(containerReference, (e) => {\r\n    e.preventDefault();\r\n    if (state.cardView == CardView.PREVIEW) {\r\n      actions.setCardView(CardView.GRID);\r\n    }\r\n  });\r\n\r\n  const qrContainerStyle = {\r\n    width: \"fit-content\",\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    zIndex: 1,\r\n    right: 0,\r\n    transform: \"translate(50%, 50%)\",\r\n  } as React.CSSProperties;\r\n\r\n  const renderQrCode = (): JSX.Element | undefined => {\r\n    if (state.cardView === CardView.PREVIEW && data?.contentType !== \"widget\") {\r\n      const cd = data as CardData;\r\n      return (\r\n        <div style={qrContainerStyle}>\r\n          <QRCode size={128} value={cd?.src ?? \"\"} />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const onError: CardErrorHandler = (event, card) => {\r\n    const { title, src } = card;\r\n    addAppError({\r\n      errorType: \"failed to load content\",\r\n      description: \"description\",\r\n      source: `Card: ${title}`,\r\n      link: src,\r\n    });\r\n    setIsError(true);\r\n  };\r\n\r\n  const onLoad: CardLoadHandler = (event, card) => {\r\n    if (appMode === AppMode.DISPLAY) {\r\n      setAnimationVariant(\"loaded\");\r\n    }\r\n    setIsLoaded(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (state.cardView === CardView.PREVIEW) {\r\n      // setAnimationVariant(\"preview\");\r\n    }\r\n    if (state.cardView === CardView.GRID) {\r\n      // setAnimationVariant(\"none\");\r\n    }\r\n    // if (state.)\r\n  }, [state.cardView]);\r\n\r\n  useEffect(() => {\r\n    console.log(animationVariant);\r\n  }, [animationVariant]);\r\n\r\n  return (\r\n    <>\r\n      {data && (\r\n        <CardMotionWrapper\r\n          animation={animationVariant}\r\n          backgroundColor={state.cardBackgroundColor}\r\n          card={data}\r\n        >\r\n          {children && (\r\n            <div className={cardModalBackdrop}>\r\n              <div\r\n                className={cardChildContainer}\r\n                onMouseUp={() => {\r\n                  actions.handleCardPress();\r\n                  if (onClick) {\r\n                    onClick();\r\n                  }\r\n                }}\r\n                ref={containerReference}\r\n              >\r\n                {/* {renderQrCode()} */}\r\n                {renderInternals()}\r\n                <CardBackdrop card={data} cardSettings={cardSettings}>\r\n                  {children(\r\n                    state.scale,\r\n                    state.cardView,\r\n                    onError,\r\n                    onLoad,\r\n                    cardSettings ?? {\r\n                      id: \"not found\",\r\n                      scale: 1,\r\n                    }\r\n                  )}\r\n                </CardBackdrop>\r\n              </div>\r\n              {renderReturnButton()}\r\n            </div>\r\n          )}\r\n        </CardMotionWrapper>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst calculateTransform2 = (boundingBox: DOMRect): [number, number] => {\r\n  const windowWidth = window.innerWidth;\r\n  const windowHeight = window.innerHeight;\r\n  const vw = window.innerWidth / 100;\r\n  const vh = window.innerWidth / 100;\r\n  // const futureWidth = vw * 60;\r\n  // const futureHeight = vh * 40;\r\n  const futureWidth = boundingBox.width * 1.5;\r\n  const futureHeight = boundingBox.height * 1.5;\r\n\r\n  const centeredX = windowWidth / 2 - futureWidth / 2;\r\n  const centeredY = windowHeight / 2 - futureHeight / 2;\r\n\r\n  const currentX = boundingBox.x;\r\n  const currentY = boundingBox.y;\r\n  let differenceX = centeredX - currentX;\r\n  let differenceY = centeredY - currentY;\r\n\r\n  if (centeredX < currentX) {\r\n    differenceX = currentX - centeredX;\r\n    differenceX *= -1;\r\n  }\r\n  if (centeredY < currentY) {\r\n    differenceY = currentY - centeredY;\r\n    differenceY *= -1;\r\n  }\r\n  return [differenceX, differenceY];\r\n  // return `translate(${differenceX}px, ${differenceY}px)`;\r\n};\r\n\r\nconst setGpZindex = (\r\n  refdiv: RefObject<HTMLDivElement> | null,\r\n  index: number\r\n): void => {\r\n  if (refdiv) {\r\n    const cardGrandParent = refdiv.current?.parentElement?.parentElement;\r\n    // console.log(cardGrandParent);\r\n    if (cardGrandParent) {\r\n      cardGrandParent.style.zIndex = index.toString();\r\n    }\r\n  }\r\n};\r\n// const setGpZindex1 = (\r\n//   refdiv: HTMLDivElement,\r\n//   zIndex: number\r\n// ): void => {\r\n//   if (refdiv) {\r\n//       cardGrandParent.style.zIndex = zIndex.toString();\r\n//   }\r\n// };\r\n//depending on the view state of the card, change its html output node\r\n\r\nconst ReturnButton = ({\r\n  onClick,\r\n}: {\r\n  onClick: MouseEventHandler<HTMLDivElement>;\r\n}): JSX.Element => {\r\n  return (\r\n    <div className=\"return-button-container\">\r\n      <Button onClick={onClick} text=\"Return\" width={300} />\r\n    </div>\r\n  );\r\n};\r\nfunction propertiesAreEqual(\r\n  previousProperties: Readonly<PropsWithChildren<ViewCardProperties>>,\r\n  nextProperties: Readonly<PropsWithChildren<ViewCardProperties>>\r\n): boolean {\r\n  return true;\r\n}\r\n\r\nexport default React.memo(ViewCard);\r\n","// eslint-disable-next-line simple-import-sort/imports\nimport React, { useState } from \"react\";\nimport ViewCard from \"./ViewCard/ViewCard\";\nimport { DndTypes } from \"../../enums\";\nimport type { Layout, Layouts} from \"react-grid-layout\";\nimport { Responsive, WidthProvider } from \"react-grid-layout\";\nimport \"../../css/cardLayout.css\";\nimport appConfig from \"../../static/appConfig\";\nimport type { GridPosition } from \"../../interfaces/GridPosition\";\nimport IXDrop from \"../DragAndDrop/IXDrop\";\n\ntype GuideGridSettings = Partial<ReactGridLayout.ResponsiveProps>;\n\nexport const GuideGrid = ({\n  gridSettings,\n}: {\n  gridSettings: GuideGridSettings;\n}): JSX.Element => {\n  const ResponsiveGridLayout = WidthProvider(Responsive);\n  const guideCards = generateFilledLayout(\n    appConfig.gridRows,\n    appConfig.gridCols\n  );\n  const justCardNames = guideCards.lg.map((c) => c.i);\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        zIndex: 0,\n      }}\n    >\n      <ResponsiveGridLayout\n        {...gridSettings}\n        className=\"card-layout\"\n        isDraggable={false}\n        isResizable={false}\n        layouts={guideCards}\n        preventCollision\n        resizeHandles={[]}\n      >\n        {justCardNames.map((p, index) => {\n          return (\n            <div key={p}>\n              <IXDrop\n                cardType={DndTypes.PLACEHOLDER}\n                className=\"droppable-guide\"\n                droppableId={p}\n                key={index}\n              >\n                <ViewCard\n                  cardId={p}\n                  // eslint-disable-next-line react/jsx-sort-props\n                  cardType={DndTypes.PLACEHOLDER}\n                  key={p}\n                  useAnimation={false}\n                ></ViewCard>\n              </IXDrop>\n            </div>\n          );\n        })}\n      </ResponsiveGridLayout>\n    </div>\n  );\n};\nexport default React.memo(GuideGrid);\n\nfunction generateFilledLayout(rows: number, cols: number): Layouts {\n  const allGridSpots: GridPosition[] = [];\n  for (let y = 0; y < rows; y++) {\n    for (let x = 0; x < cols; x++) {\n      allGridSpots.push({ x: x, y: y });\n    }\n  }\n\n  const emptyCards = allGridSpots.map((rr) => {\n    return {\n      x: rr.x,\n      y: rr.y,\n      w: 1,\n      h: 1,\n      i: `empty_card_[${rr.x}, ${rr.y}]`,\n      minW: 1,\n      maxW: 1,\n      minH: 1,\n      maxH: 1,\n      static: false,\n      // static: true,\n      isDraggable: false,\n      isResizable: false,\n      resizeHandles: [],\n    } as Layout;\n  });\n\n  //TODO: MORE FUNCTIONAL SOLUTION\n  // const filled = layout.concat(emptyCards);\n  //pop off the first two positions where the clock is\n  // emptyCards.shift();\n  // emptyCards.shift();\n  return {\n    lg: emptyCards,\n    md: emptyCards,\n    sm: emptyCards,\n    xs: emptyCards,\n    xxs: emptyCards,\n  };\n}\n","import \"../../css/cardLayout.css\";\nimport \"../../css/libs/reactDraggable.css\";\n\nimport { AnimatePresence, motion, Variants } from \"framer-motion\";\nimport React, { useEffect } from \"react\";\nimport type { Layout, Layouts} from \"react-grid-layout\";\nimport { Responsive, WidthProvider } from \"react-grid-layout\";\n\nimport type CardData from \"../../data_structs/CardData\";\nimport LayoutData from \"../../data_structs/LayoutData\";\nimport type WidgetData from \"../../data_structs/WidgetData\";\nimport type { AppMode} from \"../../enums\";\nimport { DndTypes } from \"../../enums\";\nimport type { CardSettings } from \"../../interfaces/CardSettings\";\nimport appConfig from \"../../static/appConfig\";\nimport IFrameView from \"../CardContent\";\nimport IXDrop from \"../DragAndDrop/IXDrop\";\nimport WidgetRenderer from \"../Widgets/WidgetRenderer\";\nimport GuideGrid from \"./GuideGrid\";\nimport ViewCard from \"./ViewCard/ViewCard\";\nimport WidgetWrapper from \"./ViewCard/WidgetWrapper\";\n\nexport const CardLayout = ({\n  appMode,\n  layout,\n  cardSettings,\n  width,\n  height,\n  margin,\n  onLayoutChange,\n  cards,\n  widgets,\n  cols,\n  rows,\n  isDraggable,\n  isResizable,\n}: {\n  appMode: AppMode;\n  cards: CardData[];\n  cols: number;\n  cardSettings: CardSettings[];\n  height: number;\n  layout: Layouts | undefined;\n  margin: [number, number];\n  rows: number;\n  onLayoutChange?: (l: Layout[]) => void;\n  isDraggable?: boolean;\n  isResizable?: boolean;\n  widgets: WidgetData[];\n  width: number;\n}): JSX.Element => {\n  const activeLayout = layout;\n\n  useEffect(() => {\n    console.log(activeLayout?.id);\n  }, [activeLayout?.id]);\n\n  console.log(activeLayout);\n\n  const ResponsiveGridLayout = WidthProvider(Responsive);\n\n  const sharedGridSettings = {\n    breakpoints: { lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 },\n    cols: {\n      lg: cols,\n      md: cols,\n      sm: cols,\n      xs: cols,\n      xxs: cols,\n    },\n    // rowHeight: 500,\n    rowHeight: height / appConfig.gridRows,\n    // rowHeight: (height - appConfig.gridBottomPadding) / appConfig.gridRows,\n    margin: margin,\n    preventCollision: true,\n    compactType: null,\n    // containerPadding: [0, 0],\n  };\n\n  console.log(widgets);\n  return (\n    <div>\n      <motion.div\n        animate={{ opacity: 1, y: 0, transition: { delay: 1 } }}\n        className=\"card-grid-container\"\n        initial={{ opacity: 0, y: 50 }}\n      >\n        <ResponsiveGridLayout\n          {...sharedGridSettings}\n          className=\"card-layout\"\n          isDraggable={isDraggable ?? false}\n          isResizable={isResizable ?? false}\n          layouts={layout ?? { lg: [] }}\n          onDragStart={(layout, oldItem, newItem, placeholder, e, element) => {\n            const previousStyle = element.style;\n            previousStyle.border = \"2px solid cyan\";\n            element.style.border = \"4px solid cyan\";\n          }}\n          onLayoutChange={onLayoutChange}\n          preventCollision\n          resizeHandles={[\"se\"]}\n          verticalCompact\n        >\n          {[...cards, ...widgets].map(\n            (card: CardData | WidgetData, index: number) => {\n              return (\n                <motion.div\n                  className=\"card-container\"\n                  exit={{ y: -100 }}\n                  id={`${card.id}_grid_container`}\n                  key={card.id}\n                  style={{ width: \"100%\" }}\n                >\n                  <IXDrop\n                    cardType={DndTypes.IFRAME}\n                    className=\"droppable-card\"\n                    droppableId={card.id}\n                    key={index}\n                  >\n                    <ViewCard\n                      cardId={index.toString()}\n                      cardSettings={\n                        cardSettings.find((s) => s.id === card.id)\n                      }\n                      cardType={DndTypes.IFRAME}\n                      data={card}\n                      useAnimation={card.contentType !== \"widget\"}\n                    >\n                      {card.contentType !== \"widget\"\n                        ? (scale, cardView, onError, onLoad, cardSettings) => {\n                            const contentCard = card as CardData;\n                            return (\n                              <IFrameView\n                                card={contentCard}\n                                cardSettings={cardSettings}\n                                cardView={cardView}\n                                onError={onError}\n                                onLoad={onLoad}\n                                scale={scale}\n                              />\n                            );\n                          }\n                        : (scale, cardView, onError, onLoad, cardSettings) => {\n                            return (\n                              <WidgetRenderer\n                                cardSettings={cardSettings}\n                                scale={1}\n                                widget={card as WidgetData}\n                              />\n                            );\n                          }}\n                      {}\n                    </ViewCard>\n                  </IXDrop>\n                </motion.div>\n              );\n            }\n          )}\n        </ResponsiveGridLayout>\n      </motion.div>\n      <GuideGrid gridSettings={sharedGridSettings} />\n    </div>\n  );\n};\nexport default CardLayout;\n","import React, { useEffect,useState } from \"react\";\r\n\r\ntype FlexColumnProperties = Omit<React.HTMLProps<HTMLDivElement>, \"as\" | \"ref\">\r\n\r\nconst FlexColumn = (properties: FlexColumnProperties): JSX.Element => {\r\n  return (\r\n    <div\r\n      {...properties}\r\n      style={{\r\n        ...(properties.style || {}),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\nexport default FlexColumn;\r\n","import React, { useEffect,useState } from \"react\";\r\n\r\ntype FlexRowProperties = Omit<React.HTMLProps<HTMLDivElement>, \"as\" | \"ref\">\r\n\r\nconst FlexRow = (properties: FlexRowProperties): JSX.Element => {\r\n  return (\r\n    <div\r\n      {...properties}\r\n      style={{\r\n        ...(properties.style || {}),\r\n        display: \"flex\",\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\nexport default FlexRow;\r\n","import React, { useEffect, useRef,useState } from \"react\";\r\n\r\ntype TabPaneProperties = Omit<React.HTMLProps<HTMLDivElement>, \"as\" | \"ref\">\r\n\r\nconst TabPane = (\r\n  properties: TabPaneProperties\r\n  //   children: JSX.Element | JSX.Element[]\r\n): JSX.Element => {\r\n  return (\r\n    <div\r\n      {...properties}\r\n      style={{\r\n        ...(properties.style || {}),\r\n        width: properties?.style?.width ?? \"inherit\",\r\n        padding: \".5em\",\r\n      }}\r\n    >\r\n      {properties.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabPane;\r\n","import { Heading, Switch } from \"evergreen-ui\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport { useAppSettings, useSheets } from \"../../../../hooks\";\r\nimport FlexColumn from \"../../../Shared/FlexColumn\";\r\nimport FlexRow from \"../../../Shared/FlexRow\";\r\nimport TabPane from \"../TabPane\";\r\n\r\nconst AppTab = (): JSX.Element => {\r\n  const {\r\n    setRotationSpeed,\r\n    setBlockIframeInteractions,\r\n    setShowQrCodes,\r\n    enableIframeInteractions,\r\n    setRotateLayouts,\r\n    setMuteIframeAudio,\r\n    enableIframeAudio,\r\n    rotateLayouts,\r\n  } = useAppSettings();\r\n\r\n  return (\r\n    <TabPane>\r\n      <Heading size={600} style={{ color: \"white\" }}>\r\n        General\r\n      </Heading>\r\n      <div style={{ margin: \".5em\" }}>\r\n        <FlexColumn>\r\n          <SwitchContainer\r\n            onChange={(value) => setRotateLayouts(value)}\r\n            value={rotateLayouts}\r\n          >\r\n            RotateLayouts\r\n          </SwitchContainer>\r\n          <SwitchContainer\r\n            onChange={(value) => setBlockIframeInteractions(value)}\r\n            value={enableIframeInteractions}\r\n          >\r\n            Enable IFrame Interactions\r\n          </SwitchContainer>\r\n          <SwitchContainer\r\n            onChange={(value) => setMuteIframeAudio(value)}\r\n            value={enableIframeAudio}\r\n          >\r\n            Enable IFrame Audio\r\n          </SwitchContainer>\r\n        </FlexColumn>\r\n      </div>\r\n      {/* </div> */}\r\n      <SheetLinks />\r\n      {/* <input\r\n        // label={<Label>Layout Duration</Label>}\r\n        // description=\"Duration that layout is displayed\"\r\n        // placeholder={rotationSpeed.toString()}\r\n        // type=\"text\"\r\n        required\r\n        // value={rotationSpeed.toString()}\r\n        // validationMessage=\"This field is required\"\r\n        // pattern=\"[0-9]*\"\r\n        // disabled={false}\r\n        // onChange={onChange}\r\n        // defaul\r\n        value={val}\r\n        type=\"text\"\r\n        defaultValue={\"hello\"}\r\n        //@ts-ignore\r\n        // onChange={(e) => setRotationSpeed(parseInt(e.target.value))}\r\n        onChange={(e) => setval(e.target.value)}\r\n        //   // e()\r\n        // }}\r\n      /> */}\r\n    </TabPane>\r\n  );\r\n};\r\n\r\nconst SwitchContainer = ({\r\n  children,\r\n  onChange,\r\n  value,\r\n}: {\r\n  children: string;\r\n  onChange: (value_: boolean) => void;\r\n  value: boolean;\r\n}): JSX.Element => {\r\n  const [checked, setChecked] = useState(value);\r\n  return (\r\n    <FlexRow\r\n      style={{ margin: \".5em\", justifyContent: \"space-between\", width: \"50%\" }}\r\n    >\r\n      <Label>{children}</Label>\r\n      <div style={{ paddingLeft: \".5em\" }}>\r\n        <Switch\r\n          checked={checked}\r\n          defaultChecked={false}\r\n          onChange={(e) => {\r\n            console.log(e.target.value);\r\n            onChange(e.target.checked);\r\n            setChecked(e.target.checked);\r\n          }}\r\n          style={{ margin: \"auto\" }}\r\n        />\r\n      </div>\r\n    </FlexRow>\r\n  );\r\n};\r\n\r\nconst Label = ({ children }: { children: string }) => {\r\n  return <div style={{ color: \"white\" }}>{children}</div>;\r\n};\r\n\r\nexport default AppTab;\r\n\r\nconst SheetLinks = (): JSX.Element => {\r\n  const { cardSheetUrl, layoutSheetUrl, formUrl, parentSheetUrl } = useSheets();\r\n  const links = [parentSheetUrl, cardSheetUrl, layoutSheetUrl, formUrl];\r\n  const titles = [\"Parent Sheet\", \"Content\", \"Layouts\", \"Google Form\"];\r\n\r\n  return (\r\n    <FlexColumn>\r\n      <Heading size={600} style={{ color: \"white\" }}>\r\n        Google Sheets\r\n      </Heading>\r\n      <FlexColumn\r\n        style={{\r\n          padding: \".5em\",\r\n          backgroundColor: \"#1f1f1f\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      >\r\n        {links.map((link, index) => (\r\n          <SheetLink link={link ?? \"not provided\"} title={titles[index]} />\r\n        ))}\r\n      </FlexColumn>\r\n    </FlexColumn>\r\n  );\r\n};\r\n\r\nconst SheetLink = ({\r\n  title,\r\n  link,\r\n}: {\r\n  title: string;\r\n  link: string;\r\n}): JSX.Element => {\r\n  return (\r\n    <FlexRow\r\n      style={{\r\n        padding: \".5em\",\r\n        backgroundColor: \"#1f1f1f\",\r\n        overflow: \"hidden\",\r\n        justifyContent: \"space-between\",\r\n      }}\r\n    >\r\n      <Heading style={{ color: \"white\" }}>{title + \":  \"}</Heading>\r\n      <a\r\n        href={link}\r\n        rel=\"noreferrer\"\r\n        style={{\r\n          color: \"white\",\r\n          overflow: \"hidden\",\r\n          textOverflow: \"ellipsis\",\r\n          maxWidth: \"80%\",\r\n        }}\r\n        target=\"_blank\"\r\n      >\r\n        {link}\r\n      </a>\r\n    </FlexRow>\r\n  );\r\n};\r\n","import type { ReactElement, ReactNode} from \"react\";\nimport React, { FC, useEffect, useRef } from \"react\";\nimport type {\n  DraggableProps,\n  DraggableProvided,\n  DraggingStyle} from \"react-beautiful-dnd\";\nimport {\n  Draggable\n} from \"react-beautiful-dnd\";\nimport { createPortal } from \"react-dom\";\n\nimport type CardData from \"../../data_structs/CardData\";\nimport type { DndTypes } from \"../../enums\";\nimport { CardView } from \"../../enums\";\nimport IFrameView from \"../CardContent\";\n\ninterface DraggableRowProperties extends Omit<DraggableProps, \"children\"> {\n  dndType: DndTypes;\n  className?: string;\n  children: ReactNode;\n  dragAll?: boolean;\n  card: CardData;\n}\n\nconst useDraggableInPortal = () => {\n  const element = useRef<HTMLDivElement>(document.createElement(\"div\")).current;\n\n  useEffect(() => {\n    if (element) {\n      element.style.pointerEvents = \"none\";\n      element.style.position = \"absolute\";\n      element.style.height = \"100%\";\n      element.style.width = \"100%\";\n      element.style.top = \"0\";\n      // element.style.border = \"5px solid red\";\n\n      document.body.append(element);\n\n      return () => {\n        element.remove();\n      };\n    }\n  }, [element]);\n\n  return (render: (provided: DraggableProvided) => ReactElement) =>\n    (provided: DraggableProvided) => {\n      const result = render(provided);\n      const style = provided.draggableProps.style as DraggingStyle;\n      if (style.position === \"fixed\") {\n        return createPortal(result, element);\n      }\n      return result;\n    };\n};\n\n/**\n * A draggable table row. Used for dragging card content or layouts into the grid.\n */\nconst DraggableRow = ({\n  dndType,\n  className,\n  children,\n  dragAll,\n  card,\n  ...properties\n}: DraggableRowProperties): JSX.Element => {\n  if (!React.isValidElement(children)) return <div />;\n\n  const renderDraggable = useDraggableInPortal();\n\n  return (\n    <Draggable {...properties}>\n      {(provided, snapshot) => {\n        const dragHandleProperties = dragAll ? provided.dragHandleProps : {};\n        if (\n          snapshot.isDragging &&\n          provided &&\n          provided.draggableProps &&\n          provided.draggableProps.style\n        ) {\n          //@ts-ignore\n          provided.draggableProps.style.left =\n            //@ts-ignore\n            provided.draggableProps.style.offsetLeft;\n          //@ts-ignore\n          provided.draggableProps.style.top =\n            //@ts-ignore\n            provided.draggableProps.style.offsetTop;\n        }\n        return (\n          <>\n            <tr\n              className={className}\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...dragHandleProperties}\n            >\n              {React.cloneElement(children, { provided })}\n            </tr>\n            <tr\n              style={{\n                display: snapshot.isDragging ? \"table-row\" : \"none\",\n                backgroundColor: snapshot.isDragging ? \"green\" : \"none\",\n              }}\n            >\n              {React.cloneElement(children, { provided })}\n            </tr>\n            {/* {\n              //@ts-ignore\n              renderDraggable((provided, snapshot) => {\n                <IFrameView card={card} scale={1} cardView={CardView.GRID} />;\n              })\n            } */}\n          </>\n        );\n      }}\n    </Draggable>\n  );\n};\n\nDraggableRow.defaultProps = {\n  dragAll: true,\n};\n\nexport default React.memo(DraggableRow);\n","enum IFrameLoadError {\n  CROSS_ORIGIN = \"CROSS_ORIGIN\",\n}\n\nenum IFrameLoadWarning {\n  MALFORMED_URL = \"MALFORMED_URL\",\n}\n\nclass IFrameValidator {\n  url!: string;\n  errors!: IFrameLoadError[];\n  warnings!: IFrameLoadWarning[];\n  constructor(url: string) {\n    this.errors = [];\n    this.warnings = [];\n    this.url = url;\n  }\n  validate(event: React.SyntheticEvent<HTMLIFrameElement, Event>): void {\n    console.log(this.errors);\n    const malformedUrlCheckArray = validURL(this.url);\n    this.warnings.push(...malformedUrlCheckArray);\n    console.log(malformedUrlCheckArray);\n  }\n  isValid(): boolean {\n    return this.errors.length === 0;\n  }\n  errorMessages(): string[] {\n    const errors: string[] = [];\n    this.errors.map((e) => {\n      switch (e) {\n        case IFrameLoadError.CROSS_ORIGIN:\n          errors.push(\n            `Blocked a frame with origin ${this.url}; from accessing a cross-origin frame.`\n          );\n          break;\n        default:\n          console.log(\"error did not match an error enum\");\n      }\n    });\n    return errors;\n  }\n}\n\nexport default IFrameValidator;\n\n\n\nfunction validURL(string: string): IFrameLoadWarning[] {\n  const warningsArray = [];\n  const pattern = new RegExp(\n    \"^(https?:\\\\/\\\\/)?\" + // protocol\n      \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|\" + // domain name\n      \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\n      \"(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*\" + // port and path\n      \"(\\\\?[;&a-z\\\\d%_.~+=-]*)?\" + // query string\n      \"(\\\\#[-a-z\\\\d_]*)?$\",\n    \"i\"\n  ); // fragment locator\n  if (!pattern.test(string)) {\n    warningsArray.push(IFrameLoadWarning.MALFORMED_URL);\n  }\n  return warningsArray;\n}\n","import type { FunctionComponent, ReactElement } from \"react\";\nimport React from \"react\";\r\n\r\n// https://github.com/mhnpd/react-loader-spinner/blob/master/src/type.ts\r\n\r\nexport type Style = {\r\n  [key: string]: string;\r\n};\r\n\r\nexport interface BaseProperties {\r\n  height?: string | number;\r\n  width?: string | number;\r\n  color?: string;\r\n  ariaLabel?: string;\r\n  wrapperStyle?: Style;\r\n  wrapperClass?: string;\r\n  visible?: boolean;\r\n}\r\n\r\ntype CirclesProperties = BaseProperties\r\n\r\nconst getDefaultStyle = (visible: boolean): Style => ({\r\n  display: visible ? \"flex\" : \"none\",\r\n});\r\n\r\nconst Loader: FunctionComponent<CirclesProperties> = ({\r\n  height = 80,\r\n  width = 80,\r\n  color = \"green\",\r\n  ariaLabel = \"circles-loading\",\r\n  wrapperStyle,\r\n  wrapperClass,\r\n  visible = true,\r\n}): ReactElement => (\r\n  <div\r\n    className={wrapperClass}\r\n    data-testid=\"circles-loading\"\r\n    style={{ ...getDefaultStyle(visible), ...wrapperStyle }}\r\n  >\r\n    <svg\r\n      aria-label={ariaLabel}\r\n      data-testid=\"circles-svg\"\r\n      fill={color}\r\n      height={height}\r\n      viewBox=\"0 0 135 135\"\r\n      width={width}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path d=\"M67.447 58c5.523 0 10-4.477 10-10s-4.477-10-10-10-10 4.477-10 10 4.477 10 10 10zm9.448 9.447c0 5.523 4.477 10 10 10 5.522 0 10-4.477 10-10s-4.478-10-10-10c-5.523 0-10 4.477-10 10zm-9.448 9.448c-5.523 0-10 4.477-10 10 0 5.522 4.477 10 10 10s10-4.478 10-10c0-5.523-4.477-10-10-10zM58 67.447c0-5.523-4.477-10-10-10s-10 4.477-10 10 4.477 10 10 10 10-4.477 10-10z\">\r\n        <animateTransform\r\n          attributeName=\"transform\"\r\n          dur=\"2.5s\"\r\n          from=\"0 67 67\"\r\n          repeatCount=\"indefinite\"\r\n          to=\"-360 67 67\"\r\n          type=\"rotate\"\r\n        />\r\n      </path>\r\n      <path d=\"M28.19 40.31c6.627 0 12-5.374 12-12 0-6.628-5.373-12-12-12-6.628 0-12 5.372-12 12 0 6.626 5.372 12 12 12zm30.72-19.825c4.686 4.687 12.284 4.687 16.97 0 4.686-4.686 4.686-12.284 0-16.97-4.686-4.687-12.284-4.687-16.97 0-4.687 4.686-4.687 12.284 0 16.97zm35.74 7.705c0 6.627 5.37 12 12 12 6.626 0 12-5.373 12-12 0-6.628-5.374-12-12-12-6.63 0-12 5.372-12 12zm19.822 30.72c-4.686 4.686-4.686 12.284 0 16.97 4.687 4.686 12.285 4.686 16.97 0 4.687-4.686 4.687-12.284 0-16.97-4.685-4.687-12.283-4.687-16.97 0zm-7.704 35.74c-6.627 0-12 5.37-12 12 0 6.626 5.373 12 12 12s12-5.374 12-12c0-6.63-5.373-12-12-12zm-30.72 19.822c-4.686-4.686-12.284-4.686-16.97 0-4.686 4.687-4.686 12.285 0 16.97 4.686 4.687 12.284 4.687 16.97 0 4.687-4.685 4.687-12.283 0-16.97zm-35.74-7.704c0-6.627-5.372-12-12-12-6.626 0-12 5.373-12 12s5.374 12 12 12c6.628 0 12-5.373 12-12zm-19.823-30.72c4.687-4.686 4.687-12.284 0-16.97-4.686-4.686-12.284-4.686-16.97 0-4.687 4.686-4.687 12.284 0 16.97 4.686 4.687 12.284 4.687 16.97 0z\">\r\n        <animateTransform\r\n          attributeName=\"transform\"\r\n          dur=\"8s\"\r\n          from=\"0 67 67\"\r\n          repeatCount=\"indefinite\"\r\n          to=\"360 67 67\"\r\n          type=\"rotate\"\r\n        />\r\n      </path>\r\n    </svg>\r\n  </div>\r\n);\r\n\r\nexport default Loader;\r\n","import { AnimatePresence, motion } from \"framer-motion\";\nimport React from \"react\";\nimport { createPortal } from \"react-dom\";\n\nimport { useWindowSize } from \"../../hooks\";\n\nconst PopOver = ({\n  x,\n  y,\n  children,\n  visible,\n  width,\n  height,\n}: {\n  x: number;\n  y: number;\n  children: JSX.Element | JSX.Element[];\n  visible: boolean;\n  width?: number;\n  height?: number;\n}): JSX.Element => {\n  // console.log(x, y);\n  const windowSize = useWindowSize();\n  const scale = 0.4;\n  return createPortal(\n    <AnimatePresence>\n        {visible && (\n          <motion.div\n            animate={{\n              opacity: 1,\n              transition: {\n                delay: 0.1,\n                duration: 0.2,\n                ease: \"circIn\",\n              },\n            }}\n            exit={{ opacity: 0 }}\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"0 8px 32px 0 rgba(49, 49, 49, 0.37)\",\n              width: width ?? windowSize.width * scale,\n              height: height ?? windowSize.height * scale,\n              position: \"absolute\",\n              x: x,\n              y: y,\n              transformBox: \"view-box\",\n              transformOrigin: \"top left\",\n              borderRadius: \".5em\",\n              overflow: \"hidden\",\n            }}\n          >\n            {children}\n          </motion.div>\n        )}\n      </AnimatePresence>,\n\n    document.querySelector(\"#popup-container\") as HTMLDivElement\n  );\n};\n\nexport default React.memo(PopOver);\n","import React, { useState } from \"react\";\n\nimport { toTitleCase } from \"../../utils\";\n/**\n * <th> component with a arrow indicating the filter direction\n */\nconst TableHeader = ({\n  headerTitle,\n  setFilter,\n  setFilterDirection,\n  className,\n  activeFilter,\n}: {\n  headerTitle: string;\n  setFilterDirection: (direction: boolean) => void;\n  setFilter: (filter: string) => void;\n  className?: string;\n  activeFilter: string | undefined;\n}): JSX.Element => {\n\n  const [sortDirection, setSortDirection] = useState(true);\n\n  const showSortArrow =  headerTitle === activeFilter\n\n  return (\n    <th\n      className={className ?? \"editor-panel-table-header\"}\n      onClick={() => {\n        setFilter(headerTitle);\n        setSortDirection(!sortDirection);\n        setFilterDirection(sortDirection);\n      }}\n    >\n      {toTitleCase(headerTitle)}\n      {showSortArrow && sortDirection\n        ? \"▲\"\n        : showSortArrow && !sortDirection\n        ? \"▼\"\n        : \"\"}\n    </th>\n  );\n};\n\nexport default TableHeader;\n\n","import \"../../../../css/table.css\";\n\nimport { IconButton, RefreshIcon, SearchInput, Tooltip } from \"evergreen-ui\";\nimport fuzzysort from \"fuzzysort\";\nimport React, { useEffect, useState } from \"react\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport ReactImageFallback from \"react-image-fallback\";\n\nimport type CardData from \"../../../../data_structs/CardData\";\nimport { CardView, DndTypes, DragSource } from \"../../../../enums\";\nimport { useLayout, useSheets, useStoreState } from \"../../../../hooks\";\nimport { formatDate } from \"../../../../utils\";\nimport IFrameView from \"../../../CardContent\";\nimport DraggableRow from \"../../../DragAndDrop/DraggableRow\";\nimport IXDrop from \"../../../DragAndDrop/IXDrop\";\nimport Loader from \"../../../Loader\";\nimport Button from \"../../../Shared/Button\";\nimport FlexRow from \"../../../Shared/FlexRow\";\nimport PopOver from \"../../PopOver\";\nimport TableHeader from \"../../TableHeader\";\n\n/**\n * Content tab display a list of the availalbe cards, and search bar for quickly finding cards by their title.\n */\n\nconst ContentsTab = (): JSX.Element => {\n  const availableCards = useStoreState(\n    (state) => state.appModel.availableCards\n  );\n\n  const { clearCards, resetLayout } = useLayout();\n  const { refreshSheets } = useSheets();\n\n  const [filterKey, setFilterKey] = useState<string | undefined>();\n  const [filterDirection, setFilterDirection] = useState(true);\n  const [cardItems, setCardItems] = useState(availableCards);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [filteredCards, setFilteredCards] =\n    useState<CardData[]>(availableCards);\n\n  //use search input to filter cards\n  useEffect(() => {\n    if (0 < searchTerm.length) {\n      const sortResult = fuzzysort.go(\n        searchTerm,\n        cardItems.map((c) => c.title)\n      );\n      const aboveThreshholdCardTitles: string[] = sortResult.map(\n        (s) => s.target\n      );\n      const filtered = cardItems.filter((c) =>\n        aboveThreshholdCardTitles.includes(c.title)\n      );\n      setFilteredCards(filtered);\n    } else {\n      setFilteredCards(cardItems);\n    }\n  }, [searchTerm, cardItems]);\n\n  //sort values by column attribute, if filterDirection is true, sort descending, else sort ascending\n  useEffect(() => {\n    const key = filterKey as keyof CardData;\n    const clone = [...availableCards];\n\n    const sortedItems = clone.sort((a, b) => {\n      const aText = a[key];\n      const bText = b[key];\n      if (aText && bText) {\n        if (aText < bText) {\n          return -1;\n        }\n        if (bText < aText) {\n          return 1;\n        }\n      }\n      return 0;\n    });\n    !filterDirection ? sortedItems.reverse() : null;\n    setCardItems(sortedItems);\n  }, [filterKey, availableCards, filterDirection]);\n\n  const contentTabHeader = \"contents-table-header\";\n  return (\n    <div className=\"contents-tab-container\">\n      <FlexRow style={{ padding: \"0.5em\" }}>\n        <SearchInput\n          onChange={(event: React.FormEvent<HTMLInputElement>) =>\n            setSearchTerm(event.currentTarget.value)\n          }\n          placeholder=\"search title\"\n          width=\"90%\"\n        />\n        <FlexRow style={{ width: \"100%\", justifyContent: \"space-around\" }}>\n          <div style={{ height: \"100%\", width: \"10%\" }}>\n            <Tooltip content=\"Reload content\">\n              <IconButton\n                height=\"100%\"\n                icon={<RefreshIcon />}\n                onClick={(\n                  _event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n                ) => {\n                  refreshSheets();\n                }}\n                width=\"20%\"\n              />\n            </Tooltip>\n          </div>\n          <Button\n            appearance=\"default\"\n            intent=\"danger\"\n            onClick={(_event) => {\n              resetLayout();\n            }}\n            text=\"Reset Layout\"\n          />\n          <Button\n            appearance=\"minimal\"\n            intent=\"danger\"\n            onClick={(_event) => {\n              clearCards();\n            }}\n            // width={\"10%\"}\n            text=\"Clear All\"\n          />\n        </FlexRow>\n      </FlexRow>\n      <IXDrop\n        cardType={DndTypes.CLOCK}\n        className=\"table-container\"\n        droppableId={DragSource.CARD_TABLE}\n        isDropDisabled\n      >\n        <table className=\"contents-tab-table\">\n          <tbody onClick={(e) => {}}>\n            <tr>\n              {[\"title\", \"author\", \"added\"].map((s, index) => {\n                return (\n                  <TableHeader\n                    activeFilter={filterKey}\n                    className={contentTabHeader}\n                    headerTitle={s}\n                    key={index}\n                    setFilter={setFilterKey}\n                    setFilterDirection={setFilterDirection}\n                  ></TableHeader>\n                );\n              })}\n            </tr>\n          </tbody>\n        </table>\n        <Scrollbars autoHeight autoHeightMax={319} autoHeightMin={100}>\n          <table style={{ padding: \"2em\" }}>\n            <tbody>\n              {filteredCards.map((card, index) => {\n                const { added, id, author, interaction, isActive } = card;\n                return (\n                  <DraggableRow\n                    card={card}\n                    className={\n                      isActive ? \"content-row-active\" : \"content-row-inactive\"\n                    }\n                    dndType={DndTypes.CARD_ROW}\n                    draggableId={id}\n                    index={index}\n                    isDragDisabled={isActive}\n                    key={index.toString()}\n                  >\n                    <>\n                      <td>\n                        <TitleWithIcon card={card} />\n                      </td>\n                      <td>{author}</td>\n                      <td>{formatDate(added)}</td>\n                    </>\n                  </DraggableRow>\n                );\n              })}\n            </tbody>\n          </table>\n        </Scrollbars>\n      </IXDrop>\n    </div>\n  );\n};\n\n/**\n * Fetches a favicon for a card and displays the cards title\n */\nconst TitleWithIcon = ({ card }: { card: CardData }): JSX.Element => {\n  const { src, id, title } = card;\n\n  const iconId = id + \"_icon\";\n\n  const [position, setPosition] = useState([0, 0]);\n  const [hovered, setHovered] = useState(false);\n\n  const [preivewLoaded, setPreviewLoaded] = useState(false);\n  const [delayHandler, setDelayHandler] = useState<NodeJS.Timeout>();\n\n  const handleMouseEnter = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ): void => {\n    setDelayHandler(\n      setTimeout(() => {\n        const { pageY } = event;\n        const element = document.getElementById(iconId)\n          ?.parentElement as HTMLDivElement;\n        const { x } = element.getBoundingClientRect();\n        setPosition([x + 100, pageY]);\n        setHovered(true);\n      }, 250)\n    );\n  };\n\n  const handleMouseLeave = (\n    _event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ): void => {\n    if (delayHandler) {\n      clearTimeout(delayHandler);\n      setHovered(false);\n    }\n  };\n\n  return (\n    <div\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      style={{ display: \"flex\" }}\n    >\n      <div id={iconId} style={{ display: \"flex\", width: 20 }}>\n        <ReactImageFallback\n          className={\n            card.isActive ? \"row-favicon-active\" : \"row-favicon-inactive\"\n          }\n          fallbackImage={`${process.env.PUBLIC_URL}/question_mark.svg`}\n          src={\n            card.contentType === \"image\"\n              ? src\n              : `https://s2.googleusercontent.com/s2/favicons?domain_url=${card.src}`\n          }\n          style={{ width: \"100%\", maxWidth: 20 }}\n        />\n      </div>\n      <PopOver visible={hovered} x={position[0]} y={position[1]}>\n        <IFrameView\n          card={card}\n          cardView={CardView.GRID}\n          objectFit=\"contain\"\n          onError={(_c) => {}}\n          onLoad={(_c) => {\n            setPreviewLoaded(true);\n          }}\n          scale={1}\n        />\n      </PopOver>\n      <div\n        style={{\n          marginTop: \"auto\",\n          marginBottom: \"auto\",\n          textAlign: \"left\",\n          paddingLeft: \"1em\",\n        }}\n      >\n        {title}\n      </div>\n    </div>\n  );\n};\n\nexport default ContentsTab;\n\nconst LoaderOverlay = ({ visible }: { visible: boolean }): JSX.Element => {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: \"red\",\n        position: \"absolute\",\n        display: \"flex\",\n        alignItems: \"center\",\n      }}\n    >\n      <Loader visible />\n    </div>\n  );\n};\n","import \"../../../../css/table.css\";\nimport \"../../../../css/editorPanel.css\";\n\nimport React from \"react\";\nimport Scrollbars from \"react-custom-scrollbars\";\n\nimport { useElementSize, useErrors } from \"../../../../hooks\";\nimport type AppError from \"../../../../interfaces/AppError\";\n\n/**\n * Table for displaying app errors from the apps store model\n */\n\nconst IssuesTable = (): JSX.Element => {\n  const { appErrors, layoutErrors, googleSheetsErrors } = useErrors();\n  const [squareReference, { height }] = useElementSize();\n  return (\n    <div\n      className=\"table-container\"\n      style={{ height: 400, width: 500, overflowY: \"scroll\" }}\n      // style={{ height: 400, width: \"100%\", overflowY: \"scroll\" }}\n    >\n      <div ref={squareReference} style={{ width: \"100%\" }}>\n        {[...appErrors, ...layoutErrors, ...googleSheetsErrors].map(\n          (error, index) => {\n            return <ErrorMessage error={error} key={index} />;\n          }\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst ErrorMessage = ({ error }: { error: AppError }): JSX.Element => {\n  const { errorType, link, source } = error;\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        padding: \"1vmin\",\n        flexDirection: \"column\",\n        // height: 300,\n        width: \"100%\",\n        marginRight: \"10vmin\",\n        backgroundColor: \"#421717\",\n        borderBottom: \"1px solid white\",\n        boxSizing: \"border-box\",\n      }}\n    >\n      <div\n        style={{\n          color: \"#D14343\",\n          textTransform: \"uppercase\",\n          fontWeight: \"bold\",\n        }}\n      >{`⚠ ${errorType}`}</div>\n      <div>{source}</div>\n      <div>\n        <a\n          href={link}\n          rel=\"noreferrer\"\n          style={{ color: \"lightblue\" }}\n          target=\"_blank\"\n        >\n          {link}\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default IssuesTable;\n","import React, { useEffect, useRef,useState } from \"react\";\r\n\r\nimport FlexRow from \"../../../Shared/FlexRow\";\r\nimport IssuesTable from \"./IssuesTable\";\r\n\r\nconst IssuesTab = (): JSX.Element => {\r\n  return (\r\n    <div style={{ height: \"100%\", pointerEvents: \"all\" }}>\r\n      <IssuesTable />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IssuesTab;\r\n","import { motion } from \"framer-motion\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useSheets } from \"../../../../../hooks\";\n\nconst GoogleFormIframe = ({ active }: { active: boolean }): JSX.Element => {\n  const { formUrl } = useSheets();\n\n  return (\n    <div\n      style={{\n        width: 500,\n        height: \"100%\",\n        overflow: \"hidden\",\n        position: \"relative\",\n      }}\n    >\n      <motion.div\n        animate={active ? { opacity: 0 } : {}}\n        style={{\n          position: \"absolute\",\n          width: \"100%\",\n          height: \"100%\",\n          backgroundColor: \"red\",\n          zIndex: 1,\n          top: 0,\n          left: 0,\n          opacity: 0.5,\n          display: \"flex\",\n          alignItems: \"center\",\n          pointerEvents: active ? \"none\" : \"all\",\n        }}\n      >\n        <div\n          style={{\n            width: \"50%\",\n            margin: \"auto\",\n            fontWeight: \"bold\",\n            border: \"1px solid white\",\n            padding: \"1em\",\n            backgroundColor: \"white\",\n            opacity: 1,\n          }}\n        >\n          Press the Copy Layout Button before Submitting New Layout\n        </div>\n      </motion.div>\n      <iframe\n        frameBorder={0}\n        marginHeight={0}\n        marginWidth={0}\n        src={formUrl}\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: \"100%\",\n        }}\n      ></iframe>\n    </div>\n  );\n};\n\nexport default GoogleFormIframe;\n","import \"../../../../css/googleFormPopup.css\";\nimport \"../../../../css/copyField.css\";\n\nimport { ClipboardIcon, Heading } from \"evergreen-ui\";\nimport { motion } from \"framer-motion\";\nimport React, { useEffect, useState } from \"react\";\nimport ReactDom from \"react-dom\";\n\nimport { useLayout, useSheets, useStoreState } from \"../../../../hooks\";\nimport DeleteButton from \"../../../CardLayout/ViewCard/DeleteButton\";\nimport Button from \"../../../Shared/Button\";\nimport FlexColumn from \"../../../Shared/FlexColumn\";\nimport FlexRow from \"../../../Shared/FlexRow\";\nimport Modal from \"../../../Shared/Modal\";\nimport GoogleFormIframe from \"./GoogleFormPopup/GoogleFormIframe\";\n\n/**\n * Modal popup for displaying cards when in preview mode. Displays on top of the CardLayout, and renders\n * to <div id=\"google-form-popup\"></div> in index.html.\n * @component\n */\n\ninterface GoogleFormPopupProperties {\n  visible: boolean;\n  onCloseComplete: () => void;\n}\n\nconst GoogleFormPopup = ({\n  visible,\n  onCloseComplete,\n}: GoogleFormPopupProperties): JSX.Element => {\n  const { layoutSheetUrl, formUrl } = useSheets();\n\n  const { activeLayout } = useLayout();\n  const [isShown, setIsShown] = useState(visible);\n  const [isCopiedJSON, setIsCopiedJson] = useState(false);\n  const [contentString, setContentString] = useState(\"\");\n  const layoutString = useStoreState((state) =>\n    JSON.stringify(state.layoutsModel.activeLayout)\n  );\n  const trueLayoutString = useStoreState((state) =>\n    JSON.stringify(state.layoutsModel.activeLayout?.layout.lg)\n  );\n\n  useEffect(() => {\n    // console.log(layoutString);\n    // console.log(trueLayoutString);\n    // const toEdit = JSON.parse(layoutString);\n    // delete toEdit.backupLayout;\n    // delete toEdit.sourceLayout;\n    // toEdit.layout = JSON.parse(JSON.stringify(activeLayout?.layout.lg));\n    // setContentString(JSON.stringify(toEdit));\n    // console.log(toEdit);\n  }, [layoutString, activeLayout]);\n\n  return ReactDom.createPortal(\n    <Modal\n      active={isShown}\n      backdropOpacity={0.5}\n      containerClassName=\"google-form-popup\"\n      onClose={() => {}}\n    >\n      <div className=\"google-form-popup-inner-container\">\n        <DeleteButton\n          action={() => {\n            onCloseComplete;\n          }}\n          onClick={onCloseComplete}\n        />\n        <FlexColumn>\n          <div style={{ borderBottom: \"1px solid white\", padding: \"1vmin\" }}>\n            <Heading color=\"white\" size={900}>\n              Add a new layout\n            </Heading>\n            <Heading color=\"white\" size={400}>\n              {`The layout will be stored in `}{\" \"}\n              <a\n                href={layoutSheetUrl}\n                rel=\"noreferrer\"\n                style={{ color: \"lightblue\" }}\n                target=\"_blank\"\n              >\n                {layoutSheetUrl}\n              </a>\n            </Heading>\n          </div>\n          <FlexRow\n            style={{\n              height: \"50vh\",\n              padding: \"4vmin\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <div style={{ width: \"min-content\" }}>\n              {/* <CopyField\n                onCloseComplete={onCloseComplete}\n                onCopy={() => {\n                  setIsCopiedJson(true);\n                }}\n                text={layoutString}\n              /> */}\n            </div>\n            <GoogleFormIframe active={isCopiedJSON} />\n          </FlexRow>\n        </FlexColumn>\n      </div>\n    </Modal>,\n    document.querySelector(\"#google-form-popup\") as HTMLElement\n  );\n};\nexport default GoogleFormPopup;\n\n// //TODO: IMPROVE INHERITANCE OF BUTTONS\n// const CopyField = ({\n//   text,\n//   onCloseComplete,\n//   onCopy,\n//   isCurrentClipBoardContent,\n// }: {\n//   text: string;\n//   isCurrentClipBoardContent?: boolean;\n//   onCloseComplete: () => void;\n//   onCopy: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n// }): JSX.Element => {\n//   const [isClipBoardCorrect, setIsClipBoardCorrect] = useState(false);\n//   const [isCopied, setIsCopied] = useState(false);\n\n//   useEffect(() => {\n//     navigator.clipboard\n//       .readText()\n//       .then((clipboardText) => {\n//         if (text === clipboardText) {\n//           setIsClipBoardCorrect(true);\n//           setIsCopied(true);\n//         } else {\n//           setIsCopied(false);\n//           setIsClipBoardCorrect(false);\n//         }\n//       })\n//       .catch((error: unknown) => {\n//         console.error(\"Failed to read clipboard contents:\", error);\n//       });\n//   }, [text]);\n//   return (\n//     <>\n//       <Button\n//         appearance=\"primary\"\n//         height={100}\n//         iconBefore={<ClipboardIcon />}\n//         intent=\"success\"\n//         onClick={(e) => {\n//           navigator.clipboard.writeText(text);\n//           setIsCopied(true);\n//           onCopy(e);\n//         }}\n//         text=\"Copy Layout To Clip Board\"\n//         width={250}\n//       />\n//       {/* <div>\n//         <div\n//           style={{\n//             display: \"flex\",\n//             flexDirection: \"row\",\n//             justifyContent: \"center\",\n//             paddingTop: \"1em\",\n//           }}\n//         ></div>\n//       </div> */}\n//     </>\n//   );\n// };\n\nconst SideButton = (): JSX.Element => {\n  return (\n    <div\n      style={{\n        // position: \"absolute\",\n        left: \"-100%\",\n        height: 300,\n        width: 300,\n        backgroundColor: \"red\",\n      }}\n    >\n      hello\n    </div>\n  );\n};\n\n{\n  /* <Heading color={isCopiedJSON ? \"green\" : \"\"}>\n            1. Press the Copy Button\n          </Heading> */\n}\n{\n  /* <Heading>\n            {isCopiedJSON\n              ? \"2. Fill out the form, and paste the copied text into the Content field, then submit\"\n              : \"\"}\n          </Heading> */\n}\n","import \"../../../../css/table.css\";\n\nimport { StatusIndicator } from \"evergreen-ui\";\nimport { motion } from \"framer-motion\";\nimport React, { useEffect,useState } from \"react\";\n\nimport type LayoutData from \"../../../../data_structs/LayoutData\";\nimport { AppMode, DndTypes, DragSource } from \"../../../../enums\";\nimport {\n  useApp,\n  useLayout,\n  useStoreActions,\n  useStoreState,\n  useWindowSize,\n} from \"../../../../hooks\";\nimport appConfig from \"../../../../static/appConfig\";\nimport { formatDate } from \"../../../../utils\";\nimport CardLayout from \"../../../CardLayout/CardLayout\";\nimport IXDrop from \"../../../DragAndDrop/IXDrop\";\nimport PopOver from \"../../PopOver\";\n/**\n * Displays the available layouts.\n */\n\nconst LayoutTable = (): JSX.Element => {\n  const externalLayoutsState = useStoreState(\n    (state) => state.layoutsModel.externalLayouts\n  );\n  const activeLayoutState = useStoreState(\n    (state) => state.layoutsModel.activeLayout\n  );\n\n  const { setActiveLayout } = useLayout();\n\n  return (\n    <div>\n      <IXDrop\n        cardType={DndTypes.CLOCK}\n        className=\"table-container\"\n        droppableId={DragSource.LAYOUT_TABLE}\n        isDropDisabled={false}\n      >\n        <table>\n          <tbody>\n            <tr>\n              <th>Title</th>\n              <th>Date Added</th>\n              <th>Author</th>\n            </tr>\n          </tbody>\n        </table>\n        <table>\n          <tbody>\n            {externalLayoutsState.map((l, index) => {\n              const { id, title, author, added } = l;\n              return (\n                <tr key={index} onClick={(e) => setActiveLayout(l)}>\n                  <td\n                    key={index}\n                    style={{ display: \"flex\", justifyContent: \"center\" }}\n                  >\n                    {id === activeLayoutState?.id && (\n                      <StatusIndicator color=\"success\" />\n                    )}\n                    <LayoutTitle layout={l} />\n                  </td>\n                  <td>{formatDate(added)}</td>\n                  <td>{author}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </IXDrop>\n    </div>\n  );\n};\n\nexport default LayoutTable;\n\nconst LayoutTitle = ({ layout }: { layout: LayoutData }): JSX.Element => {\n  const [hovered, setHovered] = useState(false);\n\n  const [position, setPosition] = useState([0, 0]);\n  const { title } = layout;\n  const { width, height } = useWindowSize();\n  const scale = 0.5;\n  const { appMode } = useApp();\n\n  const layoutCardIds = layout.sources();\n  const layoutWidgetsIds = layout.widgets();\n\n  const cards = useStoreState((state) =>\n    state.appModel.availableCards.filter((c) => layoutCardIds.includes(c.src))\n  );\n\n  const widgets = useStoreState((state) =>\n    state.appModel.availableWidgets.filter((c) =>\n      layoutWidgetsIds.includes(c.id)\n    )\n  );\n\n  // const appMod\n  return (\n    <div>\n      <div\n        onMouseEnter={(e) => {\n          const { pageX, pageY } = e;\n          setPosition([pageX, pageY]);\n          setHovered(true);\n        }}\n        onMouseLeave={(e) => {\n          setHovered(false);\n        }}\n        style={{\n          textDecoration: hovered ? \"underline\" : \"\",\n        }}\n      >\n        {title}\n      </div>\n      {appMode === AppMode.EDIT && hovered && (\n        <PopOver\n          height={height * scale}\n          visible={hovered}\n          width={width * scale}\n          x={position[0]}\n          y={position[1]}\n        >\n          <div\n            style={{\n              transform: `scale(${scale})`,\n              transformOrigin: \"inherit\",\n              height,\n              width,\n            }}\n          >\n            <CardLayout\n              appMode={AppMode.DISPLAY}\n              cardSettings={layout.layoutSettings.cardSettings}\n              cards={cards}\n              cols={appConfig.gridCols}\n              height={height}\n              layout={layout.layout}\n              margin={[20, 20]}\n              onLayoutChange={(l) => {}}\n              rows={appConfig.gridRows}\n              widgets={widgets}\n              width={width}\n            />\n          </div>\n        </PopOver>\n      )}\n    </div>\n  );\n};\n","import { AddIcon, IconButton, RefreshIcon } from \"evergreen-ui\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { useLayout, useSheets, useStoreState } from \"../../../../hooks\";\nimport Button from \"../../../Shared/Button\";\nimport TabPane from \"../TabPane\";\nimport GoogleFormPopup from \"./GoogleFormPopup\";\nimport LayoutTable from \"./LayoutTable\";\n\nconst LayoutTab = (): JSX.Element => {\n  const bufferState = useStoreState((state) => state.layoutsModel.bufferLayout);\n  const { activeLayout } = useLayout();\n  const { refreshSheets } = useSheets();\n\n  const [showNewLayoutPopup, setShowNewLayoutPopup] = useState(false);\n\n  const [layoutString, setLayoutString] = useState(\n    JSON.stringify(activeLayout)\n  );\n\n  useEffect(() => {\n    setLayoutString(JSON.stringify(bufferState));\n  }, [activeLayout, bufferState]);\n\n  return (\n    <div>\n      <TabPane\n        style={{\n          display: \"flex\",\n          width: \"100%\",\n          justifyContent: \"flex-start\",\n        }}\n      >\n        <Button\n          appearance=\"primary\"\n          iconBefore={<AddIcon />}\n          intent=\"success\"\n          onClick={(e) => {\n            setShowNewLayoutPopup(true);\n          }}\n          text=\"Add New Layout\"\n          width=\"55%\"\n        />\n        <div style={{ height: \"auto\", width: \"10%\" }}>\n          <IconButton\n            height=\"100%\"\n            icon={<RefreshIcon />}\n            onClick={(\n              _event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n            ) => {\n              refreshSheets();\n            }}\n            width=\"20%\"\n          />\n        </div>\n      </TabPane>\n      {showNewLayoutPopup && (\n        <GoogleFormPopup\n          onCloseComplete={() => {\n            refreshSheets();\n            setShowNewLayoutPopup(false);\n          }}\n          visible={showNewLayoutPopup}\n        />\n      )}\n      <div>\n        <LayoutTable />\n      </div>\n    </div>\n  );\n};\n\nexport default LayoutTab;\n","import type { ReactNode} from \"react\";\nimport React, { ReactElement, useEffect, useRef } from \"react\";\nimport type {\n  DraggableProps} from \"react-beautiful-dnd\";\nimport {\n  Draggable,\n  DraggableProvided,\n  DraggingStyle,\n} from \"react-beautiful-dnd\";\nimport { createPortal } from \"react-dom\";\n\nimport type { DndTypes } from \"../../enums\";\nimport { useStoreState } from \"../../hooks\";\n\ninterface DraggableDiv extends Omit<DraggableProps, \"children\"> {\n  dndType: DndTypes;\n  className?: string;\n  children: ReactNode;\n  dragAll?: boolean;\n  height?: number;\n  id?: string;\n}\n\n/**\n * A draggable div for wrapping draggable widgets in the editor panel.\n */\nconst DraggableWidget = ({\n  dndType,\n  className,\n  children,\n  dragAll,\n  draggableId,\n  index,\n  height,\n  id,\n}: DraggableDiv): JSX.Element => {\n  const currentLayoutState = useStoreState(\n    (state) => state.layoutsModel.activeLayout\n  );\n\n  let isInLayout = currentLayoutState?.layout.lg\n    .map((l) => l.i)\n    .includes(draggableId);\n\n  useEffect(() => {\n    isInLayout = currentLayoutState?.layout.lg\n      .map((l) => l.i)\n      .includes(draggableId);\n  }, [currentLayoutState]);\n  const getItemStyle = () => ({\n    display: isInLayout ? \"none\" : \"block\",\n  });\n\n  // const renderDraggable = useDraggableInPortal();\n\n  if (!React.isValidElement(children)) return <div />;\n  return (\n    <div\n      style={{\n        display: isInLayout ? \"block\" : \"block\",\n        height: height ?? \"\",\n      }}\n    >\n      {/* <div style={{ display: isInLayout ? \"none\" : \"block\" }}> */}\n      <Draggable draggableId={draggableId} index={index}>\n        {\n          //@ts-ignore\n          (provided, snapshot) => {\n            // renderDraggable((provided, snapshot) => {\n            console.log(isInLayout);\n            if (\n              snapshot.isDragging &&\n              provided &&\n              provided.draggableProps &&\n              provided.draggableProps.style\n            ) {\n              //@ts-ignore\n              provided.draggableProps.style.left =\n                //@ts-ignore\n                provided.draggableProps.style.offsetLeft;\n              //@ts-ignore\n              provided.draggableProps.style.top =\n                //@ts-ignore\n                provided.draggableProps.style.offsetTop;\n            }\n            return (\n              <div\n                className={className}\n                id={id}\n                ref={provided.innerRef}\n                // style={getItemStyle()}\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n              >\n                {React.cloneElement(children, { provided })}\n              </div>\n            );\n          }\n        }\n      </Draggable>\n    </div>\n  );\n};\n\nexport default DraggableWidget;\n","import \"../../../../css/table.css\";\nimport \"../../../../css/viewCard.css\";\nimport \"../../../../css/widgetsTab.css\";\n\nimport { Heading } from \"evergreen-ui\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Layout, Layouts } from \"react-grid-layout\";\n\nimport type WidgetData from \"../../../../data_structs/WidgetData\";\nimport { WidgetType } from \"../../../../data_structs/WidgetData\";\nimport { DndTypes, DragSource } from \"../../../../enums\";\nimport {\n  useApp,\n  useLayout,\n  useStoreState,\n  useWindowSize,\n} from \"../../../../hooks\";\nimport appConfig from \"../../../../static/appConfig\";\nimport DraggableWidget from \"../../../DragAndDrop/DraggableWidget\";\nimport IXDrop from \"../../../DragAndDrop/IXDrop\";\nimport Clock from \"../../../Widgets/Clock\";\nimport HowToUse from \"../../../Widgets/HowToUse\";\nimport WidgetRenderer from \"../../../Widgets/WidgetRenderer\";\nimport TabPane from \"../TabPane\";\n\n/**\n * Table for displaying the available card layouts\n */\nconst WidgetsTab = (): JSX.Element => {\n  const { activeLayout, activeWidgets } = useLayout();\n  const availableWidgets = useStoreState(\n    (state) => state.appModel.availableWidgets\n  );\n  //\n  // const {  } = useApp();\n\n  const [widgetsToRender, setWidgetsToRender] =\n    useState<WidgetData[]>(availableWidgets);\n\n  useEffect(() => {\n    setWidgetsToRender(\n      availableWidgets.filter((w) => !activeLayout?.widgets().includes(w.id))\n    );\n  }, [availableWidgets, activeLayout, activeWidgets.length]);\n\n  return (\n    <TabPane>\n      <div\n        style={{\n          backgroundColor: \"#1f1f1f\",\n          borderRadius: \".5em\",\n          overflow: \"hidden\",\n          padding: \"1em\",\n        }}\n      >\n        {widgetsToRender.length === 0 ? (\n          <div>All Widgets in Use</div>\n        ) : (\n          <IXDrop\n            cardType={DndTypes.CLOCK}\n            className=\"widgets-container\"\n            droppableId={DragSource.WIDGETS_TABLE}\n            isDropDisabled={false}\n          >\n            <WidgetWrapper>\n              {(scale, colWidth, rowHeight) => {\n                return widgetsToRender\n                  .filter((w) => !activeLayout?.widgets().includes(w.id))\n                  .map((w, index) => {\n                    return (\n                      <DraggableWidget\n                        className=\"draggable-widget\"\n                        dndType={DndTypes.WIDGET}\n                        draggableId={w.id}\n                        height={scale * w.h * rowHeight}\n                        id={`widgets-tab-draggable-${w.id}`}\n                        index={index}\n                        isDragDisabled={false}\n                        key={index}\n                      >\n                        <WidgetRenderer\n                          colWidth={colWidth}\n                          rowHeight={rowHeight}\n                          scale={scale}\n                          widget={w}\n                        />\n                      </DraggableWidget>\n                    );\n                  });\n              }}\n            </WidgetWrapper>\n          </IXDrop>\n        )}\n      </div>\n    </TabPane>\n  );\n};\n\nexport default WidgetsTab;\n\nconst WidgetWrapper = ({\n  children,\n}: {\n  children: (\n    scale: number,\n    colWidth: number,\n    rowHeight: number\n  ) => JSX.Element | JSX.Element[];\n}): JSX.Element => {\n  const editorPanelReference = useRef<HTMLDivElement>();\n  const [scalar, setScalar] = useState(1);\n  const { width, height } = useWindowSize();\n\n  const colWidth = width / appConfig.gridCols;\n  const rowHeight = height / appConfig.gridRows;\n\n  useEffect(() => {\n    editorPanelReference.current = document.querySelector(\n      \"#editor-panel\"\n    ) as HTMLDivElement;\n    console.log(editorPanelReference.current.getBoundingClientRect().width);\n    setScalar(editorPanelReference.current.getBoundingClientRect().width / width);\n  }, [width]);\n\n  return <div>{children(scalar * 1.5, colWidth, rowHeight)}</div>;\n};\n","import \"../../../css/editorPanel.css\";\nimport \"react-tabs/style/react-tabs.css\";\n\nimport { Heading } from \"evergreen-ui\";\nimport React from \"react\";\nimport { Tab, TabList, TabPanel,Tabs } from \"react-tabs\";\n\nimport { useErrors } from \"../../../hooks\";\nimport AppTab from \"./AppTab/AppTab\";\nimport ContentTab from \"./ContentsTab/ContentsTab\";\nimport IssuesTab from \"./IssuesTab/IssuesTab\";\nimport LayoutTab from \"./LayoutTab/LayoutTab\";\nimport WidgetsTab from \"./WidgetsTab/WidgetsTab\";\n// https://github.com/goodoldneon/react-drag-and-dock#api\n\n/**Contains all the tab components for the editor panel */\nconst Editor = (): JSX.Element => {\n  return (\n    <Tabs>\n      <TabList>\n        <Tab>Content</Tab>\n        <Tab>Widgets</Tab>\n        <Tab>Layouts</Tab>\n        <Tab>App Settings</Tab>\n        <Tab>\n          Issues <ErrorsNofictions />\n        </Tab>\n      </TabList>\n      <TabPanel>\n        <ContentTab />\n      </TabPanel>\n      <TabPanel>\n        <WidgetsTab />\n      </TabPanel>\n      <TabPanel>\n        <LayoutTab />\n      </TabPanel>\n      <TabPanel>\n        <AppTab />\n      </TabPanel>\n      <TabPanel>\n        <IssuesTab />\n      </TabPanel>\n    </Tabs>\n  );\n};\n\nexport default Editor;\n\nconst ErrorsNofictions = (): JSX.Element => {\n  const { allErrors } = useErrors();\n  return (\n    <div\n      style={{\n        backgroundColor: allErrors.length > 0 ? \"#D14343\" : \"#52BD95\",\n        opacity: 0.5,\n        borderRadius: \"50%\",\n        width: 20,\n        height: 20,\n        aspectRatio: \"1/1\",\n        fontSize: \"70%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginLeft: \"1em\",\n      }}\n    >\n      {50 < allErrors.length ? \"50+\" : allErrors.length}\n    </div>\n  );\n};\n","import \"../../css/card/settingsMenu.css\";\n\nimport type { ActionCreator } from \"easy-peasy\";\nimport {\n  Button as EvergreenButton,\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  Heading,\n  IconButton,\n  SelectMenu,\n} from \"evergreen-ui\";\nimport { motion } from \"framer-motion\";\nimport React, { useEffect, useState } from \"react\";\nimport Select from \"react-select\";\n\nimport type CardData from \"../../data_structs/CardData\";\nimport { useCardEditor, useLayout } from \"../../hooks\";\nimport Button from \"../Shared/Button\";\nimport FlexColumn from \"../Shared/FlexColumn\";\nimport FlexRow from \"../Shared/FlexRow\";\nimport TabPane from \"./EditorTabs/TabPane\";\n\nconst SettingsMenu = ({ card }: { card: CardData }): JSX.Element => {\n  const {\n    setCardScale,\n    setCardBackgroundColor,\n    cardBackgroundColor,\n    clearEditingCard,\n    setCardContentFit,\n    cardContentFit,\n  } = useCardEditor();\n  const { activeLayout } = useLayout();\n\n  const [currentCardSettings, setCurrentCardSettings] = useState(\n    activeLayout?.getCardSettings(card.id)\n  );\n  const [cardSettingsToGet, setcardSettingsToGet] = useState(\n    activeLayout?.getCardSettings(card.id)\n  );\n\n  useEffect(() => {\n    setcardSettingsToGet(activeLayout?.getCardSettings(card.id));\n    console.log(cardSettingsToGet);\n  }, [card.id]);\n\n  return (\n    <motion.div\n      style={{\n        // height: \"100%\",\n        top: \"6%\",\n        height: \"95%\",\n        width: \"inherit\",\n        // height: \"inherit\",\n        pointerEvents: \"all\",\n        position: \"absolute\",\n        zIndex: 1000,\n        // top: 0,\n        backgroundColor: \"#2d2d2d\",\n        boxSizing: \"border-box\",\n      }}\n    >\n      <TabPane style={{ width: \"auto\" }}>\n        <FlexColumn>\n          <InputRow title=\"Background Color:\">\n            <input\n              className=\"nodrag\"\n              defaultValue=\"rbga(0,0,0,0)\"\n              onChange={(e) => {\n                setCardBackgroundColor({\n                  cardId: card.id,\n                  color: e.target.value,\n                });\n              }}\n              type=\"color\"\n              value={cardBackgroundColor}\n            />\n          </InputRow>\n          <InputRow title=\"Scale: \">\n            <ScaleControls\n              scale={currentCardSettings?.scale ?? 0}\n              setScale={(scale) => {\n                setCardScale({ cardId: card.id, scale });\n              }}\n            />\n          </InputRow>\n          <InputRow title=\"Object Fit: \">\n            <Select\n              className=\"basic-single\"\n              classNamePrefix=\"select\"\n              defaultValue={cardContentFit}\n              onChange={(selected: any) => {\n                console.log(selected);\n                setCardContentFit({\n                  cardId: card.id,\n                  contentFit: selected.value,\n                });\n              }}\n              style={{ option: { color: \"black\" } }}\n              //@ts-ignore\n              options={[\"contain\", \"fill\", \"cover\", \"scale-down\", \"none\"].map(\n                (l) => {\n                  return { value: l, label: l };\n                }\n              )}\n            />\n          </InputRow>\n          <FlexRow style={{ padding: \"2vmin\" }}></FlexRow>\n          <Button\n            width={\"100%\"}\n            height={60}\n            text=\"Exit Card Editor\"\n            onClick={(e) => {\n              clearEditingCard();\n            }}\n          />\n        </FlexColumn>\n      </TabPane>\n    </motion.div>\n  );\n};\n\nconst InputRow = ({\n  title,\n  children,\n}: {\n  title: string;\n  children: JSX.Element | JSX.Element[];\n}): JSX.Element => {\n  return (\n    <Heading\n      className=\"menu-input-row\"\n      size={800}\n      style={{\n        display: \"flex\",\n        color: \"white\",\n        padding: \".25em\",\n        alignItems: \"center\",\n      }}\n    >\n      {title}\n      {children}\n    </Heading>\n  );\n};\n\nconst ScaleControls = ({\n  setScale,\n  scale,\n}: {\n  setScale: (scale: number) => void;\n  scale: number;\n}): JSX.Element => {\n  const [localScale, setLocalScale] = useState(scale);\n\n  useEffect(() => {\n    setScale(localScale);\n  }, [localScale]);\n\n  return (\n    <FlexRow>\n      <IconButton\n        icon={<ChevronLeftIcon size={30} />}\n        onClick={() => {\n          setLocalScale(localScale - 0.1);\n        }}\n        style={{ width: \"30%\", height: \"100%\" }}\n      />\n      <input\n        defaultValue={0.5}\n        onChange={(e) => {\n          // setLocalScale(localScale);\n          // setScale(local);\n        }}\n        style={{ width: 30 }}\n        type=\"text\"\n        value={scale.toString().slice(0, 3)}\n      />\n      <IconButton\n        icon={<ChevronRightIcon size={30} />}\n        onClick={() => {\n          setLocalScale(localScale + 0.1);\n        }}\n        style={{ width: \"30%\", height: \"100%\" }}\n      />\n    </FlexRow>\n  );\n};\n\nexport default SettingsMenu;\n","import \"../../css/editorPanel.css\";\n\nimport classNames from \"classnames\";\nimport { MinusIcon, PlusIcon } from \"evergreen-ui\";\nimport React, { useState } from \"react\";\nimport ReactDom from \"react-dom\";\nimport Draggable from \"react-draggable\";\n\nimport { AppMode } from \"../../enums\";\nimport { useApp, useStoreState } from \"../../hooks\";\nimport EditorTabs from \"./EditorTabs/EditorTabs\";\nimport SettingsMenu from \"./SettingsMenu\";\n\n/**Draggable panel which contains the editor body, as well as a header bar with a min/max button for resizing the panel. Renders to \"editor-panel-container\" div in index.html*/\n\nconst EditorPanel = (): JSX.Element => {\n  const { appMode, editingCard } = useApp();\n\n  const [minimized, setMinimized] = useState(false);\n\n  const editorPanelClass = classNames(\"editor-panel\", {\n    \"editor-panel-full\": !minimized,\n    hidden: appMode === AppMode.DISPLAY,\n    \"editor-panel-minimized\": minimized,\n  });\n  const editorClass = classNames(\"editor\", {\n    \"editor-visible\": appMode === AppMode.EDIT,\n  });\n\n  return ReactDom.createPortal(\n    <Draggable\n      bounds={{\n        left: 0,\n        top: 0,\n        right: window.innerWidth - 50,\n        bottom: window.innerHeight - 50,\n      }}\n      defaultClassName={editorPanelClass}\n      defaultPosition={{ x: 100, y: 100 }}\n      handle=\".editor-panel-handle\"\n    >\n      <div className={editorClass} id=\"editor-panel\">\n        <PanelHeader>\n          <BarButton\n            icon={<PlusIcon />}\n            onMouseUp={() => {\n              setMinimized(false);\n            }}\n          />\n          <BarButton\n            icon={<MinusIcon />}\n            onMouseUp={() => {\n              setMinimized(true);\n            }}\n          />\n        </PanelHeader>\n        {editingCard && <SettingsMenu card={editingCard} />}\n        <EditorTabs />\n      </div>\n    </Draggable>,\n    document.querySelector(\"#editor-panel-container\") as HTMLDivElement\n  );\n};\n\nexport default React.memo(EditorPanel);\n\ninterface PanelHeaderProperties {\n  children: JSX.Element | JSX.Element[];\n}\nconst PanelHeader = ({ children }: PanelHeaderProperties): JSX.Element => {\n  return <div className=\"editor-panel-handle panel-header\">{children}</div>;\n};\n\nconst BarButton = ({\n  icon,\n  onMouseUp,\n}: {\n  icon: JSX.Element;\n  onMouseUp: React.MouseEventHandler<HTMLDivElement>;\n}): JSX.Element => {\n  return (\n    <div className=\"window-button\" onMouseUp={onMouseUp}>\n      {icon}\n    </div>\n  );\n};\n","import { motion } from \"framer-motion\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useLongPress } from \"react-use\";\n\nimport { useStoreActions } from \"../hooks\";\nimport appConfig from \"../static/appConfig\";\n\n/**Invisible button in the bottom left corner of the screen. Hold touch/click to toggle app mode */\nconst ModeChangeButton = (): JSX.Element => {\n  const toggleModeAction = useStoreActions(\n    (actions) => actions.appModel.toggleAppMode\n  );\n\n  const longPressEvent = useLongPress(() => {\n    toggleModeAction();\n  });\n\n  const modeChangeButtonStyle = {\n    position: \"absolute\",\n    width: 50,\n    height: 50,\n    border: appConfig.showModeSwitchButton ? \"1px solid red\" : \"none\",\n    bottom: 0,\n    left: 0,\n    opacity: 0,\n  } as React.CSSProperties;\n\n  // const [mosued, setmosue] = useState(initialState)\n  return ReactDOM.createPortal(\n    <motion.div\n      style={{ ...modeChangeButtonStyle, backgroundColor: \"white\" }}\n      whileTap={{ backgroundColor: \"green\", opacity: 1 }}\n    >\n      <div style={modeChangeButtonStyle} {...longPressEvent}></div>,\n    </motion.div>,\n    document.querySelector(\"#mode-change-button\") as HTMLElement\n  );\n};\n\nexport default ModeChangeButton;\n","import React, { useEffect,useState } from \"react\";\n\nconst Screen = ({\n  children,\n  padding,\n}: {\n  children: JSX.Element | JSX.Element[];\n  padding?: string;\n}): JSX.Element => {\n  return (\n    <div style={{width: \"100vw\", height: \"100vh\"}}>\n      {children}\n    </div>\n  );\n};\n\nexport default Screen;\n","import React, { useState, useEffect, useRef } from \"react\";\n\nconst Timer = ({ seconds, onEnd }: { seconds: number; onEnd: () => void }) => {\n  // initialize timeLeft with the seconds prop\n  const [timeLeft, setTimeLeft] = useState(seconds);\n\n  useEffect(() => {\n    // exit early when we reach 0\n    if (timeLeft == 0) {\n      onEnd();\n    }\n\n    if (!timeLeft) return;\n\n    // save intervalId to clear the interval when the\n    // component re-renders\n    const intervalId = setInterval(() => {\n      setTimeLeft(timeLeft - 1);\n    }, 1000);\n\n    // clear interval on re-render to avoid memory leaks\n    return () => clearInterval(intervalId);\n    // add timeLeft as a dependency to re-rerun the effect\n    // when we update it\n  }, [timeLeft]);\n\n  return (\n    <div>\n      <h1>{timeLeft}</h1>\n    </div>\n  );\n};\n\nexport default Timer;\n","import { Heading, Spinner, WarningSignIcon } from \"evergreen-ui\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport Timer from \"./components/Shared/Timer\";\nimport { useApp, useSheets } from \"./hooks\";\nimport appConfig from \"./static/appConfig\";\n\ninterface LoadingScreenProperties {\n  setVisible: (v: boolean) => void;\n  sheetsAreLoaded: boolean;\n}\n\nconst LoadingScreenContext = React.createContext<LoadingScreenProperties>({\n  setVisible: (v: boolean) => {},\n  sheetsAreLoaded: false,\n});\n\nconst LoadingScreen = (): JSX.Element => {\n  const { sheetsAreLoaded } = useApp();\n  const { urlQueryLink, fetchTopLevelSheet } = useSheets();\n\n  console.log(sheetsAreLoaded);\n\n  const [visible, setVisible] = useState(true);\n\n  useEffect(() => {\n    if (sheetsAreLoaded) {\n      setVisible(false);\n    }\n  }, [sheetsAreLoaded]);\n\n  const variants = {\n    in: {\n      opacity: [0, 1],\n      y: [\"-30%\", \"-50%\"],\n    },\n    out: {\n      y: \"-60%\",\n      opacity: 0,\n    },\n  };\n\n  return (\n    <LoadingScreenContext.Provider\n      value={{\n        setVisible,\n        sheetsAreLoaded,\n      }}\n    >\n      <AnimatePresence>\n        {visible && (\n          <motion.div\n            animate=\"in\"\n            exit=\"out\"\n            // initial={\"in\"}\n            style={{\n              width: \"40%\",\n              height: \"50%\",\n              minHeight: \"fit-content\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              textAlign: \"center\",\n              position: \"absolute\",\n              justifyContent: \"center\",\n              zIndex: 100,\n              left: \"50%\",\n              x: \"-50%\",\n              top: \"50%\",\n              borderRadius: \"10px\",\n              backdropFilter: \"blur(10px)\",\n              border: \" 1px solid rgba(255, 255, 255, 0.294)\",\n              boxShadow: \"0 8px 32px 0 rgba(49, 49, 49, 0.37)\",\n              padding: \"1em\",\n              opacity: 0,\n            }}\n            variants={variants}\n          >\n            {!sheetsAreLoaded && urlQueryLink && (\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  // justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Heading size={900}>Loading Content from Google Sheets</Heading>\n                <Spinner size={100} />\n              </div>\n            )}\n\n            {!urlQueryLink && <NoUrlError />}\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </LoadingScreenContext.Provider>\n  );\n};\n\nexport default LoadingScreen;\n\nconst NoUrlError = (): JSX.Element => {\n  const { setVisible } = useContext(LoadingScreenContext);\n  const { fetchTopLevelSheet } = useSheets();\n\n  return (\n    <>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <WarningSignIcon size={100} />\n      </div>\n      <Heading size={900}>{}</Heading>\n      <Heading size={900}>\n        No Google Sheet Provided via URL! <br></br>\n        <br></br>Switching to backup sheet in {`${appConfig.noUrlTimeout}`}s.\n        <Timer\n          onEnd={() => {\n            setVisible(false);\n            fetchTopLevelSheet(appConfig.backupParentSheetUrl);\n          }}\n          seconds={appConfig.noUrlTimeout}\n        />\n        Visit{\" \"}\n        <a\n          href=\"https://github.com/NCSU-Libraries/cupboard-dxl-display/wiki\"\n          rel=\"noreferrer\"\n          target=\"_blank\"\n        >\n          Cupboard Wiki\n        </a>{\" \"}\n        for more information on setting up your Google Sheets for Cupboard.\n      </Heading>\n    </>\n  );\n};\n","import \"./App.global.css\";\nimport \"./css/global.css\";\n\nimport { DndContext } from \"@dnd-kit/core\";\nimport React from \"react\";\nimport type { Layouts } from \"react-grid-layout\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport AppDragContext from \"./components/AppWrappers/AppDragContext\";\nimport AppTimers from \"./components/AppWrappers/AppTimers\";\nimport Background from \"./components/Background\";\nimport CardLayout from \"./components/CardLayout/CardLayout\";\nimport EditorPanel from \"./components/EditorPanel/EditorPanel\";\nimport Loader from \"./components/Loader\";\nimport ModeChangeButton from \"./components/ModeChangeButton\";\nimport Screen from \"./components/Shared/Screen\";\nimport { AppMode } from \"./enums\";\nimport {\n  useApp,\n  useEffectOnce,\n  useLayout,\n  useQuery,\n  useSheets,\n  useWindowSize,\n} from \"./hooks\";\nimport LoadingScreen from \"./LoadingScreen\";\nimport appConfig from \"./static/appConfig\";\n\n/**\n * High level container, the root component. Initial fetch requests to spreadsheets are made here via a useEffect hook.\n */\n\nconst Body = (): JSX.Element => {\n  const { fetchTopLevelSheet, setUrlSheet } = useSheets();\n\n  const { activeLayout, setBufferLayout, activeCards, activeWidgets } =\n    useLayout();\n  const { urlQueryLink } = useSheets();\n\n  const { appMode, sheetsAreLoaded } = useApp();\n\n  const query = useQuery();\n  useEffectOnce(() => {\n    setUrlSheet(query.get(\"url\"));\n    const url = query.get(\"url\");\n    if (url) {\n      fetchTopLevelSheet(url);\n    }\n  });\n\n  const { width, height } = useWindowSize();\n\n  // account?url=https://docs.google.com/spreadsheets/d/e/2PACX-1vRalMG47cvXmCbEqeIJWn5qwd9bPhHUV16_VN7LuKsv53YQdn9e8XSAzNulXCtP_BIFBTUy0Z5e6KKE/pub?output=csv\n  return (\n    <>\n      <Background />\n      <ModeChangeButton />\n      <LoadingScreen />\n      {sheetsAreLoaded && (\n        <AppTimers>\n          <AppDragContext>\n            <Loader visible={sheetsAreLoaded} />\n            <EditorPanel />\n            <Screen>\n              <DndContext>\n                {activeLayout && sheetsAreLoaded && (\n                  <CardLayout\n                    appMode={appMode}\n                    cardSettings={activeLayout.layoutSettings.cardSettings}\n                    cards={[...activeCards]}\n                    cols={appConfig.gridCols}\n                    height={height}\n                    isDraggable={appMode === AppMode.EDIT}\n                    isResizable={appMode === AppMode.EDIT}\n                    layout={activeLayout.layout}\n                    margin={[20, 20]}\n                    onLayoutChange={(l) => {\n                      const newLayout: Layouts = {\n                        lg: l,\n                        md: l,\n                        sm: l,\n                        xs: l,\n                        xxs: l,\n                      };\n                      if (appMode === AppMode.EDIT) {\n                        activeLayout.setGridLayout(newLayout);\n                      }\n                      setBufferLayout(newLayout);\n                    }}\n                    rows={appConfig.gridRows}\n                    widgets={[...activeWidgets]}\n                    width={width}\n                  />\n                )}\n              </DndContext>\n            </Screen>\n          </AppDragContext>\n        </AppTimers>\n      )}\n    </>\n  );\n};\n\nconst App = (): JSX.Element => {\n  return (\n    <BrowserRouter>\n      <Body />\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import imageThumbnail from \"image-thumbnail\";\n\nimport { InteractionType } from \"../enums\";\nimport IFrameValidator from \"../IFrameValidator\";\nimport type RawCardRow from \"../interfaces/RawCardRow\";\nimport type { WidgetType } from \"./WidgetData\";\n\nexport type ContentType = \"video\" | \"image\" | \"website\" | \"embed\" | \"widget\";\n\ninterface ContentCardData {\n  src: string;\n  title: string;\n  added: Date;\n  sourceId: string;\n  author: string;\n}\n\ninterface WidgetCardData {\n  widgetType: WidgetType;\n}\n/**Contains all the information needed to create a display card */\nexport default class CardData {\n  readonly id: string;\n  readonly src: string;\n  readonly title: string;\n  readonly added?: Date;\n  readonly backgroundColor?: string;\n  readonly scale?: string;\n  // readonly sourceId: string;\n  readonly author: string;\n  readonly interaction: InteractionType;\n  readonly contentType: ContentType;\n  readonly metaData: ContentCardData | WidgetCardData;\n  validator!: IFrameValidator;\n  isActive!: boolean;\n  failed!: boolean;\n\n  constructor(row: RawCardRow, index: number) {\n    // console.log(`GOT IMAGE CARD ROW: ${isImgLink(row.src)}`);\n    this.id = `row_${index}_${row.title}`;\n    // this.id = row.src;\n    this.src = row.src;\n    this.title = row.title;\n    this.added = new Date(row.added);\n    // this.sourceId = row.src;\n    this.author = row.author;\n    this.interaction =\n      InteractionType[row.interaction as keyof typeof InteractionType];\n    this.contentType = getContentType(this.src);\n    if (this.contentType === \"widget\" && row.widgetType) {\n      this.metaData = {\n        widgetType: row.widgetType,\n      };\n      this.id = row.widgetType;\n    } else {\n      this.metaData = {\n        src: row.src,\n        title: row.title,\n        added: new Date(row.added),\n        sourceId: row.src,\n        author: row.author,\n      };\n      this.id = row.src;\n    }\n\n    this.isActive = false;\n    this.validator = new IFrameValidator(this.src);\n    this.failed = false;\n\n    // if ()\n  }\n  setActive(b: boolean): void {\n    this.isActive = b;\n  }\n\n  fail(): void {\n    console.log(this.validator.errors);\n    this.failed = true;\n    // this.error =\n  }\n  // generateThumbnail(): void {\n  //   imageThumbnail('resources/images/dog.jpg')\n  //   .then(thumbnail => { console.log(thumbnail) })\n  //   .catch(err => console.error(err));\n  //   // try {\n  //   //   const thumbnail = await imageThumbnail();\n  //   //   console.log(thumbnail);\n  //   // } catch (err) {\n  //   //   console.error(err);\n  //   // }\n  // }\n}\n\nfunction getContentType(url: string): ContentType {\n  if (isImgLink(url)) return \"image\";\n  if (isVideo(url)) return \"video\";\n  if (isEmbed(url)) return \"embed\";\n  if (isWebsite(url)) return \"website\";\n  return \"widget\";\n}\n\nfunction isImgLink(url: string) {\n  if (typeof url !== \"string\") return false;\n  const imageReg = /[./](gif|jpg|jpeg|tiff|png)$/i;\n  return imageReg.test(url);\n}\n\nfunction isVideo(url: string) {\n  if (typeof url !== \"string\") return false;\n  const videoReg = /[./](mp4|webm|mov)$/i;\n  return videoReg.test(url);\n  // url.match(/^http[^\\?]*.(jpg|jpeg|gif|png|tiff|bmp)(\\?(.*))?$/gim) != null\n}\n\nfunction isEmbed(url: string) {\n  if (typeof url !== \"string\") return false;\n  return url.includes(\"embed\");\n}\n\nfunction isWebsite(url: string) {\n  if (typeof url !== \"string\") return false;\n  return url.includes(\"https\");\n}\n","import type { WidgetInfo } from \"../static/widgets\";\nimport type { ContentType } from \"./CardData\";\n\nexport type WidgetType = \"clock\" | \"info\";\n\n/**Contains all the information needed to create a display card */\nexport default class WidgetData {\n  readonly id: WidgetType;\n  readonly contentType: ContentType;\n  readonly w: number;\n  readonly h: number;\n\n  isActive: boolean;\n\n  constructor(data: WidgetInfo) {\n    // constructor(name: WidgetType) {\n    this.id = data.id;\n    this.w = data.w;\n    this.h = data.h;\n    // this.id = name as string;\n    this.isActive = false;\n    this.contentType = \"widget\";\n  }\n  setActive(b: boolean): void {\n    this.isActive = b;\n  }\n}\n","import type { WidgetType } from \"../data_structs/WidgetData\";\n\nconst clock = { id: \"clock\" as WidgetType, w: 2, h: 2 };\nconst info = { id: \"info\" as WidgetType, w: 1, h: 1 };\n\nexport interface WidgetInfo {\n  id: WidgetType;\n  w: number;\n  h: number;\n}\n\ntype Widgets = {\n  [k in WidgetType]: { id: WidgetType; w: number; h: number };\n};\n\nconst widgets: Widgets = {\n  clock,\n  info,\n};\n\nexport default widgets;\n","import type { Action, Thunk, ThunkOn } from \"easy-peasy\";\r\nimport { action, thunk, thunkOn } from \"easy-peasy\";\r\nimport _ from \"lodash\";\r\n\r\nimport CardData from \"../data_structs/CardData\";\r\nimport WidgetData from \"../data_structs/WidgetData\";\r\nimport { AppMode } from \"../enums\";\r\nimport type AppError from \"../interfaces/AppError\";\r\nimport type RawCardRow from \"../interfaces/RawCardRow\";\r\nimport appConfig from \"../static/appConfig\";\r\nimport widgets from \"../static/widgets\";\r\nimport type { StoreModel } from \"./index\";\r\n/**\r\n * Core app model\r\n * @param\r\n */\r\n\r\nexport interface AppDataModel {\r\n  //state\r\n  isLoaded: boolean;\r\n  availableCards: CardData[];\r\n  availableWidgets: WidgetData[];\r\n  activeWidgets: WidgetData[];\r\n  activeCards: CardData[];\r\n  rotationSpeed: number;\r\n  rotateLayouts: boolean;\r\n  appMode: AppMode;\r\n  appErrors: AppError[];\r\n  editingCard: CardData | undefined;\r\n  //listeners\r\n  onCardSheetLoadSuccess: ThunkOn<AppDataModel, never, StoreModel>;\r\n  onSwapCardContent: ThunkOn<AppDataModel, never, StoreModel>;\r\n  onSetActiveLayout: ThunkOn<AppDataModel, never, StoreModel>;\r\n  //managers\r\n  manageViewModeChange: Thunk<AppDataModel, AppMode>;\r\n  toggleAppMode: Thunk<AppDataModel, never>;\r\n  //simple setters\r\n  addAppError: Action<AppDataModel, AppError>;\r\n  setRotationSpeed: Action<AppDataModel, number>;\r\n  setRotateLayouts: Action<AppDataModel, boolean>;\r\n  setAppMode: Action<AppDataModel, AppMode>;\r\n  setActiveCards: Action<AppDataModel, CardData[]>;\r\n  setActiveWidgets: Action<AppDataModel, WidgetData[]>;\r\n  setAvailableCards: Action<AppDataModel, CardData[]>;\r\n  setEditingCard: Action<AppDataModel, CardData | undefined>;\r\n}\r\n\r\nconst availableWidgets = Object.values(widgets).map(\r\n  (widgetInfo) => new WidgetData(widgetInfo)\r\n);\r\n\r\nconst appModel: AppDataModel = {\r\n  //state\r\n  isLoaded: false,\r\n  availableCards: [],\r\n  availableWidgets: availableWidgets,\r\n  activeWidgets: [],\r\n  activeCards: [],\r\n  appErrors: [],\r\n  rotateLayouts: true,\r\n  rotationSpeed: appConfig.rotationDuration,\r\n  appMode: AppMode.DISPLAY,\r\n  editingCard: undefined,\r\n  // animationCounter: 0,\r\n  //managers\r\n  /**Control side effects for altering the view state of the app, and dispatch a setter for the state */\r\n  manageViewModeChange: thunk((actions, viewModeEnum) => {\r\n    actions.setAppMode(viewModeEnum);\r\n    switch (viewModeEnum) {\r\n      case AppMode.EDIT:\r\n        break;\r\n      case AppMode.DISPLAY:\r\n        break;\r\n      case AppMode.CYCLE:\r\n        break;\r\n      default:\r\n        undefined;\r\n    }\r\n  }),\r\n  /**utility for switching between app modes with the mode switcher button. Also sets the editing card to undefined when switching back into display mode*/\r\n  toggleAppMode: thunk((actions, _, { getState }) => {\r\n    switch (getState().appMode) {\r\n      case AppMode.EDIT:\r\n        // eslint-disable-next-line unicorn/no-useless-undefined\r\n        actions.setEditingCard(undefined);\r\n        actions.setAppMode(AppMode.DISPLAY);\r\n        break;\r\n      case AppMode.DISPLAY:\r\n        actions.setAppMode(AppMode.EDIT);\r\n        break;\r\n      case AppMode.CYCLE:\r\n        break;\r\n      default:\r\n    }\r\n  }),\r\n  setAvailableCards: action((state, cardDataArray) => {\r\n    state.availableCards = cardDataArray;\r\n  }),\r\n  setActiveCards: action((state, cardDataArray) => {\r\n    state.activeCards = cardDataArray;\r\n  }),\r\n  setActiveWidgets: action((state, widgetDataArray) => {\r\n    state.activeWidgets = widgetDataArray;\r\n  }),\r\n  setAppMode: action((state, viewModeEnum) => {\r\n    state.appMode = viewModeEnum;\r\n  }),\r\n  setRotationSpeed: action((state, speed) => {\r\n    state.rotationSpeed = speed;\r\n  }),\r\n  setRotateLayouts: action((state, should) => {\r\n    state.rotateLayouts = should;\r\n  }),\r\n  setEditingCard: action((state, card) => {\r\n    state.editingCard = card;\r\n  }),\r\n  addAppError: action((state, error) => {\r\n    const errorsString = state.appErrors.map(\r\n      (error) => JSON.stringify(error) as string\r\n    );\r\n    const newError = JSON.stringify(error);\r\n    // const errorBasic = error.\r\n    if (!errorsString.includes(newError)) {\r\n      state.appErrors.push(error);\r\n    }\r\n  }),\r\n\r\n  //listeners\r\n  onCardSheetLoadSuccess: thunkOn(\r\n    // targetResolver:\r\n    (actions, storeActions) =>\r\n      storeActions.googleSheetsModel.setAppGoogleSheetData,\r\n    // handler:\r\n    async (actions, target, { getState }) => {\r\n      target.payload.getSheetRows<RawCardRow>(\"CARDS\").then((rows) => {\r\n        const rawCardRowsArray = rows.map((row) => {\r\n          return {\r\n            src: row.src,\r\n            title: row.title,\r\n            added: row.added,\r\n            sourceid: row.sourceid,\r\n            author: row.author,\r\n            interaction: row.interaction,\r\n          } as RawCardRow;\r\n        });\r\n        const cards = getState().availableCards;\r\n        for (const [index, row] of rawCardRowsArray.entries()) {\r\n          if (\r\n            !getState()\r\n              .availableCards.map((c) => c.src)\r\n              .includes(row.src)\r\n          ) {\r\n            cards.push(new CardData(row, index));\r\n          }\r\n        }\r\n        actions.setAvailableCards(cards);\r\n      });\r\n    }\r\n  ),\r\n  onSetActiveLayout: thunkOn(\r\n    (actions, storeActions) => storeActions.layoutsModel.setActiveLayout,\r\n    async (actions, layout, { getState }) => {\r\n      const activeSourceIds = new Set(layout.payload.sources());\r\n\r\n      const { availableWidgets } = getState();\r\n      actions.setActiveWidgets(\r\n        availableWidgets.filter((w) => layout.payload.widgets().includes(w.id))\r\n      );\r\n\r\n      const availableCardsUpdated = getState().availableCards.map((card) => {\r\n        if (activeSourceIds.has(card.id)) {\r\n          card.setActive(true);\r\n        } else {\r\n          card.setActive(false);\r\n        }\r\n        return card;\r\n      });\r\n      const activeCards = getState().availableCards.filter((card) => {\r\n        return activeSourceIds.has(card.id);\r\n      });\r\n      actions.setAvailableCards(availableCardsUpdated);\r\n      actions.setActiveCards(activeCards);\r\n    }\r\n  ),\r\n\r\n  onSwapCardContent: thunkOn(\r\n    (actions, storeActions) => storeActions.layoutsModel.swapCardContent,\r\n    async (actions, payload, { getState }) => {\r\n      const newCards = getState().activeCards.map((c) => {\r\n        return c.id === payload.payload.targetId\r\n          ? getState().availableCards.find(\r\n              (c) => c.id === payload.payload.sourceId\r\n            )\r\n          : c;\r\n      });\r\n      if (newCards) {\r\n        actions.setActiveCards(newCards as CardData[]);\r\n      }\r\n    }\r\n  ),\r\n};\r\n\r\nexport default appModel;\r\n","import type { Action} from \"easy-peasy\";\nimport { action, Thunk,thunk } from \"easy-peasy\";\n\nimport appConfig from \"../static/appConfig\";\nimport { StoreModel } from \"./index\";\n\nexport interface AppSettingsModel {\n  //state\n  rotationSpeed: number;\n  enableQrCodes: boolean;\n  enableIframeInteractions: boolean;\n  rotateLayouts: boolean;\n  enableIframeAudio: boolean;\n\n  //setter\n\n  setRotationSpeed: Action<AppSettingsModel, number>;\n  setRotateLayouts: Action<AppSettingsModel, boolean>;\n  setShowQrCodes: Action<AppSettingsModel, boolean>;\n  setEnableIframeInteractions: Action<AppSettingsModel, boolean>;\n  setEnableIframeAudio: Action<AppSettingsModel, boolean>;\n}\n\nconst appSettingsModel: AppSettingsModel = {\n  //state\n  rotationSpeed: appConfig.rotationDuration,\n  enableQrCodes: true,\n  enableIframeInteractions: false,\n  rotateLayouts: true,\n  enableIframeAudio: false,\n  //setters\n  setRotationSpeed: action((state, speed) => {\n    state.rotationSpeed = speed;\n  }),\n  setShowQrCodes: action((state, enableQrCodes) => {\n    state.enableQrCodes = enableQrCodes;\n  }),\n  setEnableIframeInteractions: action((state, enableIframeInteractions) => {\n    state.enableIframeInteractions = enableIframeInteractions;\n  }),\n  setRotateLayouts: action((state, rotateLayouts) => {\n    state.rotateLayouts = rotateLayouts;\n  }),\n  setEnableIframeAudio: action((state, enableIframeAudio) => {\n    state.enableIframeAudio = enableIframeAudio;\n  }),\n};\n\nexport default appSettingsModel;\n","import type { SheetNames } from \"../enums\";\r\n\r\nexport default class GoogleSheetData {\r\n  title!: string;\r\n  sheetId!: string;\r\n  sheets!: Map<SheetNames, unknown[]>;\r\n  constructor(\r\n    title: string,\r\n    sheetId: string,\r\n  ) {\r\n    this.title = title;\r\n    this.sheetId = sheetId;\r\n    this.sheets = new Map();\r\n  }\r\n  getSheetRows<P>(title: SheetNames): Promise<P[]>{\r\n    // const typedArr = this.rows.map(r=>r as P)\r\n    return new Promise<P[]>((resolve, reject)=>{\r\n      const rowArray = this.sheets.get(title);\r\n      if (rowArray){\r\n        resolve(rowArray.map(r=>r as P))\r\n      } else {\r\n        reject(`sheet with title ${title} did not exist`)\r\n      }\r\n    })\r\n  }\r\n  addSheet(title: SheetNames, rows: unknown[]){\r\n    this.sheets.set(title, rows);\r\n  }\r\n}\r\n","import type { Action, Computed, Thunk } from \"easy-peasy\";\r\nimport { action, computed, thunk } from \"easy-peasy\";\r\nimport Papa from \"papaparse\";\r\nimport { act } from \"react-dom/test-utils\";\r\n\r\nimport GoogleSheetData from \"../data_structs/GoogleSheetData\";\r\nimport type { SheetNames } from \"../enums\";\r\nimport type AppError from \"../interfaces/AppError\";\r\nimport type PrincipleSheetRow from \"../interfaces/PrincipleSheetRow\";\r\nimport type RawCardRow from \"../interfaces/RawCardRow\";\r\nimport type RawLayoutRow from \"../interfaces/RawLayoutRow\";\r\n\r\n/**\r\n * Responsible for making requests to google sheets. Other models must listen this model to intercept the sheet payload.\r\n  console.log(query.get(\"url\"));\r\n * Also stores the fetch data purely for debugging purposes.\r\n */\r\n\r\nexport interface GoogleSheetsModel {\r\n  //state\r\n  //contains links to the card layout sheet and layout data sheet\r\n  parentGoogleSheet: GoogleSheetData | undefined;\r\n  //google sheet for the card data\r\n  cardDataGoogleSheet: RawCardRow[] | null;\r\n  //google sheet for the layout data\r\n  layoutDataGoogleSheet: RawLayoutRow[] | null;\r\n\r\n  //google form url\r\n  formUrl: string | undefined;\r\n  parentSheetUrl: string | undefined;\r\n  layoutSheetUrl: string | undefined;\r\n  cardSheetUrl: string | undefined;\r\n  googleSheetsErrors: AppError[];\r\n  urlSheet: string | null;\r\n\r\n  //computed\r\n  //all google sheets have been loaded\r\n  sheetsAreLoaded: Computed<GoogleSheetsModel, boolean>;\r\n\r\n  //requests\r\n  fetchTopLevelSheet: Thunk<GoogleSheetsModel, string>;\r\n  fetchAppGoogleSheet: Thunk<GoogleSheetsModel>;\r\n  fetchSheet: Thunk<GoogleSheetsModel, { url: string; name: SheetNames }[]>;\r\n\r\n  //setters\r\n  setFormUrl: Action<GoogleSheetsModel, string>;\r\n  setParentSheetUrl: Action<GoogleSheetsModel, string>;\r\n  setCardSheetUrl: Action<GoogleSheetsModel, string>;\r\n  setLayoutsSheetUrl: Action<GoogleSheetsModel, string>;\r\n  setAppGoogleSheetData: Action<GoogleSheetsModel, GoogleSheetData>;\r\n  setCardDataGoogleSheet: Action<GoogleSheetsModel, RawCardRow[]>;\r\n  setLayoutDataGoogleSheet: Action<GoogleSheetsModel, RawLayoutRow[]>;\r\n  setUrlSheet: Action<GoogleSheetsModel, string | null>;\r\n\r\n  //utils\r\n  //reload both the card and layout sheet so updates from the sheets are shown in the editor UI\r\n  refreshSheets: Thunk<GoogleSheetsModel>;\r\n\r\n  //errors\r\n  addGoogleSheetError: Action<GoogleSheetsModel, AppError>;\r\n}\r\n\r\ninterface LoadSheetResult {\r\n  rows: unknown[];\r\n  sheetTitle: SheetNames;\r\n}\r\n\r\nconst googleSheetsModel: GoogleSheetsModel = {\r\n  //sheets\r\n  layoutDataGoogleSheet: null,\r\n  cardDataGoogleSheet: null,\r\n  parentGoogleSheet: undefined,\r\n  urlSheet: null,\r\n  //sheet urls\r\n  parentSheetUrl: undefined,\r\n  formUrl: undefined,\r\n  layoutSheetUrl: undefined,\r\n  cardSheetUrl: undefined,\r\n  //other state\r\n  googleSheetsErrors: [],\r\n  sheetsAreLoaded: computed(\r\n    [\r\n      (state) => [\r\n        state.layoutDataGoogleSheet,\r\n        state.cardDataGoogleSheet,\r\n        state.parentGoogleSheet,\r\n      ],\r\n    ],\r\n    (sheets) => {\r\n      return sheets.every((s) => s !== null);\r\n    }\r\n  ),\r\n  fetchTopLevelSheet: thunk((actions, parentSheetUrl) => {\r\n    try {\r\n      getSheetData(\"TOP_LEVEL\", parentSheetUrl)\r\n        .then((r) => {\r\n          const sheetRow = r.rows[0] as PrincipleSheetRow;\r\n          actions.setFormUrl(sheetRow.googleForm);\r\n          actions.setLayoutsSheetUrl(sheetRow.layoutsSheet);\r\n          actions.setCardSheetUrl(sheetRow.cardsSheet);\r\n          actions.setParentSheetUrl(parentSheetUrl);\r\n          actions.fetchSheet([\r\n            {\r\n              name: \"LAYOUTS\",\r\n              url: googleSheetUrlToCSVUrl(sheetRow.layoutsSheet),\r\n            },\r\n            {\r\n              name: \"CARDS\",\r\n              url: googleSheetUrlToCSVUrl(sheetRow.cardsSheet),\r\n            },\r\n          ]);\r\n        })\r\n        .catch((error: unknown) => {\r\n          actions.setLayoutsSheetUrl(\r\n            googleSheetUrlToCSVUrl(\r\n              `${process.env.PUBLIC_URL}/LAYOUTS_BACKUP.csv`\r\n            )\r\n          );\r\n          actions.setCardSheetUrl(\r\n            googleSheetUrlToCSVUrl(`${process.env.PUBLIC_URL}/CARDS_BACKUP.csv`)\r\n          );\r\n          actions.fetchSheet([\r\n            {\r\n              name: \"LAYOUTS\",\r\n              url: `${process.env.PUBLIC_URL}/LAYOUTS_BACKUP.csv`,\r\n            },\r\n            {\r\n              name: \"CARDS\",\r\n              url: `${process.env.PUBLIC_URL}/CARDS_BACKUP.csv`,\r\n            },\r\n          ]);\r\n        });\r\n    } catch {\r\n      console.log(\"DOING BACKUP\");\r\n      actions.addGoogleSheetError({\r\n        errorType: \"failed to fetch master google sheet\",\r\n        description:\r\n          \"failed to get the mater google sheet, reverting to local svg\",\r\n        source: process.env.REACT_APP_SHEET_URL ?? \"NA\",\r\n        link: process.env.REACT_APP_SHEET_URL ?? \"NA\",\r\n      });\r\n    }\r\n  }),\r\n  fetchSheet: thunk(async (actions, sheets, { getState }) => {\r\n    const sheetResponses = sheets.map((s) => getSheetData(s.name, s.url));\r\n    const { cardSheetUrl } = getState();\r\n    console.log(sheetResponses);\r\n\r\n    if (cardSheetUrl) {\r\n      Promise.allSettled(sheetResponses).then((results) => {\r\n        const sheetData = new GoogleSheetData(\"DSC App\", cardSheetUrl);\r\n        const goodValues: PromiseFulfilledResult<LoadSheetResult>[] = [];\r\n\r\n        for (const [number, result] of results.entries()) {\r\n          if (result.status == \"fulfilled\") {\r\n            goodValues.push(result);\r\n            sheetData.addSheet(result.value.sheetTitle, result.value.rows);\r\n          }\r\n          if (result.status == \"rejected\") {\r\n          }\r\n        }\r\n        actions.setAppGoogleSheetData(sheetData);\r\n        sheetData.getSheetRows(\"CARDS\").then((r) => {\r\n          actions.setCardDataGoogleSheet(r as RawCardRow[]);\r\n        });\r\n        sheetData.getSheetRows(\"LAYOUTS\").then((r) => {\r\n          actions.setLayoutDataGoogleSheet(r as RawLayoutRow[]);\r\n        });\r\n      });\r\n    } else {\r\n      actions.addGoogleSheetError({\r\n        errorType: \"no url for cards provided\",\r\n        description: \"\",\r\n        source: \"\",\r\n        link: \"\",\r\n      });\r\n    }\r\n  }),\r\n\r\n  fetchAppGoogleSheet: thunk(async (actions, _, { getState }) => {\r\n    const getCardDataResponse = getSheetData(\r\n      \"CARDS\",\r\n      getState().cardSheetUrl as string\r\n    );\r\n    const getLayoutDataResponse = getSheetData(\r\n      \"LAYOUTS\",\r\n      getState().layoutSheetUrl as string\r\n    );\r\n\r\n    Promise.allSettled([getCardDataResponse, getLayoutDataResponse]).then(\r\n      (results) => {\r\n        const { cardSheetUrl } = getState();\r\n        if (cardSheetUrl) {\r\n          const sheetData = new GoogleSheetData(\"DSC App\", cardSheetUrl);\r\n          const goodValues: PromiseFulfilledResult<LoadSheetResult>[] = [];\r\n\r\n          for (const [number, result] of results.entries()) {\r\n            if (result.status == \"fulfilled\") {\r\n              goodValues.push(result);\r\n              sheetData.addSheet(result.value.sheetTitle, result.value.rows);\r\n            }\r\n            if (result.status == \"rejected\") {\r\n              actions.addGoogleSheetError({\r\n                errorType: \"failed to fetch layout or card sheet\",\r\n                description: \"could not retrieve google sheet\",\r\n                source: \"LAYOUTS/CARD\",\r\n                link: \"NA\",\r\n              });\r\n            }\r\n          }\r\n          actions.setAppGoogleSheetData(sheetData);\r\n          sheetData.getSheetRows(\"CARDS\").then((r) => {\r\n            actions.setCardDataGoogleSheet(r as RawCardRow[]);\r\n          });\r\n          sheetData.getSheetRows(\"LAYOUTS\").then((r) => {\r\n            actions.setLayoutDataGoogleSheet(r as RawLayoutRow[]);\r\n          });\r\n        }\r\n      }\r\n    );\r\n  }),\r\n  refreshSheets: thunk(async (actions, _, { getState }) => {\r\n    const { parentSheetUrl } = getState();\r\n    if (parentSheetUrl) {\r\n      actions.fetchTopLevelSheet(parentSheetUrl);\r\n    }\r\n  }),\r\n  setAppGoogleSheetData: action((state, googleSheet) => {\r\n    state.parentGoogleSheet = googleSheet;\r\n  }),\r\n  setCardDataGoogleSheet: action((state, sheet) => {\r\n    state.cardDataGoogleSheet = sheet;\r\n  }),\r\n  setLayoutDataGoogleSheet: action((state, sheet) => {\r\n    state.layoutDataGoogleSheet = sheet;\r\n  }),\r\n  setParentSheetUrl: action((state, parentSheetUrl) => {\r\n    state.parentSheetUrl = parentSheetUrl;\r\n  }),\r\n  setFormUrl: action((state, formUrl) => {\r\n    state.formUrl = formUrl;\r\n  }),\r\n  setCardSheetUrl: action((state, cardSheetUrl) => {\r\n    state.cardSheetUrl = cardSheetUrl;\r\n  }),\r\n  setLayoutsSheetUrl: action((state, layoutSheetUrl) => {\r\n    state.layoutSheetUrl = layoutSheetUrl;\r\n  }),\r\n  setUrlSheet: action((state, urlSheet) => {\r\n    state.urlSheet = urlSheet;\r\n  }),\r\n  addGoogleSheetError: action((state, googleSheetError) => {\r\n    const errorsString = state.googleSheetsErrors.map(\r\n      (error) => JSON.stringify(error) as string\r\n    );\r\n    const newError = JSON.stringify(googleSheetError);\r\n    if (!errorsString.includes(newError)) {\r\n      state.googleSheetsErrors.push(googleSheetError);\r\n    }\r\n  }),\r\n};\r\n\r\nexport default googleSheetsModel;\r\n\r\n/**Converts the key for a google sheet into a url which can be used to fetch as .csv blob */\r\nfunction googleSheetUrlToCSVUrl(url: string): string {\r\n  const sections = url.split(\"/\");\r\n  const sheetKey = sections[5];\r\n  const sectionsGid = url.split(\"gid=\");\r\n  const gid = sectionsGid[1];\r\n  return `https://docs.google.com/spreadsheets/d/${sheetKey}/export?format=csv&gid=${gid}`;\r\n}\r\n\r\nfunction getSheetData(\r\n  sheetTitle: SheetNames,\r\n  sheetUrl: string\r\n): Promise<LoadSheetResult> {\r\n  let data;\r\n  return new Promise<LoadSheetResult>((resolve, reject) => {\r\n    try {\r\n      Papa.parse(sheetUrl, {\r\n        download: true,\r\n        header: true,\r\n        delimiter: \",\",\r\n        dynamicTyping: true,\r\n        complete: (results) => {\r\n          data = results.data;\r\n          console.log(data);\r\n          resolve({ rows: data, sheetTitle: sheetTitle });\r\n        },\r\n      });\r\n    } catch {\r\n      reject(\"failed to get sheet\");\r\n    }\r\n  });\r\n}\r\n","import type { ExtendedLayout, GridSettings, LayoutSettings } from \"../data_structs/LayoutData\"\n\nconst layout = { \"lg\": [{ \"w\": 2, \"h\": 1, \"x\": 0, \"y\": 0, \"i\": \"clock\", \"moved\": false, \"static\": true }, { \"w\": 2, \"h\": 2, \"x\": 2, \"y\": 0, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/DuBois_Racism.png\", \"moved\": false, \"static\": false }, { \"w\": 1, \"h\": 2, \"x\": 0, \"y\": 1, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/VideoGames.jpeg\", \"moved\": false, \"static\": false }], \"md\": [{ \"w\": 2, \"h\": 1, \"x\": 0, \"y\": 0, \"i\": \"clock\", \"moved\": false, \"static\": true }, { \"w\": 2, \"h\": 2, \"x\": 2, \"y\": 0, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/DuBois_Racism.png\", \"moved\": false, \"static\": false }, { \"w\": 1, \"h\": 2, \"x\": 0, \"y\": 1, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/VideoGames.jpeg\", \"moved\": false, \"static\": false }], \"sm\": [{ \"w\": 2, \"h\": 1, \"x\": 0, \"y\": 0, \"i\": \"clock\", \"moved\": false, \"static\": true }, { \"w\": 2, \"h\": 2, \"x\": 2, \"y\": 0, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/DuBois_Racism.png\", \"moved\": false, \"static\": false }, { \"w\": 1, \"h\": 2, \"x\": 0, \"y\": 1, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/VideoGames.jpeg\", \"moved\": false, \"static\": false }], \"xs\": [{ \"w\": 2, \"h\": 1, \"x\": 0, \"y\": 0, \"i\": \"clock\", \"moved\": false, \"static\": true }, { \"w\": 2, \"h\": 2, \"x\": 2, \"y\": 0, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/DuBois_Racism.png\", \"moved\": false, \"static\": false }, { \"w\": 1, \"h\": 2, \"x\": 0, \"y\": 1, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/VideoGames.jpeg\", \"moved\": false, \"static\": false }], \"xxs\": [{ \"w\": 2, \"h\": 1, \"x\": 0, \"y\": 0, \"i\": \"clock\", \"moved\": false, \"static\": true }, { \"w\": 2, \"h\": 2, \"x\": 2, \"y\": 0, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/DuBois_Racism.png\", \"moved\": false, \"static\": false }, { \"w\": 1, \"h\": 2, \"x\": 0, \"y\": 1, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/VideoGames.jpeg\", \"moved\": false, \"static\": false }] }\n\nconst gridSettings: GridSettings = {\n    defaultBackgroundColor: \"red\"\n}\nconst layoutSettings: LayoutSettings  = {\n    gridSettings: gridSettings,\n    cardSettings: [],\n}\n\nconst extendedLayoutTest: ExtendedLayout = {\n    layout: layout,\n    layoutSettings: layoutSettings,\n    widgets: [],\n}\n\nexport default extendedLayoutTest","import type { Layout, Layouts } from \"react-grid-layout\";\n\nimport type { CardSwapEvent } from \"../interfaces/CardEvents\";\nimport type { CardSettings } from \"../interfaces/CardSettings\";\nimport type { GridPosition } from \"../interfaces/GridPosition\";\nimport type RawLayoutRow from \"../interfaces/RawLayoutRow\";\nimport extendedLayoutTest from \"../static/extendedLayoutTest\";\nimport widgets from \"../static/widgets\";\nimport type CardData from \"./CardData\";\nimport type WidgetData from \"./WidgetData\";\n\nexport interface GridSettings {\n  defaultBackgroundColor: string;\n}\nexport interface LayoutSettings {\n  cardSettings: CardSettings[];\n  gridSettings: GridSettings;\n}\n\nexport interface ExtendedLayout {\n  layout: Layouts;\n  layoutSettings: LayoutSettings;\n  widgets: WidgetData[];\n}\n\n//in case the layout doe not provide any card settings\nconst defaultCardSettings = {\n  scale: 1,\n  backgroundColor: undefined,\n  objectPosition: \"center\",\n};\n\nconst defaultGridSettings = {\n  defaultBackgroundColor: \"red\",\n};\n\nexport default class LayoutData {\n  readonly title: string;\n  readonly author: string;\n  readonly added: Date;\n  readonly id: string;\n  readonly sourceLayout: ExtendedLayout;\n  readonly layoutSettings: LayoutSettings;\n  layout: Layouts;\n  layoutWidgets: WidgetData[];\n\n  constructor(row: RawLayoutRow) {\n    const { layout } = testGetLayout(row);\n    this.id = row.title + \"_\" + row.timestamp;\n    this.title = row.title;\n    this.author = row.author;\n    this.added = new Date(row.timestamp.split(\" \")[0]);\n    this.sourceLayout = JSON.parse(row.layout).layout;\n\n    this.layoutSettings = JSON.parse(row.layout).layoutSettings\n      ? JSON.parse(row.layout).layoutSettings\n      : {\n          cardSettings: layout.lg.map((l) => {\n            return {\n              id: l.i,\n              ...defaultCardSettings,\n            };\n          }),\n          gridSettings: defaultGridSettings,\n        };\n    this.layoutWidgets = JSON.parse(row.layout).layoutWidgets\n      ? JSON.parse(row.layout).layoutWidgets\n      : [];\n    this.layout = layout;\n  }\n\n  swapCard(swapInfo: CardSwapEvent): void {\n    for (const [k, v] of Object.entries(this.layout)) {\n      for (const [index, layoutValue] of v.entries()) {\n        if (layoutValue.i == swapInfo.targetId) {\n          v[index].i = swapInfo.sourceId;\n        }\n      }\n      this.layout[k] = v;\n    }\n  }\n\n  removeCard(toRemoveId: string): void {\n    for (const [k, v] of Object.entries(this.layout)) {\n      for (const [index, layoutValue] of v.entries()) {\n        this.layout[k] = v.filter((l) => l.i !== toRemoveId);\n      }\n    }\n  }\n\n  clearCards(): void {\n    for (const [k, v] of Object.entries(this.layout)) {\n      for (const [index, layoutValue] of v.entries()) {\n        this.layout[k] = [];\n      }\n    }\n  }\n\n  addCard(toAdd: CardData | WidgetData, pos: GridPosition): void {\n    if (!this.sources().includes(toAdd.id)) {\n      for (const [k, v] of Object.entries(this.layout)) {\n        const newItem: Layout = {\n          x: pos.x,\n          y: pos.y,\n          w: 1,\n          h: 1,\n          i: toAdd.id,\n        };\n        this.layout[k].push(newItem);\n      }\n      if (\n        !this.layoutSettings.cardSettings.map((cs) => cs.id).includes(toAdd.id)\n      ) {\n        this.layoutSettings.cardSettings.push({\n          id: toAdd.id,\n          scale: 1,\n          backgroundColor: undefined,\n          objectPosition: \"center\",\n        });\n      }\n    }\n  }\n  addWidget(toAdd: WidgetData, pos: GridPosition): void {\n    this.layoutWidgets.push(toAdd);\n    for (const [k, v] of Object.entries(this.layout)) {\n      const newItem: Layout = {\n        x: pos.x,\n        y: pos.y,\n        w: 1,\n        h: 1,\n        i: toAdd.id,\n      };\n      this.layout[k].push(newItem);\n    }\n  }\n  resetLayout(): void {\n    this.layout = JSON.parse(JSON.stringify(this.sourceLayout));\n  }\n  setGridLayout(newGridLayout: Layouts): void {\n    for (const [k, v] of Object.entries(this.layout)) {\n      for (const [index, layoutValue] of v.entries()) {\n        this.layout[k] = newGridLayout[k];\n      }\n    }\n  }\n  sources(): string[] {\n    const lg = this.layout.lg;\n    return lg.map((l: Layout) => l.i);\n  }\n  widgets(): string[] {\n    const lg = this.layout.lg;\n    const justWidgets = lg.filter((l: any) =>\n      Object.keys(widgets).includes(l.i)\n    );\n    return justWidgets.map((l: any) => l.i);\n  }\n  getCardSettings(cardId: string): CardSettings {\n    return this.layoutSettings.cardSettings.filter((c) => c.id === cardId)[0];\n  }\n  setCardScale(id: string, scale: number): void {\n    if (this.sources().includes(id)) {\n      this.layoutSettings.cardSettings.filter((cs) => cs.id === id)[0].scale =\n        scale;\n    }\n  }\n  setCardBackgroundColor(id: string, backgroundColor: string): void {\n    if (this.sources().includes(id)) {\n      this.layoutSettings.cardSettings.filter(\n        (cs) => cs.id === id\n      )[0].backgroundColor = backgroundColor;\n    }\n  }\n  setCardContentFit(id: string, contentFit: string): void {\n    if (this.sources().includes(id)) {\n      this.layoutSettings.cardSettings.filter(\n        (cs) => cs.id === id\n      )[0].contentFit = contentFit;\n    }\n  }\n  layoutToString(): string {\n    const object = {\n      layout: this.layout.lg,\n      layoutSettings: this.layoutSettings,\n    };\n    return JSON.stringify(object);\n  }\n}\nfunction testGetLayout(row: RawLayoutRow): ExtendedLayout {\n  const test = JSON.parse(row.layout);\n  return test.layout ? test : extendedLayoutTest;\n}\n","import type { AppDataModel } from \"./appModel\";\nimport appModel from \"./appModel\";\nimport type { AppSettingsModel } from \"./appSettingsModel\";\nimport appSettingsModel from \"./appSettingsModel\";\nimport type { GoogleSheetsModel } from \"./googleSheetsModel\";\nimport googleSheetsModel from \"./googleSheetsModel\";\nimport type { LayoutsModel } from \"./layoutsModel\";\nimport layoutsModel from \"./layoutsModel\";\r\n// https://codesandbox.io/s/easy-peasy-typescript-v3-riqbl?file=/src/model/todos.ts\r\n\r\nexport interface StoreModel {\r\n  appModel: AppDataModel;\r\n  layoutsModel: LayoutsModel;\r\n  googleSheetsModel: GoogleSheetsModel;\r\n  appSettingsModel: AppSettingsModel;\r\n}\r\n\r\nconst model: StoreModel = {\r\n  appModel,\r\n  appSettingsModel,\r\n  layoutsModel,\r\n  googleSheetsModel,\r\n};\r\n\r\nexport default model;\r\n","import type { Action, Computed, Thunk, ThunkOn } from \"easy-peasy\";\r\nimport { action, computed, thunk, thunkOn } from \"easy-peasy\";\r\nimport type { Layouts } from \"react-grid-layout\";\r\n\r\nimport LayoutData from \"../data_structs/LayoutData\";\r\nimport type AppError from \"../interfaces/AppError\";\r\nimport type { CardAddEvent, CardSwapEvent } from \"../interfaces/CardEvents\";\r\nimport type { CardSettings } from \"../interfaces/CardSettings\";\r\nimport type RawLayoutRow from \"../interfaces/RawLayoutRow\";\r\nimport appConfig from \"../static/appConfig\";\r\nimport backupData from \"../static/backupLayout.json\";\r\nimport type { StoreModel } from \"./index\";\r\n\r\nexport interface LayoutsModel {\r\n  //state\r\n  activeLayout: LayoutData | undefined;\r\n  externalLayouts: LayoutData[];\r\n  bufferLayout: Layouts;\r\n  layoutErrors: AppError[];\r\n  cardScale: number | undefined;\r\n  cardBackgroundColor: string | undefined;\r\n  cardContentFit: string | undefined;\r\n\r\n  //listeners\r\n  onSetAppGoogleSheetData: ThunkOn<LayoutsModel, never, StoreModel>;\r\n  onToggleViewMode: ThunkOn<LayoutsModel, never, StoreModel>;\r\n\r\n  //simple setters\r\n  setActiveLayout: Action<LayoutsModel, LayoutData>;\r\n  setExternalLayouts: Action<LayoutsModel, LayoutData[]>;\r\n  setBufferLayout: Action<LayoutsModel, Layouts>;\r\n  updateLayout: Action<LayoutsModel, CardSwapEvent>;\r\n  setCardSettings: Action<LayoutsModel, CardSettings>;\r\n  setCardScale: Action<LayoutsModel, { cardId: string; scale: number }>;\r\n  setCardBackgroundColor: Action<\r\n    LayoutsModel,\r\n    { cardId: string; color: string }\r\n  >;\r\n  setCardContentFit: Action<\r\n    LayoutsModel,\r\n    { cardId: string; contentFit: string }\r\n  >;\r\n\r\n  layoutsString: Computed<LayoutsModel, string>;\r\n\r\n  //update\r\n  setNextLayout: Thunk<LayoutsModel, never, StoreModel>;\r\n  swapCardContent: Thunk<LayoutsModel, CardSwapEvent, StoreModel>;\r\n  deleteCard: Thunk<LayoutsModel, string, StoreModel>;\r\n  clearCards: Thunk<LayoutsModel, never, StoreModel>;\r\n  addCard: Thunk<LayoutsModel, CardAddEvent, never, StoreModel>;\r\n  resetLayout: Thunk<LayoutsModel, never, StoreModel>;\r\n  addLayoutError: Action<LayoutsModel, AppError>;\r\n\r\n  animationCounter: number;\r\n  transitionLayout: Thunk<LayoutsModel, number>;\r\n  setAnimationCounter: Action<LayoutsModel, number>;\r\n}\r\n\r\nconst layoutsModel: LayoutsModel = {\r\n  //state\r\n  activeLayout: undefined,\r\n  externalLayouts: [],\r\n  layoutErrors: [],\r\n  cardScale: undefined,\r\n  cardBackgroundColor: undefined,\r\n  cardContentFit: undefined,\r\n  bufferLayout: backupData as unknown as Layouts,\r\n  layoutsString: computed([(state) => state.bufferLayout], (bufferLayout) => {\r\n    return JSON.stringify(bufferLayout);\r\n  }),\r\n\r\n  //listeners\r\n  /**On setAppGoogleSheetData, create an array of LayoutData objects from the provided rows */\r\n  onSetAppGoogleSheetData: thunkOn(\r\n    (actions, storeActions) =>\r\n      storeActions.googleSheetsModel.setAppGoogleSheetData,\r\n    (actions, target, { getState }) => {\r\n      target.payload\r\n        .getSheetRows<RawLayoutRow>(\"LAYOUTS\")\r\n        .then((rawLayoutRows) => {\r\n          const { externalLayouts } = getState();\r\n          const currentLayoutIds = new Set(\r\n            externalLayouts.map((layout) => layout.id)\r\n          );\r\n          console.log(rawLayoutRows);\r\n          for (const row of rawLayoutRows) {\r\n            try {\r\n              const l = new LayoutData(row);\r\n              console.log(l);\r\n              if (!currentLayoutIds.has(l.id)) {\r\n                externalLayouts.push(l);\r\n              }\r\n            } catch {\r\n              console.log(\"FAILED TO MAKE LAYOUT DATA\");\r\n              actions.addLayoutError({\r\n                errorType: \"failed to read layout row\",\r\n                description: `failed to read layout row ${\r\n                  row.title ?? \"NO TITLE PROVIDED\"\r\n                }`,\r\n                source: row.title ?? \"NO TITLE PROVIDED\",\r\n                link: \"none\",\r\n              });\r\n            }\r\n          }\r\n          if (appConfig.useStaticLayout) {\r\n            // actions.setActiveLayout(defaultLayout);\r\n            // actions.setBufferLayout(defaultLayout.layout);\r\n          } else {\r\n            // const defaultLayout = externalLayouts.filter(\r\n            //   (layout) => layout.title === appConfig.defaultLayoutName\r\n            // )[0];\r\n            const defaultLayout = externalLayouts[0];\r\n            if (defaultLayout) {\r\n              actions.setActiveLayout(defaultLayout);\r\n              actions.setBufferLayout(defaultLayout.layout);\r\n            }\r\n          }\r\n          actions.setExternalLayouts(externalLayouts);\r\n        });\r\n    }\r\n  ),\r\n  addLayoutError: action((state, error) => {\r\n    const errorsString = state.layoutErrors.map(\r\n      (error) => JSON.stringify(error) as string\r\n    );\r\n    const newError = JSON.stringify(error);\r\n    if (!errorsString.includes(newError)) {\r\n      state.layoutErrors.push(error);\r\n    }\r\n  }),\r\n  onToggleViewMode: thunkOn(\r\n    // targetResolver:toggleAppMode\r\n    (actions, storeActions) => storeActions.appModel.manageViewModeChange,\r\n    // handler:\r\n    (actions, target, { getState, getStoreState }) => {\r\n      const { activeLayout, bufferLayout } = getState();\r\n      if (activeLayout) {\r\n        const buf = getState().bufferLayout;\r\n        activeLayout.layout = buf;\r\n        activeLayout.setGridLayout(buf);\r\n        actions.setActiveLayout(activeLayout);\r\n      }\r\n    }\r\n  ),\r\n  //simple setters\r\n  setActiveLayout: action((state, newActiveLayout) => {\r\n    state.activeLayout = newActiveLayout;\r\n    state.bufferLayout = JSON.parse(JSON.stringify(newActiveLayout.layout));\r\n  }),\r\n  setNextLayout: thunk((actions, _, { getState }) => {\r\n    const { externalLayouts, activeLayout } = getState();\r\n    if (activeLayout) {\r\n      const currentIndex = externalLayouts\r\n        .map((l) => l.id)\r\n        .indexOf(activeLayout?.id);\r\n      const nextIndex = (currentIndex + 1) % externalLayouts.length;\r\n      const selectedRandom = externalLayouts[nextIndex];\r\n      actions.setActiveLayout(selectedRandom);\r\n    }\r\n  }),\r\n  setExternalLayouts: action((state, newLayoutArray) => {\r\n    state.externalLayouts = newLayoutArray;\r\n  }),\r\n  //mutators\r\n  swapCardContent: thunk((actions, swapInfo, { getState }) => {\r\n    const { activeLayout } = getState();\r\n    if (activeLayout) {\r\n      const buf = getState().bufferLayout;\r\n      activeLayout.layout = buf;\r\n      activeLayout.swapCard(swapInfo);\r\n      actions.setActiveLayout(activeLayout);\r\n    }\r\n  }),\r\n  deleteCard: thunk((actions, cardToDelete, { getState }) => {\r\n    const { activeLayout } = getState();\r\n    if (activeLayout) {\r\n      const buf = getState().bufferLayout;\r\n      activeLayout.layout = buf;\r\n      activeLayout.removeCard(cardToDelete);\r\n      actions.setActiveLayout(activeLayout);\r\n    }\r\n  }),\r\n  clearCards: thunk((actions, _, { getState }) => {\r\n    const { activeLayout } = getState();\r\n    if (activeLayout) {\r\n      activeLayout.clearCards();\r\n      actions.setBufferLayout(activeLayout.layout);\r\n      actions.setActiveLayout(activeLayout);\r\n    }\r\n  }),\r\n  addCard: thunk((actions, cardAddEvent, { getState, getStoreState }) => {\r\n    const { availableCards, availableWidgets } = getStoreState().appModel;\r\n    const { sourceId, targetPosition } = cardAddEvent;\r\n    const cardToAdd = [...availableCards, ...availableWidgets].find(\r\n      (c) => c.id == sourceId\r\n    );\r\n    const { activeLayout } = getState();\r\n    if (activeLayout && cardToAdd) {\r\n      const buf = getState().bufferLayout;\r\n      activeLayout.setGridLayout(buf);\r\n      activeLayout?.addCard(cardToAdd, targetPosition);\r\n      actions.setActiveLayout(activeLayout);\r\n    }\r\n  }),\r\n  resetLayout: thunk((actions, _, { getState }) => {\r\n    const { activeLayout } = getState();\r\n    if (activeLayout) {\r\n      const buf = getState().activeLayout;\r\n      buf?.resetLayout();\r\n      if (buf) {\r\n        actions.setActiveLayout(buf);\r\n      }\r\n    }\r\n  }),\r\n  setBufferLayout: action((state, layouts) => {\r\n    state.bufferLayout = JSON.parse(JSON.stringify(layouts));\r\n  }),\r\n  setCardSettings: action((state, settings) => {\r\n    console.log(settings);\r\n    const currentSettings =\r\n      state.activeLayout?.sourceLayout.layoutSettings.cardSettings;\r\n    console.log(currentSettings);\r\n  }),\r\n  setCardScale: action((state, { cardId, scale }) => {\r\n    console.log(scale);\r\n    const currentSettings = state.activeLayout?.layoutSettings.cardSettings;\r\n    state.activeLayout?.setCardScale(cardId, scale);\r\n    state.cardScale = scale;\r\n    // state.activeLayout.console.log(currentSettings);\r\n  }),\r\n  setCardBackgroundColor: action((state, { cardId, color }) => {\r\n    console.log(color);\r\n    state.activeLayout?.setCardBackgroundColor(cardId, color);\r\n    state.cardBackgroundColor = color;\r\n    // state.activeLayout.console.log(currentSettings);\r\n  }),\r\n  setCardContentFit: action((state, { cardId, contentFit }) => {\r\n    console.log(contentFit);\r\n    state.activeLayout?.setCardContentFit(cardId, contentFit);\r\n    state.cardContentFit = contentFit;\r\n    // state.activeLayout.console.log(currentSettings);\r\n  }),\r\n  updateLayout: action((state, swap) => {\r\n    const old = state.activeLayout;\r\n    if (old) {\r\n      old.swapCard(swap);\r\n      state.activeLayout = old;\r\n    }\r\n  }),\r\n  animationCounter: 0,\r\n  setAnimationCounter: action((state, value) => {\r\n    state.animationCounter += 1;\r\n  }),\r\n\r\n  transitionLayout: thunk((actions, value, { getState }) => {\r\n    actions.setAnimationCounter(getState().animationCounter + 1);\r\n    setTimeout(() => {\r\n      actions.setNextLayout();\r\n    }, 1000);\r\n  }),\r\n};\r\n\r\nexport default layoutsModel;\r\n","import { action,createStore } from \"easy-peasy\";\n\nimport model from \"./model\";\n\nconst store = createStore(model, { name: \"Cuboard App Store\" });\n\nexport default store;\n","import { StoreProvider } from \"easy-peasy\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <StoreProvider store={store}>\n    <App />\n  </StoreProvider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}