{"version":3,"sources":["enums.ts","hooks.ts","components/Background/TestShader1.js","utils.ts","components/Background/BackgroundShader.js","components/Background.tsx","static/appConfig.ts","components/IFrameView.tsx","components/Shared/Pulsar.tsx","components/DragAndDrop/IXDrop.tsx","components/Widgets/Clock.tsx","components/Shared/Button.tsx","components/CardLayout/ViewCard/CardInfo.tsx","components/CardLayout/ViewCard/DeleteButton.tsx","components/CardLayout/ViewCard/SettingsButton.tsx","components/CardLayout/ViewCard/SettingsMenu.tsx","components/CardLayout/ViewCard/ViewCard.tsx","components/CardLayout/GuideGrid.tsx","components/CardLayout/CardLayout.tsx","components/DragAndDrop/AppDragContext.tsx","components/Shared/FlexRow.tsx","components/DragAndDrop/DraggableRow.tsx","IFrameValidator.ts","components/EditorPanel/TableHeader.tsx","components/EditorPanel/EditorTabs/ContentsTab/ContentsTab.tsx","components/Shared/Panel.tsx","components/Shared/Modal.tsx","components/EditorPanel/EditorTabs/LayoutTab/GoogleFormPopup.tsx","static/formEmbedUrl.ts","components/EditorPanel/EditorTabs/LayoutTab/LayoutTable.tsx","components/EditorPanel/EditorTabs/LayoutTab/LayoutTab.tsx","components/DragAndDrop/DraggableWidget.tsx","components/EditorPanel/EditorTabs/WidgetsTab/WidgetsTab.tsx","components/EditorPanel/Editor.tsx","components/EditorPanel/EditorPanel.tsx","components/HowToUse/HowToUsePopUp.tsx","components/HowToUse/HowToUse.tsx","components/ModeChangeButton.tsx","components/Shared/Screen.tsx","App.tsx","data_structs/CardData.ts","data_structs/WidgetData.ts","model/appModel.ts","static/extendedLayoutTest.ts","data_structs/LayoutData.ts","static/defaultStaticLayout.ts","model/layoutsModel.ts","static/cardDataSheetKey.ts","data_structs/GoogleSheetData.ts","model/googleSheetsModel.ts","model/index.ts","store.ts","index.tsx"],"names":["AppMode","CardView","DragType","InteractionType","DndTypes","DragSource","typedHooks","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","useApp","toggleAppMode","actions","appModel","appMode","state","useLayout","activeCards","activeWidgets","swapCard","layoutsModel","swapCardContent","addWidget","deleteCard","addCard","setBufferLayout","activeLayout","setRandomLayout","setActiveLayout","useOnClickOutside","ref","handler","useEffect","listener","event","el","current","contains","target","document","addEventListener","removeEventListener","TestShader1","uniforms","time","value","vertexShader","fragmentShader","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","randomIntFromInterval","min","max","Math","floor","random","randomNumber","randomisePosition","THREE","rgb","r","g","b","baseColors","pink","brightPink","darkPurple","orange","darkgrey","lightgrey","red","u_bg","type","u_bgMain","u_color1","u_color2","u_time","u_randomisePosition","ShadedGeometry1","position","shaderMaterialRef","useRef","t","j","x","y","vCheck","useFrame","clock","cos","R","sin","G","B","rotation","degToRad","attach","args","window","innerWidth","BackgroundShader","cam","gl","antialias","alpha","PerspectiveCamera","fov","aspect","innerHeight","near","far","faceResolution","OrbitControls","Background","viewMode","useState","backgroundColor","backgroundStyle","setBackgroundStyle","isEditMode","EDIT","height","width","top","left","transition","backgroundClass","classNames","DISPLAY","ReactDOM","createPortal","style","className","querySelector","React","memo","appConfig","idleTime","sheetLink","defaultIframeScale","defaultEmbedScale","defaultLayoutName","formLink","widgetIds","gridRows","gridCols","showModeSwitchButton","useStaticLayout","gridBottomPadding","rotationDuration","IFrameView","card","scale","cardView","onError","onLoad","active","setActive","valid","isLoaded","setIsLoaded","indexFrameContainerClass","iframeStyle","border","transform","transformOrigin","src","contentType","onDoubleClick","onReady","e","objectFit","objectPosition","PREVIEW","ResponsivePlayer","controls","muted","playing","url","PureComponent","Pulsar","AddIcon","size","IXDrop","children","properties","cardType","provided","snapshot","innerRef","isDraggingOver","placeholder","Clock","setDate","timerID","setInterval","clearInterval","padding","fontSize","fontWeight","color","boxSizing","toLocaleTimeString","hour12","timeStyle","Button","onClick","text","appearance","iconBefore","containerClass","intent","onMouseUp","cursor","undefined","CardInfo","data","title","DeleteButton","action","onTouchEnd","display","DeleteIcon","SettingsButton","CogIcon","InputRow","ScaleControls","setScale","ChevronLeftIcon","onChange","parseInt","defaultValue","toString","slice","ChevronRightIcon","SettingsMenu","isShown","setBackgroundColor","setShowMenu","menuReference","handleClickOutside","menuStyle","ViewCard","cardId","useAnimation","cardContainerReference","GRID","oldCardView","setCardView","setIsError","activeChildren","setActiveChildren","useLocalStore","cardBackgroundColor","show","showMenu","toggleMenu","cardClass","computed","FULL_SCREEN","CLOCK","cardInfoClass","handleCardPress","thunk","_","getState","console","log","getElementById","id","zIndex","s","devTools","settingsMenuProperties","cardModalBackdrop","cardChildContainer","keyCode","disabled","enable","disable","handleAction","preventDefault","useKeyboardShortcut","showDeleteButton","renderCardInfo","containerReference","cardGrandParent","parentElement","jj","useMemo","rect","getBoundingClientRect","calculateTransform2","variants","opacity","delay","duration","preview","normal","none","error","loaded","outline","in","out","animationVariant","setAnimationVariant","setTimeout","motion","div","exit","layoutId","willChange","animate","renderReturnButton","boundingBox","windowWidth","windowHeight","centeredX","centeredY","currentX","currentY","differenceX","differenceY","ReturnButton","GuideGrid","gridSettings","ResponsiveGridLayout","WidthProvider","Responsive","guideCards","rows","cols","allGridSpots","push","emptyCards","map","rr","w","h","i","minW","maxW","minH","maxH","static","isDraggable","isResizable","resizeHandles","lg","md","sm","xs","xxs","generateFilledLayout","justCardNames","c","layouts","preventCollision","p","index","key","droppableId","PLACEHOLDER","CardGrid","localLayout","activeKeyReference","sharedGridSettings","breakpoints","rowHeight","margin","compactType","layout","onDragStart","oldItem","newItem","element","onLayoutChange","l","newLayout","verticalCompact","draggable","IFRAME","contentCard","widgetData","widget","renderWidget","stringToGridPos","posString","split","Number","charAt","AppDragContext","externalLayoutsState","externalLayouts","onDragEnd","response","destination","source","draggableId","CARD_TABLE","startsWith","cardPos","sourceId","targetPosition","targetId","WIDGETS_TABLE","LAYOUT_TABLE","filter","FlexRow","flexDirection","DraggableRow","dndType","dragAll","isValidElement","dragHandleProperties","dragHandleProps","draggableProps","cloneElement","isDragging","defaultProps","IFrameLoadError","IFrameLoadWarning","TableHeader","headerTitle","setFilter","setFilterDirection","activeFilter","sortDirection","setSortDirection","showSortArrow","str","regex","toLowerCase","match","forEach","char","replace","toUpperCase","titleCapitilization","toTitleCase","TitleWithIcon","isActive","marginTop","marginBottom","textAlign","ContentsTab","availableCards","clearCardsAction","clearCards","resetLayoutAction","resetLayout","filterKey","setFilterKey","filterDirection","cardItems","setCardItems","searchTerm","setSearchTerm","filteredCards","setFilteredCards","aboveThreshholdCardTitles","fuzzysort","go","filtered","includes","sortedItems","sort","a","aText","bText","reverse","SearchInput","currentTarget","isDropDisabled","autoHeight","autoHeightMax","autoHeightMin","onScrollFrame","v","added","author","interaction","CARD_ROW","isDragDisabled","Panel","panelStyle","Modal","containerClassName","onClose","backdropOpacity","justifyContent","alignItems","MyBackdrop","GoogleFormPopup","visible","onCloseComplete","isCopiedJSON","setIsCopiedJson","layoutString","JSON","stringify","copyFieldContainerClass","ReactDom","Heading","onCopy","CopyField","isCurrentClipBoardContent","isClipBoardCorrect","setIsClipBoardCorrect","isCopied","setIsCopied","navigator","clipboard","readText","then","clipboardText","catch","ClipboardIcon","writeText","InlineAlert","paddingTop","CrossIcon","GoogleFormIframe","frameBorder","marginHeight","marginWidth","LayoutTable","activeLayoutState","setActiveLayoutAction","StatusIndicator","LayoutTab","layoutState","bufferState","bufferLayout","showNewLayoutPopup","setShowNewLayoutPopup","fetchCardDataGoogleSheetThunk","googleSheetsModel","fetchAppGoogleSheet","setLayoutString","DraggableWidget","currentLayoutState","isInLayout","WidgetsTab","WIDGET","Editor","EditorPanel","viewModeState","minimized","setMinimized","editorPanelClass","hidden","editorClass","bounds","right","bottom","defaultClassName","defaultPosition","handle","icon","PlusIcon","MinusIcon","PanelHeader","BarButton","HowToUsePopUp","borderRadius","Text","process","HowToUse","initialValue","setValue","useToggle","toggleVisible","HandUpIcon","ModeChangeButton","toggleModeAction","longPressEvent","useLongPress","modeChangeButtonStyle","Screen","App","effect","isIdle","useIdle","fetchTopLevelSheetThunk","fetchTopLevelSheet","useInterval","IFrameValidator","errors","warnings","this","malformedUrlCheckArray","warningsArray","RegExp","test","MALFORMED_URL","validURL","CROSS_ORIGIN","CardData","row","metaData","validator","failed","isImgLink","isVideo","isEmbed","isWebsite","widgetType","WidgetData","name","availableWidgets","n","rotationSpeed","manageViewModeChange","viewModeEnum","setAppMode","CYCLE","setAvailableCards","cardDataArray","setActiveCards","setActiveWidgets","widgetDataArray","onCardSheetLoadSuccess","thunkOn","storeActions","setAppGoogleSheetData","payload","getSheetRows","cards","sourceid","onSetActiveLayout","activeSourceIds","Set","sources","activeWidgetIds","layoutWidgets","availableCardsUpdated","has","registerCardLoadFailure","failedCard","getStoreState","failedId","newCards","fail","onSwapCardContent","newSource","find","debug","extendedLayoutTest","layoutSettings","defaultBackgroundColor","cardSettings","widgets","LayoutData","sourceLayout","parse","testGetLayout","timestamp","swapInfo","Object","entries","k","toRemoveId","toAdd","pos","toFail","newGridLayout","justWidgets","defaultGridLayoutArray","defaultStaticLayout","fakeLayoutRow","defaultLayoutData","tempLayout","onSetAppGoogleSheetData","defaultLayout","setExternalLayouts","onToggleViewMode","buf","newActiveLayout","curIndex","indexOf","nextIndex","selectedRandom","newLayoutArray","cardToDelete","removeCard","cardAddEvent","cardToAdd","setGridLayout","widgetToAdd","failCard","setTempLayout","updateLayout","swap","old","cardDataSheetKey","gid","GoogleSheetData","sheetId","sheets","Map","Promise","resolve","reject","rowArray","get","set","layoutDataGoogleSheet","cardDataGoogleSheet","appGoogleSheet","formUrl","layoutSheetUrl","cardSheetUrl","getData","sheetRow","setFormUrl","googleForm","setLayoutsSheetUrl","urlToCsvUrl","layoutsSheet","setCardSheetUrl","cardsSheet","fetchSheet","sheetResponses","allSettled","results","sheetData","goodValues","result","num","status","addSheet","sheetTitle","setCardDataGoogleSheet","setLayoutDataGoogleSheet","getCardDataResponse","getLayoutDataResponse","googleSheet","sheet","sheetKey","sheetUrl","Papa","download","header","delimiter","dynamicTyping","complete","model","appData","store","createStore","render"],"mappings":"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","file":"static/js/main.764eb357.chunk.js","sourcesContent":["export enum AppMode {\r\n  DISPLAY = \"DISPLAY\",\r\n  EDIT = \"EDIT\",\r\n  CYCLE = \"CYCLE\",\r\n}\r\n\r\nexport enum CardView {\r\n  GRID = \"GRID\",\r\n  PREVIEW = \"PREVIEW\",\r\n  FULL_SCREEN = \"FULL_SCREEN\",\r\n}\r\n\r\nexport enum DragType {\r\n  CARD_TABLE_DATA = \"CARD_TABLE_DATA\",\r\n  DISPLAY_CARD = \"DISPLAY_CARD\",\r\n}\r\n\r\nexport enum InteractionType {\r\n  ACTIVE = \"ACTIVE\",\r\n  STATIC = \"STATIC\",\r\n  FIXED = \"FIXED\",\r\n  IMAGE = \"IMAGE\",\r\n}\r\n\r\nexport enum DndTypes {\r\n  PLACEHOLDER = \"PLACEHOLDER\",\r\n  CLOCK = \"CLOCK\",\r\n  IFRAME = \"IFRAME\",\r\n  CARD_ROW = \"CARD_ROW\",\r\n  LAYOUT = \"LAYOUT\",\r\n  WIDGET = \"WIDGET\",\r\n}\r\n\r\nexport enum DragSource {\r\n  LAYOUT_TABLE = \"LAYOUT_TABLE\",\r\n  CARD_TABLE = \"CARD_TABLE\",\r\n  CARD_GRID = \"CARD_GRID\",\r\n  WIDGETS_TABLE = \"WIDGETS_TABLE\"\r\n}\r\n\r\nexport type SheetNames = \"CARDS\" | \"LAYOUTS\" | \"TOP_LEVEL\"","import { ActionCreator, createTypedHooks, ThunkCreator } from \"easy-peasy\";\r\nimport { StoreModel } from \"./model\";\r\nimport React, {\r\n  EffectCallback,\r\n  MouseEventHandler,\r\n  RefObject,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { AppMode } from \"./enums\";\r\nimport LayoutData from \"./data_structs/LayoutData\";\r\nimport CardData from \"./data_structs/CardData\";\r\nimport WidgetData from \"./data_structs/WidgetData\";\r\nimport { CardAddEvent, CardSwapEvent } from \"./interfaces/CardEvents\";\r\n\r\nconst typedHooks = createTypedHooks<StoreModel>();\r\n\r\n// We export the hooks from our store as they will contain the\r\n// type information on them\r\n// see https://easy-peasy.vercel.app/docs/api/use-store-actions.html for more on store hooks\r\nexport const useStoreActions = typedHooks.useStoreActions;\r\nexport const useStoreDispatch = typedHooks.useStoreDispatch;\r\nexport const useStoreState = typedHooks.useStoreState;\r\n\r\nexport function useToggle(initialValue: boolean): [boolean, () => void] {\r\n  const [value, setValue] = useState<boolean>(initialValue);\r\n\r\n  const toggleValue = () => setValue(!value);\r\n\r\n  return [value, toggleValue];\r\n}\r\n\r\ninterface UseAppProps {\r\n  appMode: AppMode;\r\n  toggleAppMode: ThunkCreator<void, any>;\r\n}\r\nexport const useApp = (): UseAppProps => {\r\n  const toggleAppMode = useStoreActions(\r\n    (actions) => actions.appModel.toggleAppMode\r\n  );\r\n\r\n  const appMode = useStoreState((state) => state.appModel.appMode);\r\n\r\n  return {\r\n    appMode,\r\n    toggleAppMode,\r\n  };\r\n};\r\n\r\ninterface useLayoutProps {\r\n  activeCards: CardData[];\r\n  activeWidgets: WidgetData[];\r\n  setBufferLayout: ActionCreator<ReactGridLayout.Layouts>;\r\n  activeLayout: LayoutData | undefined;\r\n  deleteCard: ThunkCreator<string, any>;\r\n  addCard: ThunkCreator<CardAddEvent, any>;\r\n  swapCard: ThunkCreator<CardSwapEvent, any>;\r\n  addWidget: ThunkCreator<CardAddEvent, any>;\r\n  setActiveLayout: ActionCreator<LayoutData>;\r\n  setRandomLayout: ThunkCreator<void, any>;\r\n}\r\n\r\nexport const useLayout = (): useLayoutProps => {\r\n  const activeCards = useStoreState((state) => state.appModel.activeCards);\r\n  const activeWidgets = useStoreState((state) => state.appModel.activeWidgets);\r\n\r\n  const swapCard = useStoreActions(\r\n    (actions) => actions.layoutsModel.swapCardContent\r\n  );\r\n\r\n  const addWidget = useStoreActions(\r\n    (actions) => actions.layoutsModel.addWidget\r\n  );\r\n\r\n  const deleteCard = useStoreActions(\r\n    (actions) => actions.layoutsModel.deleteCard\r\n  );\r\n  const addCard = useStoreActions((actions) => actions.layoutsModel.addCard);\r\n\r\n  const setBufferLayout = useStoreActions(\r\n    (actions) => actions.layoutsModel.setBufferLayout\r\n  );\r\n  // const set\r\n  const activeLayout = useStoreState(\r\n    (state) => state.layoutsModel.activeLayout\r\n  );\r\n\r\n  const setRandomLayout = useStoreActions(\r\n    (actions) => actions.layoutsModel.setRandomLayout\r\n  );\r\n\r\n  const setActiveLayout = useStoreActions(\r\n    (actions) => actions.layoutsModel.setActiveLayout\r\n  );\r\n\r\n  return {\r\n    activeCards,\r\n    activeWidgets,\r\n    setBufferLayout,\r\n    activeLayout,\r\n    deleteCard,\r\n    addCard,\r\n    swapCard,\r\n    addWidget,\r\n    setActiveLayout,\r\n    setRandomLayout,\r\n  };\r\n};\r\nexport const useKeyboardShortcut = ({\r\n  keyCode,\r\n  action,\r\n  disabled,\r\n}: {\r\n  keyCode: number;\r\n  action: (e: KeyboardEvent) => void;\r\n  disabled: boolean;\r\n}) => {\r\n  React.useEffect(() => {\r\n    if (!disabled) {\r\n      enable();\r\n    }\r\n    return () => {\r\n      disable();\r\n    };\r\n  });\r\n\r\n  const enable = () => {\r\n    document.addEventListener(\"keydown\", handleAction);\r\n  };\r\n\r\n  const disable = () => {\r\n    document.removeEventListener(\"keydown\", handleAction);\r\n  };\r\n\r\n  const handleAction = (e: KeyboardEvent) => {\r\n    if (e.keyCode === keyCode) {\r\n      e.preventDefault();\r\n      action(e);\r\n    }\r\n  };\r\n\r\n  return { enable, disable };\r\n};\r\n\r\ntype AnyEvent = MouseEvent | TouchEvent;\r\n\r\nexport function useOnClickOutside<T extends HTMLElement = HTMLElement>(\r\n  ref: RefObject<T>,\r\n  handler: (event: AnyEvent) => void\r\n): void {\r\n  useEffect(() => {\r\n    const listener = (event: AnyEvent) => {\r\n      const el = ref?.current;\r\n\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!el || el.contains(event.target as Node)) {\r\n        return;\r\n      }\r\n\r\n      handler(event);\r\n    };\r\n\r\n    document.addEventListener(`mousedown`, listener);\r\n    document.addEventListener(`touchstart`, listener);\r\n\r\n    return () => {\r\n      // \\\r\n\r\n      document.removeEventListener(`mousedown`, listener);\r\n      document.removeEventListener(`touchstart`, listener);\r\n    };\r\n\r\n    // Reload only if ref or handler changes\r\n  }, [ref, handler]);\r\n}\r\n\r\nexport function useEffectOnce(effect: EffectCallback) {\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(effect, []);\r\n}\r\n\r\nexport function useInterval(callback: () => void, delay: number | null) {\r\n  const savedCallback = useRef(callback);\r\n\r\n  // Remember the latest callback if it changes.\r\n  useLayoutEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    // Don't schedule if no delay is specified.\r\n    // Note: 0 is a valid value for delay.\r\n    if (!delay && delay !== 0) {\r\n      return;\r\n    }\r\n\r\n    const id = setInterval(() => savedCallback.current(), delay);\r\n\r\n    return () => clearInterval(id);\r\n  }, [delay]);\r\n}\r\n","const TestShader1 = {\n    uniforms: {\n      time: { value: 0.0 }\n    },\n    vertexShader: `\n    vec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\n    vec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\n    vec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n  \n    float snoise(vec2 v) {\n        const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                            0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                            -0.577350269189626,  // -1.0 + 2.0 * C.x\n                            0.024390243902439); // 1.0 / 41.0\n        vec2 i  = floor(v + dot(v, C.yy) );\n        vec2 x0 = v -   i + dot(i, C.xx);\n        vec2 i1;\n        i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n        vec4 x12 = x0.xyxy + C.xxzz;\n        x12.xy -= i1;\n        i = mod289(i); // Avoid truncation effects in permutation\n        vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n            + i.x + vec3(0.0, i1.x, 1.0 ));\n  \n        vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n        m = m*m ;\n        m = m*m ;\n        vec3 x = 2.0 * fract(p * C.www) - 1.0;\n        vec3 h = abs(x) - 0.5;\n        vec3 ox = floor(x + 0.5);\n        vec3 a0 = x - ox;\n        m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n        vec3 g;\n        g.x  = a0.x  * x0.x  + h.x  * x0.y;\n        g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n        return 130.0 * dot(m, g);\n    }\n  \n  \n    \n  \n    uniform float u_time;\n    uniform vec2 u_randomisePosition;\n  \n    varying float vDistortion;\n    varying float xDistortion;\n    varying vec2 vUv;\n  \n    void main() {\n        vUv = uv;\n        vDistortion = snoise(vUv.xx * 3. - u_randomisePosition * 0.15);\n        xDistortion = snoise(vUv.yy * 1. - u_randomisePosition * 0.05);\n        vec3 pos = position;\n        pos.z += (vDistortion * 35.);\n        pos.x += (xDistortion * 25.);\n  \n        gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n    }\n    `,\n    fragmentShader: `\n    vec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\n    vec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\n    vec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n  \n    float snoise(vec2 v) {\n        const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                            0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                            -0.577350269189626,  // -1.0 + 2.0 * C.x\n                            0.024390243902439); // 1.0 / 41.0\n        vec2 i  = floor(v + dot(v, C.yy) );\n        vec2 x0 = v -   i + dot(i, C.xx);\n        vec2 i1;\n        i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n        vec4 x12 = x0.xyxy + C.xxzz;\n        x12.xy -= i1;\n        i = mod289(i); // Avoid truncation effects in permutation\n        vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n            + i.x + vec3(0.0, i1.x, 1.0 ));\n  \n        vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n        m = m*m ;\n        m = m*m ;\n        vec3 x = 2.0 * fract(p * C.www) - 1.0;\n        vec3 h = abs(x) - 0.5;\n        vec3 ox = floor(x + 0.5);\n        vec3 a0 = x - ox;\n        m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n        vec3 g;\n        g.x  = a0.x  * x0.x  + h.x  * x0.y;\n        g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n        return 130.0 * dot(m, g);\n    }\n  \n  \n  \n  \n  \n    vec3 rgb(float r, float g, float b) {\n      return vec3(r / 255., g / 255., b / 255.);\n  }\n  \n  vec3 rgb(float c) {\n      return vec3(c / 255., c / 255., c / 255.);\n  }\n  \n  uniform vec3 u_bg;\n  uniform vec3 u_bgMain;\n  uniform vec3 u_color1;\n  uniform vec3 u_color2;\n  uniform float u_time;\n  \n  varying vec2 vUv;\n  varying float vDistortion;\n  \n  void main() {\n      vec3 bg = rgb(u_bg.r, u_bg.g, u_bg.b);\n      vec3 c1 = rgb(u_color1.r, u_color1.g, u_color1.b);\n      vec3 c2 = rgb(u_color2.r, u_color2.g, u_color2.b);\n      vec3 bgMain = rgb(u_bgMain.r, u_bgMain.g, u_bgMain.b);\n  \n      float noise1 = snoise(vUv + u_time * 0.08);\n      float noise2 = snoise(vUv * 2. + u_time * 0.1);\n  \n      vec3 color = bg;\n      color = mix(color, c1, noise1 * 0.6);\n      color = mix(color, c2, noise2 * .4);\n  \n      color = mix(color, mix(c1, c2, vUv.x), vDistortion);\n  \n      float border = smoothstep(0.1, 0.6, vUv.x);\n  \n      color = mix(color, bgMain, 1. -border);\n  \n      gl_FragColor = vec4(color, 1.0);\n  }\n    `\n  }\n  \n  export default TestShader1","import type GoogleSheet from \"./interfaces/GoogleSheet\";\nimport type SheetId from \"./interfaces/SheetId\";\n\n// export function getSheet<T>(sheetId: SheetId): Promise<GoogleSheet<T>> {\n//   return new Promise<GoogleSheet<T>>(function (resolve, reject) {\n//     fetch(\n//       \"https://spreadsheets.google.com/feeds/list/1wQ1TGqnCTmaqqDak1rTRxPMSGSGLMilwrecf7TuqDGc/1/public/values?alt=json\"\n//     ).then((res) => {\n//       console.log(res);\n//       res.json();\n//     });\n//     // labeledCols(sheetId.key, sheetId.sheet_number)\n//     GetSheetDone.labeledCols(sheetId.key, sheetId.sheet_number)\n//       .then((sheet: GoogleSheet<T>) => {\n//         console.log(sheet);\n//         resolve(sheet);\n//       })\n//       .catch((error: unknown) => {\n//         console.error(\n//           `Error: ${error} fetching DOC_KEY ${sheetId.key}, sheet number ${sheetId.sheet_number}`\n//         );\n//       });\n//   });\n// }\n\nexport function formatDate(date: Date | undefined): string {\n  if (date) {\n    const d = new Date(date);\n    let month = \"\" + (d.getMonth() + 1);\n    let day = \"\" + d.getDate();\n    const year = d.getFullYear();\n\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n\n    return [year, month, day].join(\"-\");\n  } else {\n    return \"faulty date\";\n  }\n}\n\n// String.prototype.toTitleCase = function () { return this.valueOf().toLowerCase().replace(this.valueOf()[0], this.valueOf()[0].toUpperCase()); }\nexport function toTitleCase(str: string) {\n  const words = str.split(\" \");\n  const title = words.map((w) => titleCapitilization(w)).join(\" \");\n  return title;\n}\nfunction titleCapitilization(str: string) {\n  const regex = /^[a-z]{0,1}|\\s\\w/gi;\n\n  str = str.toLowerCase();\n\n  str.match(regex)?.forEach((char) => {\n    str = str.replace(char, char.toUpperCase());\n  });\n\n  return str;\n}\n\nexport function randomIntFromInterval(min: number, max: number) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport function randomNumber(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\n// function\n\n// const toTitleCase = (str: string) => {\n//   const articles = ['a', 'an', 'the'];\n//   const conjunctions = ['for', 'and', 'nor', 'but', 'or', 'yet', 'so'];\n//   const prepositions = [\n//     'with', 'at', 'from', 'into','upon', 'of', 'to', 'in', 'for',\n//     'on', 'by', 'like', 'over', 'plus', 'but', 'up', 'down', 'off', 'near'\n//   ];\n\n//   // The list of spacial characters can be tweaked here\n//   const replaceCharsWithSpace = (str) => str.replace(/[^0-9a-z&/\\\\]/gi, ' ').replace(/(\\s\\s+)/gi, ' ');\n//   const capitalizeFirstLetter = (str) => str.charAt(0).toUpperCase() + str.substr(1);\n//   const normalizeStr = (str) => str.toLowerCase().trim();\n//   const shouldCapitalize = (word, fullWordList, posWithinStr) => {\n//     if ((posWithinStr == 0) || (posWithinStr == fullWordList.length - 1)) {\n//       return true;\n//     }\n\n//     return !(articles.includes(word) || conjunctions.includes(word) || prepositions.includes(word));\n//   }\n\n//   str = replaceCharsWithSpace(str);\n//   str = normalizeStr(str);\n\n//   let words = str.split(' ');\n//   if (words.length <= 2) { // Strings less than 3 words long should always have first words capitalized\n//     words = words.map(w => capitalizeFirstLetter(w));\n//   }\n//   else {\n//     for (let i = 0; i < words.length; i++) {\n//       words[i] = (shouldCapitalize(words[i], words, i) ? capitalizeFirstLetter(words[i], words, i) : words[i]);\n//     }\n//   }\n\n//   return words.join(' ');\n// }\n","import React, { useRef } from 'react'\nimport { Canvas, useFrame, } from '@react-three/fiber'\n\nimport TestShader1 from './TestShader1'\nimport { OrbitControls, PerspectiveCamera } from '@react-three/drei'\nimport * as THREE from 'three'\nimport {randomIntFromInterval} from \"../../utils\"\nvar randomisePosition = new THREE.Vector2(1, 2)\n\nfunction rgb(r, g, b) {\n  return new THREE.Vector3(r, g, b)\n}\n\nconst segmentsResolution = 45\n\nconst baseColors = {\n  pink: rgb(182, 9, 76),\n  brightPink: rgb(241, 3, 66),\n  darkPurple: rgb(42, 8, 56),\n  orange: rgb(244, 93, 31),\n  darkgrey: rgb(50,50,50),\n  lightgrey: rgb(150,150,150),\n  red: rgb(204, 0, 0)\n}\n\nconst uniforms = {\n  u_bg: { type: 'v3', value: baseColors.lightgrey },\n  u_bgMain: { type: 'v3', value: baseColors.lightgrey },\n  u_color1: { type: 'v3', value: baseColors.lightgrey },\n  u_color2: { type: 'v3', value: baseColors.lightgrey },\n  u_time: { type: 'f', value: 0 },\n  u_randomisePosition: { type: 'v2', value: randomisePosition }\n}\nconst R = function (x, y, t) {\n  return Math.floor(192 + 64 * Math.cos((x * x - y * y) / 300 + t))\n}\n\nconst G = function (x, y, t) {\n  return Math.floor(192 + 64 * Math.sin((x * x * Math.cos(t / 4) + y * y * Math.sin(t / 3)) / 300))\n}\n\nconst B = function (x, y, t) {\n  return Math.floor(192 + 64 * Math.sin(5 * Math.sin(t / 9) + ((x - 100) * (x - 100) + (y - 100) * (y - 100)) / 1100))\n}\n\nconst ShadedGeometry1 = ({ position }) => {\n  const shaderMaterialRef = useRef()\n  let t = 0\n  let j = 0\n  \n  let x = randomIntFromInterval(0,32)\n  let y = randomIntFromInterval(0, 32)\n  let vCheck = false\n\n  useFrame(({ clock }) => {\n    shaderMaterialRef.current.uniforms.u_randomisePosition.value = new THREE.Vector2(j, j)\n    shaderMaterialRef.current.uniforms.u_color1.value = new THREE.Vector3(R(x, y, t / 2), G(x, y, t / 2), B(x, y, t / 2))\n\n    shaderMaterialRef.current.uniforms.u_time.value = t\n    if (t % 0.1 === 0) {\n      if (vCheck === false) {\n        x -= 1\n        if (x <= 0) {\n          vCheck = true\n        }\n      } else {\n        x += 1\n        if (x >= 32) {\n          vCheck = false\n        }\n      }\n    }\n    // Increase t by a certain value every frame\n    j = j + 0.01\n    t = t + 0.01\n  })\n\n  return (\n    <mesh position={position} rotation={[THREE.MathUtils.degToRad(0), THREE.MathUtils.degToRad(0), THREE.MathUtils.degToRad(90)]}>\n      <planeGeometry attach=\"geometry\" args={[400, window.innerWidth / 2, segmentsResolution, segmentsResolution]} />\n      <shaderMaterial\n        attach=\"material\"\n        vertexShader={TestShader1.vertexShader}\n        fragmentShader={TestShader1.fragmentShader}\n        uniforms={uniforms}\n        ref={shaderMaterialRef}\n      />\n    </mesh>\n  )\n}\n\nconst BackgroundShader = () => {\n  const cam = useRef()\n  return (\n    <Canvas gl={{ antialias: false, alpha: false }}>\n      <PerspectiveCamera ref={cam} position={[0, 0, 0]} fov={75} aspect={window.innerWidth / window.innerHeight} near={0.1} far={1000} />\n      <ShadedGeometry1 position={[0, 0, -100]} faceResolution={100} />\n      <OrbitControls />\n    </Canvas>\n  )\n}\n\nexport default BackgroundShader\n","import React, { useEffect, useState } from \"react\";\nimport { AppMode } from \"../enums\";\nimport { useStoreState } from \"../hooks\";\nimport \"../css/background.css\";\nimport classNames from \"classnames\";\nimport BackgroundShader from \"./Background/BackgroundShader\";\nimport ReactDOM from \"react-dom\";\n\nconst Background = (): JSX.Element => {\n  const viewMode = useStoreState((state) => state.appModel.appMode);\n  const [size, setSize] = useState({\n    x: window.innerWidth,\n    y: window.innerHeight,\n  });\n\n  const [backgroundStyle, setBackgroundStyle] = useState({\n    backgroundColor: \"gray\",\n  } as React.CSSProperties);\n  useEffect(() => {\n    const isEditMode = viewMode == AppMode.EDIT;\n\n    const style = {\n      position: \"absolute\",\n      height: \"100vh\",\n      width: \"100vw\",\n      top: 0,\n      left: 0,\n      backgroundColor: isEditMode ? \"white\" : \"gray\",\n      transition: \"background-color 0.5s ease\",\n    } as React.CSSProperties;\n    setBackgroundStyle(style);\n  }, [viewMode]);\n\n  const backgroundClass = classNames(\"background-container\", {\n    \"background-container-display-mode\": viewMode == AppMode.DISPLAY,\n    \"background-container-edit-mode\": viewMode == AppMode.EDIT,\n  });\n\n  const bgFillSolid = {\n    position: \"absolute\",\n    height: \"100vh\",\n    width: \"100vw\",\n    top: 0,\n    left: 0,\n    backgroundColor: \"lightgrey\",\n    transition: \"background-color 0.5s ease\",\n  } as React.CSSProperties;\n\n  return ReactDOM.createPortal(\n    <div style={backgroundStyle} className={backgroundClass}>\n      {viewMode === AppMode.EDIT ? (\n        <div style={bgFillSolid}></div>\n      ) : (\n        <div className=\"background-container\">\n          <div className=\"shader-container\">\n            <BackgroundShader />\n          </div>\n          <div className=\"particle-container\"></div>\n        </div>\n      )}\n    </div>,\n    document.querySelector(\"#background\") as HTMLElement\n  );\n};\n\nexport default React.memo(Background);\n","interface AppConfig {\n  //time for the app to return to display mode after no interactions in edit mode\n  idleTime: number;\n  //link to the sheet containing the list of different card content\n  sheetLink: string;\n  //google sheets form link for saving new layouts\n  formLink: string;\n  gridRows: number;\n  gridCols: number;\n  gridBottomPadding: number;\n  //scale for regular web pages\n  defaultIframeScale: number;\n  //scale of content which meant for embedding, i.e. includes \"embed\" in the url\n  defaultEmbedScale: number;\n  //the default layout from your \"layouts\" google sheet to display\n  defaultLayoutName: string;\n  //\n  showModeSwitchButton: boolean;\n  widgetIds: string[];\n  useStaticLayout: boolean;\n  rotationDuration: number;\n}\n\nconst appConfig: AppConfig = {\n  idleTime: process.env.NODE_ENV === \"development\" ? 100000000 : 10000000,\n  sheetLink:\n    \"https://docs.google.com/spreadsheets/d/1BR1AQ5Zmt_o_0dOm9AvDht0G3Q6RXQUhX71Vi4H7tTU/edit#gid=0\",\n  defaultIframeScale: 0.5,\n  defaultEmbedScale: 1.0,\n  defaultLayoutName: \"NewStaticLayout2\",\n  formLink: \"https://forms.gle/nc3UQFtFUtSaF5mu6\",\n  widgetIds: [\"clock\", \"group label\", \"info\"],\n  gridRows: 6,\n  // gridRows: 5,\n  gridCols: 4,\n  showModeSwitchButton: false,\n  useStaticLayout: false,\n  gridBottomPadding: 50,\n  rotationDuration: 10000,\n};\n\nexport default appConfig;\n","import \"../css/iframeView.css\";\r\n\r\nimport classNames from \"classnames\";\r\nimport React, { FC, PropsWithChildren, SyntheticEvent, useState } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport ReactPlayer from \"react-player\";\r\n// import { TransformComponent, TransformWrapper } from \"react-zoom-pan-pinch\";\r\n\r\nimport CardData from \"../data_structs/CardData\";\r\nimport { CardView } from \"../enums\";\r\n\r\ninterface IFrameViewProperties {\r\n  card: CardData;\r\n  scale: number;\r\n  cardView: CardView;\r\n  onError: (\r\n    e: SyntheticEvent<HTMLDivElement | HTMLIFrameElement | HTMLImageElement>\r\n  ) => void;\r\n  onLoad: (\r\n    e: SyntheticEvent<HTMLDivElement | HTMLIFrameElement | HTMLImageElement>\r\n  ) => void;\r\n}\r\n/**\r\n * Minimal warpper for an <iframe>. Can be toggled between a full screen, active view, and a regular card view.\r\n * @component\r\n * @example\r\n * const my_url = \"https://www.youtube.com/embed/tgbNymZ7vqY\";\r\n * return(\r\n *  <IFrameView src = {my_url}/>\r\n * )\r\n */\r\nconst IFrameView: FC<IFrameViewProperties> = ({\r\n  card,\r\n  scale,\r\n  cardView,\r\n  onError,\r\n  onLoad,\r\n}) => {\r\n  const [active, setActive] = useState(false);\r\n  const [valid, setIsValid] = useState(true);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  const iframeOverlayClass = classNames(\"iframe-view-overlay\", {\r\n    \"iframe-view-overlay-hidden\": isLoaded,\r\n    \"iframe-view-overlay-loading\": !isLoaded,\r\n  });\r\n\r\n  const indexFrameContainerClass = classNames(\"iframe-container\", {\r\n    \"iframe-container-hidden\": !valid,\r\n  });\r\n\r\n  const iframeStyle = {\r\n    border: \"none\",\r\n    transform: `scale(${scale})`,\r\n    width: `${100 * (1 / scale)}%`,\r\n    height: `${100 * (1 / scale)}%`,\r\n    transformOrigin: \"top left\",\r\n  } as React.CSSProperties;\r\n\r\n  const iframeActive = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    border: \"5px blue\",\r\n  } as React.CSSProperties;\r\n\r\n  const qrContainerStyle = {\r\n    width: \"100%\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    zIndex: 10,\r\n  } as React.CSSProperties;\r\n\r\n  const { src, contentType } = card;\r\n\r\n  return (\r\n    <div\r\n      className={indexFrameContainerClass}\r\n      onDoubleClick={() => {\r\n        setActive(!active);\r\n      }}\r\n    >\r\n      {/* <div className={iframeOverlayClass}>\r\n        <Loader color=\"white\" height={80} type=\"Grid\" width={80} />\r\n      </div> */}\r\n      {contentType === \"video\" ? (\r\n        <ResponsivePlayer\r\n          onReady={(event) => {\r\n            setIsLoaded(true);\r\n          }}\r\n          src={card.src}\r\n        />\r\n      ) : contentType === \"image\" ? (\r\n        <img\r\n          onLoad={(event) => {\r\n            // setIsLoaded(true);\r\n            onLoad(event);\r\n          }}\r\n          onError={(e) => {\r\n            onError(e);\r\n          }}\r\n          // src={\"blablahblah\"}\r\n          src={src}\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            objectFit: \"cover\",\r\n            objectPosition:\r\n              cardView === CardView.PREVIEW ? \"contain\" : \"center\",\r\n\r\n            // maxHeight: \"90vh\",\r\n          }}\r\n        />\r\n      ) : (\r\n        //   </TransformComponent>\r\n        // </TransformWrapper>\r\n        <iframe\r\n          onLoad={(event) => {\r\n            setIsLoaded(true);\r\n          }}\r\n          src={src}\r\n          style={active ? iframeActive : iframeStyle}\r\n        ></iframe>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(IFrameView);\r\n\r\n// function propertiesAreEqual(\r\n//   previousProperties: Readonly<PropsWithChildren<IFrameViewProperties>>,\r\n//   nextProperties: Readonly<PropsWithChildren<IFrameViewProperties>>\r\n// ): boolean {\r\n//   if (previousProperties.src == nextProperties.src) {\r\n//     console.log(previousProperties.src);\r\n//     console.log(nextProperties.src);\r\n//     return false;\r\n//   }\r\n//   console.log(previousProperties.src);\r\n//   console.log(nextProperties.src);\r\n//   return true;\r\n// }\r\n\r\nconst ResponsivePlayer = ({\r\n  src,\r\n  onReady,\r\n}: {\r\n  src: string;\r\n  onReady: (e: ReactPlayer) => void;\r\n}): JSX.Element => {\r\n  return (\r\n    <div className=\"player-wrapper\">\r\n      <ReactPlayer\r\n        className=\"react-player\"\r\n        controls\r\n        height=\"100%\"\r\n        muted\r\n        onReady={onReady}\r\n        playing\r\n        url={src}\r\n        width=\"100%\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nclass Content extends React.PureComponent<{ src: string }> {\r\n  renderCount = 0;\r\n  render() {\r\n    this.renderCount++;\r\n    return (\r\n      <div\r\n        style={{\r\n          background: \"#afa\",\r\n          padding: 8,\r\n          borderRadius: 8,\r\n          display: \"inline-block\",\r\n        }}\r\n      >\r\n        {this.props.src}\r\n        Hello from{\" \"}\r\n        <span style={{ fontFamily: \"monospace\" }}>{\"<Content />\"}</span> ! I've\r\n        rendered {this.renderCount} times.\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"../../css/pulsar.css\";\nimport { AddIcon } from \"evergreen-ui\";\ninterface PulsarProperties {}\n\nconst Pulsar = () => {\n  return (\n    <div className=\"pulsar\">\n      <AddIcon size={200}></AddIcon>\n      {/* <div className={\"ring\"}></div> */}\n      {/* <div className={\"ring\"}></div>\n      <div className={\"ring\"}></div>\n      <div className={\"ring\"}></div>\n      <div className={\"ring\"}></div> */}\n    </div>\n  );\n};\n\nexport default Pulsar;\n","import React, { FC, ReactNode, useEffect } from \"react\";\nimport { Droppable, DroppableProps } from \"react-beautiful-dnd\";\nimport { AddIcon } from \"evergreen-ui\";\nimport \"../../css/droppable.css\";\nimport Pulsar from \"../Shared/Pulsar\";\nimport { DndTypes } from \"../../enums\";\ninterface IXDrop extends Omit<DroppableProps, \"children\"> {\n  children: ReactNode;\n  cardType: DndTypes;\n  className?: string;\n}\n\n/**A droppable container. Wraps child widgets in a react-beautiful-dnd Droppable component, and renders a \"+\" if a draggable is dragging over the container */\nconst IXDrop: FC<IXDrop> = ({\n  children,\n  className,\n  cardType,\n  ...properties\n}) => {\n  // const droppableContainert className = {\"droppable \" + className}\n  return (\n    <Droppable {...properties} type={\"DEFAULT\"}>\n      {(provided, snapshot) => {\n        return (\n          <div\n            {...provided.innerRef}\n            ref={provided.innerRef}\n            className={\n              snapshot.isDraggingOver\n                ? \"droppable-hovered\" + \" \" + className\n                : \"droppable\" + \" \" + className\n            }\n          >\n            <div\n              className={\n                snapshot.isDraggingOver\n                  ? \"droppable-overlay droppable-overlay-visible\"\n                  : \"droppable-overlay droppable-overlay-hidden\"\n              }\n            >\n              <Pulsar />\n            </div>\n            {children}\n            {provided.placeholder}\n          </div>\n        );\n      }}\n    </Droppable>\n  );\n};\n\nexport default IXDrop;\n","import \"../../css/clock.css\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n/**\r\n * Simple clock widget for displaying the current time.\r\n * @component\r\n */\r\nconst Clock = (): JSX.Element => {\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  const containerStyle = {\r\n    height: \"100%\",\r\n    padding: \".25em\",\r\n    width: \"100%\",\r\n    fontSize: \"4vw\",\r\n    fontWeight: 600,\r\n    color: \"white\",\r\n    boxSizing: \"border-box\",\r\n  } as React.CSSProperties;\r\n\r\n\r\n  useEffect(() => {\r\n    const timerID = setInterval(() => tick(), 1000);\r\n    return function cleanup() {\r\n      clearInterval(timerID);\r\n    };\r\n  });\r\n\r\n  function tick(): void {\r\n    setDate(new Date());\r\n  }\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <div>Data Experience Lab</div>\r\n      <div>\r\n        {date.toLocaleTimeString(\"en-IT\", { hour12: true, timeStyle: \"short\" })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Clock;\r\n","import {\r\n  Button as EverGreenButton,\r\n  ButtonAppearance,\r\n  IntentTypes,\r\n} from \"evergreen-ui\";\r\nimport React from \"react\";\r\n\r\n/**\r\n * Wraps an Evergreen UI Button, providing it with an onClick property.\r\n */\r\n\r\ninterface ButtonProperties {\r\n  onClick: React.MouseEventHandler<HTMLDivElement>;\r\n  text?: string;\r\n  appearance?: ButtonAppearance;\r\n  className?: string;\r\n  iconBefore?: JSX.Element;\r\n  width?: number | string;\r\n  height?: number | string;\r\n  containerClass?: string;\r\n  style?: React.CSSProperties;\r\n  fontSize?: string;\r\n  intent?: IntentTypes;\r\n}\r\nconst Button = ({\r\n  onClick,\r\n  text,\r\n  appearance,\r\n  className,\r\n  iconBefore,\r\n  width,\r\n  height,\r\n  style,\r\n  containerClass,\r\n  fontSize,\r\n  intent,\r\n}: ButtonProperties): JSX.Element => {\r\n  return (\r\n    <div\r\n      className={containerClass}\r\n      onMouseUp={onClick}\r\n      style={{ width: width, height: \"100%\" }}\r\n    >\r\n      <EverGreenButton\r\n        appearance={appearance ?? \"default\"}\r\n        //use evergreen's default button with if no width is provided\r\n        className={className}\r\n        cursor=\"pointer\"\r\n        fontSize={fontSize}\r\n        height={height ?? undefined}\r\n        iconBefore={iconBefore ?? undefined}\r\n        intent={intent ?? \"none\"}\r\n        style={style}\r\n        width={width ?? undefined}\r\n      >\r\n        {text}\r\n      </EverGreenButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState } from \"react\";\r\nimport CardData from \"../../../data_structs/CardData\";\r\nimport \"../../../css/cardInfo.css\"\r\n/**\r\n * Formats text from a CardData object, including it's title and source url.\r\n * @component\r\n */\r\nconst CardInfo = ({\r\n  data,\r\n  className,\r\n}: {\r\n  data: CardData;\r\n  className: string;\r\n}): JSX.Element => {\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  const titleStyle = {\r\n    // fontSize: \"large\",\r\n  };\r\n  return (\r\n    <>\r\n      <div className={\"card-footer\"}>\r\n        <h2 style={titleStyle}>{data.title}</h2>\r\n        {/* <a>{data.src}</a> */}\r\n        <p>\r\n          Lorem Ipsum is simply dummy text of the printing and typesetting\r\n          industry. Lorem Ipsum has been the industry&apos standard dummy text\r\n          ever since the 1500s, when an unknown printer took a galley of type\r\n          and scrambled it to make a type specimen book{\" \"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardInfo;\r\n","import \"../../../css/deleteButton.css\";\n\nimport { DeleteIcon } from \"evergreen-ui\";\nimport React from \"react\";\n\ninterface DeleteButtonProperties {\n    action: ()=>void;\n    onClick: React.MouseEventHandler<HTMLDivElement>;\n  }\n  \n\nconst DeleteButton = ({ onClick, action }: DeleteButtonProperties): JSX.Element => {\n    return (\n      <div\n        className=\"delete-button-container\"\n        onMouseUp={onClick}\n        onClick={onClick}\n        onTouchEnd={(e)=>{action}}\n      >\n        <div\n          // onClick={onClick}\n        style={{display: \"flex\"}}\n        >\n          <DeleteIcon size={30} />\n        </div>\n      </div>\n    );\n  };\n  \n\n  export default DeleteButton","import React, { useRef } from \"react\";\nimport \"../../../css/card/settingsButton.css\";\nimport { CogIcon, Popover } from \"evergreen-ui\";\nimport SettingsMenu from \"./SettingsMenu\";\n\nconst SettingsButton = ({\n  onClick,\n}: {\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\n}): JSX.Element => {\n  const target = useRef();\n  return (\n    <div className=\"settings-button-container\" onMouseUp={onClick}>\n      <div\n        //   onClick={onClick}\n        style={{ display: \"flex\" }}\n      >\n        <CogIcon size={15} />\n      </div>\n    </div>\n  );\n};\n\nexport default SettingsButton;\n","import '../../../css/card/settingsMenu.css';\n\nimport { ActionCreator, Actions } from 'easy-peasy';\nimport {\n  ChevronLeftIcon,\n  ChevronRightIcon,\n} from \"evergreen-ui\";\nimport React, { useRef } from 'react';\n\nimport {useOnClickOutside} from \"../../../hooks\"\nimport Button from '../../Shared/Button';\nimport SettingsButton from './SettingsButton';\nimport { CardModel } from './ViewCard';\n\ninterface SettingsMenuProperties extends Pick<Actions<CardModel>, \"setScale\" | \"setBackgroundColor\" | \"setShowMenu\"> {\n  isShown: boolean;\n  scale: number;\n}\n\nconst SettingsMenu = ({\n  isShown,\n  setScale,\n  setBackgroundColor,\n  setShowMenu,\n  scale,\n  \n}: SettingsMenuProperties): JSX.Element => {\n  const onOutside = () =>{console.log(\"got click outisde\");}\n  const menuReference = useRef(null)\n  const handleClickOutside = useOnClickOutside(menuReference, ()=>{setShowMenu(false)})\n  const menuStyle = {\n    display: isShown ? \"flex\" : \"none\",\n  } as React.CSSProperties;\n\n  return (\n    <div className =\"menu-container\" ref = {menuReference} style={menuStyle} {...handleClickOutside}>\n        <InputRow title = \"Background Color:\">\n       <input\n        className=\"nodrag\"\n        defaultValue=\"rbga(0,0,0,0)\"\n        onChange={(e)=>{setBackgroundColor(e.target.value)}}\n        type=\"color\"\n       />\n        </InputRow>\n        <InputRow title = \"Scale: \">\n        <ScaleControls scale={scale} setScale={setScale} />\n        </InputRow>\n    </div>\n  );\n};\n\nconst InputRow = ({title, children}:{title: string, children: JSX.Element | JSX.Element[]}): JSX.Element=>{\n    return (\n        <div className=\"menu-input-row\">\n            {title}\n            {children}\n        </div>\n    )\n}\n\nconst ScaleControls = ({\n  setScale,\n  scale,\n}: {\n  setScale: ActionCreator<number>;\n  scale: number;\n}): JSX.Element => {\n  return (\n    <div className=\"scale-controls-grid\">\n      <Button\n        containerClass=\"scale-controls-left\"\n        height = {20}\n        iconBefore={<ChevronLeftIcon size={30} />}\n        // className={\"scale-controls-left\"}\n        onClick={() => {\n          setScale(-0.1);\n        }}\n        width={20}\n        // style={{ width: \"fill-available\" }}\n      />\n\n      <input onChange = {(e)=>{setScale(parseInt(e.target.value))}} style ={{width: 30}} defaultValue = {0.5} type=\"text\" value = {scale.toString().slice(0, 3)}/>\n      <Button\n        containerClass=\"scale-controls-right\"\n        height = {20}\n        iconBefore={<ChevronRightIcon size={30} />}\n        // className={\"scale-controls-right\"}\n        onClick={() => {\n          setScale(0.1);\n        }}\n        // style={{ width: \"-webkit-fill-available\" }}\n        width={20}\n      />\n    </div>\n  );\n};\n\nexport default SettingsMenu;\n","import \"../../../css/viewCard.css\";\r\n\r\nimport classNames from \"classnames\";\r\nimport type { Action, Computed, Thunk } from \"easy-peasy\";\r\nimport { action, computed, thunk, useLocalStore } from \"easy-peasy\";\r\nimport { InlineAlert } from \"evergreen-ui\";\r\nimport React, {\r\n  FC,\r\n  MouseEventHandler,\r\n  PropsWithChildren,\r\n  ReactNode,\r\n  RefObject,\r\n  SyntheticEvent,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { Layouts } from \"react-grid-layout\";\r\nimport QRCode from \"react-qr-code\";\r\n\r\nimport CardData from \"../../../data_structs/CardData\";\r\nimport WidgetData from \"../../../data_structs/WidgetData\";\r\nimport { AppMode, CardView, DndTypes } from \"../../../enums\";\r\nimport {\r\n  useApp,\r\n  useKeyboardShortcut,\r\n  useLayout,\r\n  useOnClickOutside,\r\n  useStoreActions,\r\n} from \"../../../hooks\";\r\nimport appConfig from \"../../../static/appConfig\";\r\nimport Button from \"../../Shared/Button\";\r\nimport CardInfo from \"./CardInfo\";\r\nimport DeleteButton from \"./DeleteButton\";\r\nimport SettingsButton from \"./SettingsButton\";\r\nimport SettingsMenu from \"./SettingsMenu\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { randomNumber } from \"../../../utils\";\r\n/**\r\n * Wraps each of the cards in the card layouts.\r\n * Click/Touch => Change the cards view mode\r\n * @component\r\n */\r\nexport interface CardModel {\r\n  cardBackgroundColor: string;\r\n  cardClass: Computed<CardModel, string>;\r\n  cardInfoClass: Computed<CardModel, string>;\r\n  cardType: DndTypes;\r\n  cardView: CardView;\r\n  handleCardPress: Thunk<CardModel>;\r\n  scale: number;\r\n  setBackgroundColor: Action<CardModel, string>;\r\n  setCardView: Action<CardModel, CardView>;\r\n  setScale: Action<CardModel, number>;\r\n  setShowMenu: Action<CardModel, boolean>;\r\n  showMenu: boolean;\r\n  toggleMenu: Action<CardModel>;\r\n  // transform: Computed<CardModel, string>;\r\n}\r\n\r\ninterface ViewCardProperties {\r\n  // activeKey?: React.MutableRefObject<string>;\r\n  cardId?: string;\r\n  cardType: DndTypes;\r\n  useAnimation: boolean;\r\n  //pass a set of information to all child components\r\n  children?: (\r\n    scale: number,\r\n    cardView: CardView,\r\n    onError: (\r\n      e: SyntheticEvent<HTMLDivElement | HTMLIFrameElement | HTMLImageElement>\r\n    ) => void,\r\n    onLoad: (\r\n      e: SyntheticEvent<HTMLDivElement | HTMLIFrameElement | HTMLImageElement>\r\n    ) => void\r\n  ) => ReactNode;\r\n  data?: CardData | WidgetData;\r\n  dataGrid?: Layouts;\r\n  layoutRef?: React.MutableRefObject<Layouts | null>;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst ViewCard: FC<ViewCardProperties> = ({\r\n  cardType,\r\n  children,\r\n  // activeKey,\r\n  cardId,\r\n  data,\r\n  onClick,\r\n  useAnimation,\r\n}: ViewCardProperties) => {\r\n  const cardContainerReference = useRef<HTMLDivElement>(null);\r\n  // const appMode = useStoreState((state) => state.appModel.appMode);\r\n  const { appMode } = useApp();\r\n  const { deleteCard } = useLayout();\r\n  const [oldCardView, setCardView] = useState(CardView.GRID);\r\n  const [isError, setIsError] = useState(false);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [activeChildren, setActiveChildren] = useState<ReactNode>();\r\n\r\n  const [state, actions] = useLocalStore<CardModel>(\r\n    () => ({\r\n      cardView: CardView.GRID,\r\n      setCardView: action((state, cardView) => {\r\n        state.cardView = cardView;\r\n      }),\r\n      scale:\r\n        data?.contentType === \"embed\"\r\n          ? appConfig.defaultEmbedScale\r\n          : appConfig.defaultIframeScale,\r\n      setScale: action((state, scale) => {\r\n        state.scale += scale;\r\n      }),\r\n      cardBackgroundColor: \"\",\r\n      setBackgroundColor: action((state, color) => {\r\n        state.cardBackgroundColor = color;\r\n      }),\r\n      setShowMenu: action((state, show) => {\r\n        state.showMenu = show;\r\n      }),\r\n      toggleMenu: action((state) => {\r\n        state.showMenu = !state.showMenu;\r\n      }),\r\n      showMenu: false,\r\n      cardType: cardType,\r\n      cardClass: computed([(state) => state.cardView], (cardView) => {\r\n        const test = classNames(\"card\", {\r\n          \"card-edit\": appMode === AppMode.EDIT,\r\n          \"card-display\":\r\n            appMode === AppMode.DISPLAY && cardView == CardView.GRID,\r\n          \"card-preview\": cardView === CardView.PREVIEW,\r\n          \"card-fullscreen\": cardView === CardView.FULL_SCREEN,\r\n          \"card-empty\": appMode === AppMode.EDIT && !children,\r\n          \"card-empty-hidden\": !children && appMode == AppMode.DISPLAY,\r\n          \"card-locked\":\r\n            state.cardType === DndTypes.CLOCK && appMode === AppMode.EDIT,\r\n          // \"card-error\": data?.failed,\r\n        });\r\n        return test;\r\n      }),\r\n      cardInfoClass: computed((state) => {\r\n        return classNames(\"info\", {\r\n          \"info-hidden\": appMode === AppMode.EDIT,\r\n          \"info-display\": appMode === AppMode.DISPLAY,\r\n          \"info-preview\": state.cardView === CardView.PREVIEW,\r\n        });\r\n      }),\r\n      handleCardPress: thunk((actions, _, { getState }) => {\r\n        // console.log(\"HANDLED PRESS\");\r\n        console.log(getState().cardClass);\r\n        // console.log(appMode);\r\n        if (appMode === AppMode.DISPLAY && cardId != undefined) {\r\n          switch (getState().cardView) {\r\n            case CardView.GRID:\r\n              if (data?.contentType !== \"widget\") {\r\n                actions.setCardView(CardView.PREVIEW);\r\n                console.log(\"SETTING CARD VIEW TO PREVIEW\");\r\n                const el = document.getElementById(\r\n                  data?.id ?? \"view_card\"\r\n                ) as HTMLDivElement;\r\n                el.style.zIndex = \"1000\";\r\n              }\r\n              // console.log(data);\r\n\r\n              break;\r\n            case CardView.PREVIEW:\r\n              actions.setCardView(CardView.GRID);\r\n              const el = document.getElementById(\r\n                data?.id ?? \"view_card\"\r\n              ) as HTMLDivElement;\r\n              el.style.zIndex = \"0\";\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n      }),\r\n    }),\r\n    [appMode],\r\n    (s) => {\r\n      return { devTools: false };\r\n    }\r\n  );\r\n\r\n  const settingsMenuProperties = {\r\n    scale: state.scale,\r\n    setScale: actions.setScale,\r\n    setBackgroundColor: actions.setBackgroundColor,\r\n    setShowMenu: actions.setShowMenu,\r\n  };\r\n\r\n  const cardModalBackdrop = classNames(\"card-modal-backdrop\", {\r\n    \"card-modal-backdrop-active\":\r\n      oldCardView === CardView.PREVIEW || oldCardView === CardView.FULL_SCREEN,\r\n    \"card-modal-backdrop-inactive\": oldCardView === CardView.GRID,\r\n  });\r\n\r\n  const cardChildContainer = classNames(\"card-child-container\", {\r\n    \"card-child-container-preview\": state.cardView === CardView.PREVIEW,\r\n    \"card-child-container-fullscreen\": state.cardView === CardView.FULL_SCREEN,\r\n    \"card-child-container-grid\": state.cardView === CardView.GRID,\r\n  });\r\n\r\n  const { enable, disable } = useKeyboardShortcut({\r\n    keyCode: 27, //escape\r\n    action: () => {\r\n      if (\r\n        oldCardView === CardView.FULL_SCREEN ||\r\n        oldCardView === CardView.PREVIEW\r\n      ) {\r\n        setCardView(CardView.GRID);\r\n      }\r\n    },\r\n    disabled: false,\r\n  });\r\n\r\n  const showDeleteButton = (): JSX.Element | undefined => {\r\n    if (appMode == AppMode.EDIT && data) {\r\n      return (\r\n        <>\r\n          <DeleteButton\r\n            onClick={() => {\r\n              console.log(\"got delete button click\");\r\n              deleteCard(data.id);\r\n            }}\r\n            action={() => {\r\n              deleteCard(data.id);\r\n            }}\r\n          />\r\n          <SettingsButton\r\n            onClick={(e) => {\r\n              actions.toggleMenu();\r\n            }}\r\n          />\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderCardInfo = (): JSX.Element | undefined => {\r\n    if (\r\n      oldCardView === CardView.PREVIEW &&\r\n      data &&\r\n      data.contentType !== \"widget\"\r\n    ) {\r\n      return (\r\n        <CardInfo className={state.cardInfoClass} data={data as CardData} />\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderInternals = () => {\r\n    if (data?.contentType !== \"widget\") {\r\n      return [showDeleteButton(), renderCardInfo()];\r\n    } else {\r\n      return [showDeleteButton()];\r\n    }\r\n  };\r\n\r\n  const renderReturnButton = (): JSX.Element | undefined => {\r\n    if (oldCardView === CardView.FULL_SCREEN) {\r\n      return (\r\n        <ReturnButton\r\n          onClick={() => {\r\n            setCardView(CardView.GRID);\r\n          }}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  const containerReference = useRef(null);\r\n  useOnClickOutside(containerReference, (e) => {\r\n    e.preventDefault();\r\n    console.log(\"clicked outside\");\r\n    if (state.cardView == CardView.PREVIEW) {\r\n      actions.setCardView(CardView.GRID);\r\n    }\r\n  });\r\n\r\n  const qrContainerStyle = {\r\n    width: \"fit-content\",\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    zIndex: 1,\r\n    right: 0,\r\n    transform: \"translate(50%, 50%)\",\r\n  } as React.CSSProperties;\r\n\r\n  const renderQrCode = (): JSX.Element | undefined => {\r\n    if (state.cardView === CardView.PREVIEW && data?.contentType !== \"widget\") {\r\n      const cd = data as CardData;\r\n      return (\r\n        <div style={qrContainerStyle}>\r\n          <QRCode size={128} value={cd?.src ?? \"\"} />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const onError = (\r\n    event: SyntheticEvent<HTMLDivElement | HTMLIFrameElement | HTMLImageElement>\r\n  ) => {\r\n    setIsError(true);\r\n    // console.log(\"Got Error\");\r\n  };\r\n\r\n  const onLoad = (\r\n    event: SyntheticEvent<HTMLDivElement | HTMLIFrameElement | HTMLImageElement>\r\n  ) => {\r\n    setIsLoaded(true);\r\n    // console.log(\"Got Error\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (cardContainerReference.current) {\r\n      const cardGrandParent =\r\n        cardContainerReference.current?.parentElement?.parentElement;\r\n      // console.log(cardGrandParent);\r\n      if (cardGrandParent) {\r\n        cardGrandParent.id = data?.id ?? \"view_card\";\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const jj = useMemo(() => {\r\n    if (cardContainerReference.current) {\r\n      const rect = cardContainerReference.current.getBoundingClientRect();\r\n      console.log(calculateTransform2(rect));\r\n      return calculateTransform2(rect);\r\n    }\r\n    // setVx(calculateTransform2(rect));\r\n  }, [state.cardView]);\r\n\r\n  const variants = {\r\n    active: {\r\n      opacity: 1,\r\n      transition: {\r\n        delay: randomNumber(0.4, 0.5),\r\n        duration: 0.5,\r\n      },\r\n    },\r\n    preview: {\r\n      opacity: 1,\r\n      x: jj ? jj[0] : 0,\r\n      y: jj ? jj[1] : 0,\r\n      // zIndex: 1000,\r\n    },\r\n    normal: {\r\n      opacity: 1,\r\n    },\r\n    none: {\r\n      opacity: 1,\r\n      // x: 9,\r\n      y: 0,\r\n    },\r\n    error: {\r\n      // border: \"1px solid red\",\r\n      opacity: [1, 0],\r\n      backgroundColor: \"red\",\r\n      // transition:\r\n    },\r\n    loaded: {\r\n      // border: \"1px solid red\",\r\n      outline: [`0px solid green`, `4px solid green`, `0px solid green`],\r\n      opacity: [0, 1, 1],\r\n      transition: {\r\n        delay: randomNumber(0.4, 0.5),\r\n        duration: 0.5,\r\n      },\r\n      // backgroundColor: \"green\",\r\n      // transition:\r\n    },\r\n    in: {\r\n      opacity: 1,\r\n      transition: {\r\n        delay: randomNumber(0.4, 0.5),\r\n        duration: 0.5,\r\n      },\r\n      // backgroundColor: \"green\",\r\n      // transition:\r\n    },\r\n    out: {\r\n      y: randomNumber(-50, 50),\r\n      opacity: 0,\r\n      transition: {\r\n        delay: randomNumber(0.4, 1.5),\r\n        duration: 0.5,\r\n      },\r\n      // backgroundColor: \"green\",\r\n      // transition:\r\n    },\r\n  };\r\n\r\n  const [animationVariant, setAnimationVariant] = useState(\"none\");\r\n  // const [animate, setAnimate] = useState(\"in\");\r\n  useEffect(() => {\r\n    console.log(children);\r\n    if (children) {\r\n      if (useAnimation) {\r\n        setAnimationVariant(\"out\");\r\n        setTimeout(() => {\r\n          setAnimationVariant(\"in\");\r\n          setActiveChildren(\r\n            children(state.scale, state.cardView, onError, onLoad)\r\n          );\r\n        }, 1000);\r\n      } else {\r\n        setAnimationVariant(\"none\");\r\n        setActiveChildren(\r\n          children(state.scale, state.cardView, onError, onLoad)\r\n        );\r\n      }\r\n    }\r\n  }, [children]);\r\n\r\n  return (\r\n    //receives a drag objects\r\n    <>\r\n      <motion.div\r\n        exit={{ opacity: 0, x: -300 }}\r\n        ref={cardContainerReference}\r\n        layoutId=\"viewcard\"\r\n        className={state.cardClass}\r\n        style={{\r\n          transformOrigin: \"center\",\r\n          willChange: \"transform\",\r\n          height: \"100%\",\r\n          // transform: state.transform,\r\n          backgroundColor: state.cardBackgroundColor,\r\n          // opacity: 1,\r\n          opacity: 1,\r\n          // opacity: 1,\r\n        }}\r\n        // initial={a}\r\n        variants={variants}\r\n        // initial={true}\r\n        // intial={\"loaded\"}\r\n        animate={animationVariant}\r\n        // animate={\r\n        //   isError && state.cardView === CardView.GRID\r\n        //     ? \"error\"\r\n        //     : isLoaded && state.cardView === CardView.GRID\r\n        //     ? \"loaded\"\r\n        //     : state.cardView === CardView.PREVIEW\r\n        //     ? \"preview\"\r\n        //     : appMode == AppMode.DISPLAY\r\n        //     ? \"active\"\r\n        //     : \"normal\"\r\n        // }\r\n      >\r\n        {children && (\r\n          <div className={cardModalBackdrop}>\r\n            <div\r\n              className={cardChildContainer}\r\n              onMouseUp={() => {\r\n                actions.handleCardPress();\r\n                if (onClick) {\r\n                  onClick();\r\n                }\r\n              }}\r\n              ref={containerReference}\r\n            >\r\n              {/* {renderQrCode()} */}\r\n              {renderInternals()}\r\n              {activeChildren}\r\n              {/* {children(state.scale, state.cardView, onError, onLoad)} */}\r\n              <SettingsMenu\r\n                {...settingsMenuProperties}\r\n                isShown={state.showMenu}\r\n              />\r\n            </div>\r\n            {renderReturnButton()}\r\n          </div>\r\n        )}\r\n      </motion.div>\r\n    </>\r\n  );\r\n};\r\n// class App extends React.Component<{ message: string }, { count: number }> {\r\nconst calculateTransform = (boundingBox: DOMRect): string => {\r\n  const windowWidth = window.innerWidth;\r\n  const windowHeight = window.innerHeight;\r\n  const vw = window.innerWidth / 100;\r\n  const vh = window.innerWidth / 100;\r\n  const futureWidth = vw * 60;\r\n  const futureHeight = vh * 40;\r\n\r\n  const centeredX = windowWidth / 2 - futureWidth / 2;\r\n  const centeredY = windowHeight / 2 - futureHeight / 2;\r\n\r\n  const currentX = boundingBox.x;\r\n  const currentY = boundingBox.y;\r\n  let differenceX = centeredX - currentX;\r\n  let differenceY = centeredY - currentY;\r\n\r\n  if (centeredX < currentX) {\r\n    differenceX = currentX - centeredX;\r\n    differenceX *= -1;\r\n  }\r\n  if (centeredY < currentY) {\r\n    differenceY = currentY - centeredY;\r\n    differenceY *= -1;\r\n  }\r\n\r\n  return `translate(${differenceX}px, ${differenceY}px)`;\r\n};\r\nconst calculateTransform2 = (boundingBox: DOMRect): [number, number] => {\r\n  const windowWidth = window.innerWidth;\r\n  const windowHeight = window.innerHeight;\r\n  const vw = window.innerWidth / 100;\r\n  const vh = window.innerWidth / 100;\r\n  const futureWidth = vw * 60;\r\n  const futureHeight = vh * 40;\r\n\r\n  const centeredX = windowWidth / 2 - futureWidth / 2;\r\n  const centeredY = windowHeight / 2 - futureHeight / 2;\r\n\r\n  const currentX = boundingBox.x;\r\n  const currentY = boundingBox.y;\r\n  let differenceX = centeredX - currentX;\r\n  let differenceY = centeredY - currentY;\r\n\r\n  if (centeredX < currentX) {\r\n    differenceX = currentX - centeredX;\r\n    differenceX *= -1;\r\n  }\r\n  if (centeredY < currentY) {\r\n    differenceY = currentY - centeredY;\r\n    differenceY *= -1;\r\n  }\r\n  return [differenceX, differenceY];\r\n  // return `translate(${differenceX}px, ${differenceY}px)`;\r\n};\r\n\r\nconst setGpZindex = (\r\n  refdiv: RefObject<HTMLDivElement> | null,\r\n  index: number\r\n): void => {\r\n  if (refdiv) {\r\n    const cardGrandParent = refdiv.current?.parentElement?.parentElement;\r\n    console.log(cardGrandParent);\r\n    if (cardGrandParent) {\r\n      cardGrandParent.style.zIndex = index.toString();\r\n    }\r\n  }\r\n};\r\n// const setGpZindex1 = (\r\n//   refdiv: HTMLDivElement,\r\n//   zIndex: number\r\n// ): void => {\r\n//   if (refdiv) {\r\n//       cardGrandParent.style.zIndex = zIndex.toString();\r\n//   }\r\n// };\r\n//depending on the view state of the card, change its html output node\r\n\r\nconst FailureNotice = ({ errors }: { errors: string[] }): JSX.Element => {\r\n  return (\r\n    <div className=\"failure-notice-container\">\r\n      {errors.map((error, index) => (\r\n        <div className=\"failure-message\" key={index}>\r\n          <InlineAlert intent=\"danger\" key={index}>\r\n            {error}\r\n          </InlineAlert>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ReturnButton = ({\r\n  onClick,\r\n}: {\r\n  onClick: MouseEventHandler<HTMLDivElement>;\r\n}): JSX.Element => {\r\n  return (\r\n    <div className=\"return-button-container\">\r\n      <Button onClick={onClick} text=\"Return\" width={300} />\r\n    </div>\r\n  );\r\n};\r\nfunction propertiesAreEqual(\r\n  previousProperties: Readonly<PropsWithChildren<ViewCardProperties>>,\r\n  nextProperties: Readonly<PropsWithChildren<ViewCardProperties>>\r\n): boolean {\r\n  return true;\r\n}\r\n\r\nexport default React.memo(ViewCard);\r\n","import IXDrop from \"../DragAndDrop/IXDrop\";\nimport React, { useState } from \"react\";\nimport ViewCard from \"./ViewCard/ViewCard\";\nimport { DndTypes } from \"../../enums\";\nimport { Layout, Layouts, Responsive, WidthProvider } from \"react-grid-layout\";\nimport \"../../css/cardLayout.css\";\nimport appConfig from \"../../static/appConfig\";\nimport { GridPosition } from \"../../interfaces/GridPosition\";\n\ntype GuideGridSettings = Partial<ReactGridLayout.ResponsiveProps>;\n\nexport const GuideGrid = ({\n  gridSettings,\n}: {\n  gridSettings: GuideGridSettings;\n}): JSX.Element => {\n  const ResponsiveGridLayout = WidthProvider(Responsive);\n  const guideCards = generateFilledLayout(\n    appConfig.gridRows,\n    appConfig.gridCols\n  );\n  const justCardNames = guideCards.lg.map((c) => c.i);\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        zIndex: 0,\n      }}\n    >\n      <ResponsiveGridLayout\n        {...gridSettings}\n        className=\"card-layout\"\n        layouts={guideCards}\n        resizeHandles={[]}\n        preventCollision={true}\n        isDraggable={false}\n        isResizable={false}\n      >\n        {justCardNames.map((p, index) => {\n          return (\n            <div key={p}>\n              <IXDrop\n                key={index}\n                droppableId={p}\n                cardType={DndTypes.PLACEHOLDER}\n                className={\"droppable-guide\"}\n              >\n                <ViewCard\n                  key={p}\n                  cardId={p}\n                  cardType={DndTypes.PLACEHOLDER}\n                  useAnimation={false}\n                ></ViewCard>\n              </IXDrop>\n            </div>\n          );\n        })}\n      </ResponsiveGridLayout>\n    </div>\n  );\n};\nexport default React.memo(GuideGrid);\n\nfunction generateFilledLayout(rows: number, cols: number): Layouts {\n  const allGridSpots: GridPosition[] = [];\n  for (let y = 0; y < rows; y++) {\n    for (let x = 0; x < cols; x++) {\n      allGridSpots.push({ x: x, y: y });\n    }\n  }\n\n  const emptyCards = allGridSpots.map((rr) => {\n    return {\n      x: rr.x,\n      y: rr.y,\n      w: 1,\n      h: 1,\n      i: `empty_card_[${rr.x}, ${rr.y}]`,\n      minW: 1,\n      maxW: 1,\n      minH: 1,\n      maxH: 1,\n      static: false,\n      // static: true,\n      isDraggable: false,\n      isResizable: false,\n      resizeHandles: [],\n    } as Layout;\n  });\n\n  //TODO: MORE FUNCTIONAL SOLUTION\n  // const filled = layout.concat(emptyCards);\n  //pop off the first two positions where the clock is\n  // emptyCards.shift();\n  // emptyCards.shift();\n  return {\n    lg: emptyCards,\n    md: emptyCards,\n    sm: emptyCards,\n    xs: emptyCards,\n    xxs: emptyCards,\n  };\n}\n","import \"../../css/cardLayout.css\";\nimport \"../../css/libs/reactDraggable.css\";\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Layouts, Responsive, WidthProvider } from \"react-grid-layout\";\n\nimport CardData from \"../../data_structs/CardData\";\nimport WidgetData from \"../../data_structs/WidgetData\";\nimport { AppMode, DndTypes } from \"../../enums\";\nimport { useApp, useLayout } from \"../../hooks\";\nimport appConfig from \"../../static/appConfig\";\nimport IFrameView from \"../IFrameView\";\nimport IXDrop from \"../DragAndDrop/IXDrop\";\nimport Clock from \"../Widgets/Clock\";\nimport GuideGrid from \"./GuideGrid\";\nimport ViewCard from \"./ViewCard/ViewCard\";\nimport { AnimatePresence, motion, useAnimation, Variants } from \"framer-motion\";\nimport { randomNumber } from \"../../utils\";\n\n// import defaultLayout\n\nexport const CardGrid = (): JSX.Element => {\n  const { appMode } = useApp();\n  const { activeLayout, setBufferLayout, activeCards, activeWidgets } =\n    useLayout();\n\n  //rerender whenever the layout changes\n  useEffect(() => {\n    console.log(activeLayout?.id);\n  }, [activeLayout?.id]);\n  //use the size of the window in order to set the height of the cards\n  const [size, setSize] = useState({\n    x: window.innerWidth,\n    y: window.innerHeight,\n  });\n\n  const controls = useAnimation();\n\n  const variants = {\n    show: {\n      opacity: [1, 0, 1],\n      transition: {\n        duration: 0.5,\n        // repeat: 1,\n        // repeatType: \"mirror\",\n      },\n    },\n    hidden: {\n      opacity: 0,\n      // opacity: [1, 0, 1],\n      transition: {\n        duration: 0.5,\n        // repeat: 1,\n        // repeatType: \"mirror\",\n      },\n    },\n  } as Variants;\n\n  const localLayout = useRef<null | Layouts>(null);\n\n  const activeKeyReference = useRef(\"\");\n  const ResponsiveGridLayout = WidthProvider(Responsive);\n\n  const sharedGridSettings = {\n    breakpoints: { lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 },\n    cols: {\n      lg: appConfig.gridCols,\n      md: appConfig.gridCols,\n      sm: appConfig.gridCols,\n      xs: appConfig.gridCols,\n      xxs: appConfig.gridCols,\n    },\n    rowHeight: (size.y - appConfig.gridBottomPadding) / appConfig.gridRows,\n    margin: [20, 20] as [number, number],\n    preventCollision: true,\n    compactType: null,\n  };\n\n  const renderWidget = (widgetData: WidgetData): JSX.Element | undefined => {\n    let widget = undefined;\n\n    switch (widgetData.id) {\n      case \"clock\":\n        widget = (\n          <ViewCard\n            useAnimation={false}\n            cardType={DndTypes.CLOCK}\n            onClick={() => {}}\n          >\n            {(scale) => {\n              return <Clock />;\n            }}\n          </ViewCard>\n        );\n\n        break;\n      case \"info\":\n        widget = (\n          <ViewCard useAnimation={false} cardType={DndTypes.CLOCK}>\n            {(scale) => {\n              // return <HowToUse />;\n              return <div></div>;\n            }}\n          </ViewCard>\n        );\n        break;\n    }\n    console.log(widget);\n    return widget;\n  };\n\n  return (\n    <div>\n      <div className=\"card-grid-container\">\n        <ResponsiveGridLayout\n          {...sharedGridSettings}\n          className=\"card-layout\"\n          // isBounded\n          isDraggable={appMode === AppMode.EDIT}\n          isResizable={appMode === AppMode.EDIT}\n          layouts={activeLayout ? activeLayout.layout : { lg: [] }}\n          // layouts={realLayout}\n          onDragStart={(layout, oldItem, newItem, placeholder, e, element) => {\n            const previousStyle = element.style;\n            previousStyle.border = \"2px solid cyan\";\n            element.style.border = \"4px solid cyan\";\n          }}\n          onLayoutChange={(l) => {\n            const newLayout: Layouts = {\n              lg: l,\n              md: l,\n              sm: l,\n              xs: l,\n              xxs: l,\n            };\n            localLayout.current = newLayout;\n            setBufferLayout(newLayout);\n            // setBufferLayout(localLayout.current);\n          }}\n          preventCollision\n          resizeHandles={[\"se\"]}\n          verticalCompact\n        >\n          {[...activeCards, ...activeWidgets].map(\n            (card: CardData | WidgetData, index: number) => {\n              return (\n                // <AnimatePresence>\n                <div\n                  className=\"card-container\"\n                  draggable\n                  key={card.id}\n                  // initial={\"hidden\"}\n                  // style={{ opacity: 1 }}\n                  // exit={{ opacity: 1 }}\n                  // layoutId={card.id}\n                  // animate={{ opacity: 1 }}\n                  // style={{ opacity: 0 }}\n                  // initial\n                  // initial=\"hidden\"\n                  // opacity={0}\n                  // animate={controls}\n                >\n                  <IXDrop\n                    cardType={DndTypes.IFRAME}\n                    className=\"droppable-card\"\n                    droppableId={card.id}\n                    key={index}\n                  >\n                    <ViewCard\n                      // activeKey={activeKeyReference}\n                      cardId={index.toString()}\n                      cardType={DndTypes.IFRAME}\n                      data={card}\n                      onClick={() => {\n                        activeKeyReference.current = index.toString();\n                      }}\n                      useAnimation={card.contentType !== \"widget\"}\n                    >\n                      {card.contentType !== \"widget\"\n                        ? (scale, cardView, onError, onLoad) => {\n                            const contentCard = card as CardData;\n                            return (\n                              <IFrameView\n                                card={contentCard}\n                                scale={scale}\n                                cardView={cardView}\n                                onError={onError}\n                                onLoad={onLoad}\n                              />\n                            );\n                          }\n                        : (scale) => {\n                            return renderWidget(card as WidgetData);\n                          }}\n                      {}\n                    </ViewCard>\n                  </IXDrop>\n                </div>\n                // </AnimatePresence>\n              );\n            }\n          )}\n        </ResponsiveGridLayout>\n      </div>\n      <GuideGrid gridSettings={sharedGridSettings} />\n    </div>\n  );\n};\nexport default React.memo(CardGrid);\n\nconst cardContainerClass = (card: CardData, appMode: AppMode): string => {\n  const isFailed = card.failed;\n  if (isFailed && appMode === AppMode.DISPLAY) {\n    return \"card-container-hidden\";\n  } else if (isFailed && appMode === AppMode.EDIT) {\n    return \"card-container-error\";\n  } else {\n    return \"card-container\";\n  }\n};\n\n//\n","import React from \"react\";\nimport { DragDropContext, DropResult } from \"react-beautiful-dnd\";\n\nimport { DragSource } from \"../../enums\";\nimport { useLayout, useStoreState } from \"../../hooks\";\nimport { CardAddEvent, CardSwapEvent } from \"../../interfaces/CardEvents\";\nimport { GridPosition } from \"../../interfaces/GridPosition\";\n\n/**\n * Handles all functionality for dragging and dropping content into the layout\n */\n\nconst stringToGridPos = (cardId: string): GridPosition => {\n  //card id's of empty cards is of \"empty_card_[x, y]\" format\n\n  const posString = cardId.split(\"[\")[1];\n  //x,y]\n  const x = Number.parseInt(posString.charAt(0));\n  //x\n  const y = Number.parseInt(posString.charAt(3));\n  //y\n  return {\n    x: x,\n    y: y,\n  } as GridPosition;\n};\n\nconst cardIsEmpty = (cardId: string): boolean => {\n  return cardId.startsWith(\"empty\");\n};\n\nconst AppDragContext = ({\n  children,\n}: {\n  children: JSX.Element | JSX.Element[];\n}): JSX.Element => {\n  const { addCard, swapCard, addWidget, setActiveLayout } = useLayout();\n\n  const externalLayoutsState = useStoreState(\n    (state) => state.layoutsModel.externalLayouts\n  );\n\n  const onDragEnd = (response: DropResult) => {\n    if (response.destination?.droppableId == response.source?.droppableId)\n      return;\n    const { source, destination, draggableId } = response;\n    console.log(\n      `dragged from ${draggableId} to ${\n        destination?.droppableId\n      } current title: ${\"yes\"}`\n    );\n\n    if (!destination) return;\n    switch (source.droppableId) {\n      case DragSource.CARD_TABLE:\n        if (destination.droppableId) {\n          if (cardIsEmpty(destination.droppableId)) {\n            const cardPos = stringToGridPos(destination.droppableId);\n            const addEvent = {\n              sourceId: draggableId,\n              targetPosition: cardPos,\n            } as CardAddEvent;\n            addCard(addEvent);\n            console.log(\"dropped onto an empty card, adding card\");\n          } else {\n            swapCard({\n              sourceId: draggableId,\n              targetId: destination.droppableId,\n            } as CardSwapEvent);\n          }\n        }\n        break;\n      case DragSource.WIDGETS_TABLE:\n        // console.log(draggableId);\n        // console.log(destination.droppableId);\n        // console.log(\"DRAGGING FROM WIDGETS TABLE\");\n        const cardPos = stringToGridPos(destination.droppableId);\n        const addEvent = {\n          sourceId: draggableId,\n          targetPosition: cardPos,\n        } as CardAddEvent;\n        addWidget(addEvent);\n        break;\n      case DragSource.LAYOUT_TABLE:\n        const newLayout = externalLayoutsState.filter(\n          (l) => l.id === draggableId\n        )[0];\n        setActiveLayout(newLayout);\n        break;\n      default:\n        console.log(\"got unkown drag source\");\n    }\n  };\n\n  return <DragDropContext onDragEnd={onDragEnd}>{children}</DragDropContext>;\n};\n\nexport default AppDragContext;\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst FlexRow = ({\r\n  children,\r\n  padding,\r\n}: {\r\n  children: JSX.Element | JSX.Element[];\r\n  padding?: string;\r\n}): JSX.Element => {\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"row\", padding: padding }}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlexRow;\r\n","import React, { FC, ReactNode } from \"react\";\nimport { Draggable, DraggableProps } from \"react-beautiful-dnd\";\nimport { DndTypes } from \"../../enums\";\n\ninterface DraggableRowProperties extends Omit<DraggableProps, \"children\"> {\n  dndType: DndTypes;\n  className?: string;\n  children: ReactNode;\n  dragAll?: boolean;\n}\n\n/**\n * A draggable table row. Used for dragging card content or layouts into the grid.\n */\nconst DraggableRow = ({\n  dndType,\n  className,\n  children,\n  dragAll,\n  ...properties\n}: DraggableRowProperties) => {\n  // console.log(React.isValidElement(children));sss\n  // console.log(props);\n  if (!React.isValidElement(children)) return <div />;\n  // const child = React.memo(children, []);\n  return (\n    <Draggable {...properties}>\n      {(provided, snapshot) => {\n        const dragHandleProperties = dragAll ? provided.dragHandleProps : {};\n\n        return (\n          <>\n            <tr\n              className={className}\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...dragHandleProperties}\n            >\n              {React.cloneElement(children, { provided })}\n            </tr>\n            <tr\n              style={{\n                display: snapshot.isDragging ? \"table-row\" : \"none\",\n                backgroundColor: snapshot.isDragging ? \"green\" : \"none\",\n              }}\n            >\n              {React.cloneElement(children, { provided })}\n            </tr>\n          </>\n        );\n      }}\n    </Draggable>\n  );\n};\n\nDraggableRow.defaultProps = {\n  dragAll: true,\n};\n\nexport default React.memo(DraggableRow);\n","enum IFrameLoadError {\n  CROSS_ORIGIN = \"CROSS_ORIGIN\",\n}\n\nenum IFrameLoadWarning {\n  MALFORMED_URL = \"MALFORMED_URL\",\n}\n\nclass IFrameValidator {\n  url!: string;\n  errors!: IFrameLoadError[];\n  warnings!: IFrameLoadWarning[];\n  constructor(url: string) {\n    this.errors = [];\n    this.warnings = [];\n    this.url = url;\n  }\n  validate(event: React.SyntheticEvent<HTMLIFrameElement, Event>): void {\n    console.log(this.errors);\n    const malformedUrlCheckArray = validURL(this.url);\n    this.warnings.push(...malformedUrlCheckArray);\n    console.log(malformedUrlCheckArray);\n  }\n  isValid(): boolean {\n    return this.errors.length == 0;\n  }\n  errorMessages(): string[] {\n    let errors: string[] = [];\n    this.errors.map((e) => {\n      switch (e) {\n        case IFrameLoadError.CROSS_ORIGIN:\n          errors.push(\n            `Blocked a frame with origin ${this.url}; from accessing a cross-origin frame.`\n          );\n          break;\n        default:\n          console.log(\"error did not match an error enum\");\n      }\n    });\n    return errors;\n  }\n}\n\nexport default IFrameValidator;\n\n\n\nfunction validURL(str: string): IFrameLoadWarning[] {\n  let warningsArray = [];\n  const pattern = new RegExp(\n    \"^(https?:\\\\/\\\\/)?\" + // protocol\n      \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|\" + // domain name\n      \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\n      \"(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*\" + // port and path\n      \"(\\\\?[;&a-z\\\\d%_.~+=-]*)?\" + // query string\n      \"(\\\\#[-a-z\\\\d_]*)?$\",\n    \"i\"\n  ); // fragment locator\n  if (!pattern.test(str)) {\n    warningsArray.push(IFrameLoadWarning.MALFORMED_URL);\n  }\n  return warningsArray;\n}\n","import React, { useState } from \"react\";\nimport { toTitleCase } from \"../../utils\";\n/**\n * <th> component with a arrow indicating the filter direction\n */\nconst TableHeader = ({\n  headerTitle,\n  setFilter,\n  setFilterDirection,\n  className,\n  activeFilter,\n}: {\n  headerTitle: string;\n  setFilterDirection: (direction: boolean) => void;\n  setFilter: (filter: string) => void;\n  className?: string;\n  activeFilter: string | undefined;\n}): JSX.Element => {\n\n  const [sortDirection, setSortDirection] = useState(true);\n\n  const showSortArrow =  headerTitle === activeFilter\n\n  return (\n    <th\n      className={className ?? \"editor-panel-table-header\"}\n      onClick={() => {\n        setFilter(headerTitle);\n        setSortDirection(!sortDirection);\n        setFilterDirection(sortDirection);\n      }}\n    >\n      {toTitleCase(headerTitle)}\n      {showSortArrow && sortDirection\n        ? \"▲\"\n        : showSortArrow && !sortDirection\n        ? \"▼\"\n        : \"\"}\n    </th>\n  );\n};\n\nexport default TableHeader;\n\n","import \"../../../../css/table.css\";\n\nimport { SearchInput } from \"evergreen-ui\";\nimport fuzzysort from \"fuzzysort\";\nimport React, { useEffect, useState } from \"react\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\n\nimport CardData from \"../../../../data_structs/CardData\";\nimport { DndTypes, DragSource } from \"../../../../enums\";\nimport { useStoreActions, useStoreState } from \"../../../../hooks\";\nimport { formatDate } from \"../../../../utils\";\nimport IXDrop from \"../../../DragAndDrop/IXDrop\";\nimport Button from \"../../../Shared/Button\";\nimport FlexRow from \"../../../Shared/FlexRow\";\nimport XDrag from \"../../../DragAndDrop/DraggableRow\";\nimport TableHeader from \"../../TableHeader\";\n/**\n * Content tab display a list of the availalbe cards, and search bar for quickly finding cards by their title.\n */\n\n//TODO: REFACTOR\n\nconst ContentsTab = (): JSX.Element => {\n  const availableCards = useStoreState(\n    (state) => state.appModel.availableCards\n  );\n  const clearCardsAction = useStoreActions(\n    (actions) => actions.layoutsModel.clearCards\n  );\n  const resetLayoutAction = useStoreActions(\n    (actions) => actions.layoutsModel.resetLayout\n  );\n\n  const [filterKey, setFilterKey] = useState<string | undefined>();\n  const [filterDirection, setFilterDirection] = useState(true);\n  const [cardItems, setCardItems] = useState(availableCards);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [filteredCards, setFilteredCards] =\n    useState<CardData[]>(availableCards);\n\n  //use search input to filter cards\n  useEffect(() => {\n    if (0 < searchTerm.length) {\n      const sortResult = fuzzysort.go(\n        searchTerm,\n        cardItems.map((c) => c.title)\n      );\n      const aboveThreshholdCardTitles: string[] = sortResult.map(\n        (s) => s.target\n      );\n      const filtered = cardItems.filter((c) =>\n        aboveThreshholdCardTitles.includes(c.title)\n      );\n      setFilteredCards(filtered);\n    } else {\n      setFilteredCards(cardItems);\n    }\n  }, [searchTerm, cardItems]);\n\n  //sort values by column attribute, if filterDirection is true, sort descending, else sort ascending\n  useEffect(() => {\n    const key = filterKey as keyof CardData;\n    const clone = [...availableCards];\n\n    const sortedItems = clone.sort((a, b) => {\n      const aText = a[key];\n      const bText = b[key];\n      if (aText && bText) {\n        if (aText < bText) {\n          return -1;\n        }\n        if (bText < aText) {\n          return 1;\n        }\n      }\n      return 0;\n    });\n    !filterDirection ? sortedItems.reverse() : null;\n    setCardItems(sortedItems);\n  }, [filterKey, availableCards, filterDirection]);\n\n  const contentTabHeader = \"contents-table-header\";\n  return (\n    <div className=\"contents-tab-container\">\n      <FlexRow padding=\"0.5em\">\n        <SearchInput\n          onChange={(event: React.FormEvent<HTMLInputElement>) =>\n            setSearchTerm(event.currentTarget.value)\n          }\n          placeholder=\"search title\"\n          width=\"80%\"\n        />\n        <Button\n          appearance=\"default\"\n          intent=\"danger\"\n          onClick={(event) => {\n            resetLayoutAction();\n          }}\n          text=\"Reset Layout\"\n        />\n        <Button\n          appearance=\"minimal\"\n          intent=\"danger\"\n          onClick={(event) => {\n            clearCardsAction();\n          }}\n          // width={\"10%\"}\n          text=\"Clear All\"\n        />\n      </FlexRow>\n      <IXDrop\n        cardType={DndTypes.CLOCK}\n        className=\"table-container\"\n        droppableId={DragSource.CARD_TABLE}\n        isDropDisabled\n      >\n        <table className=\"contents-tab-table\">\n          <tbody>\n            <tr>\n              {[\"title\", \"added\", \"sourceId\", \"author\", \"interaction\"].map(\n                (s, index) => {\n                  return (\n                    <TableHeader\n                      activeFilter={filterKey}\n                      className={contentTabHeader}\n                      headerTitle={s}\n                      key={index}\n                      setFilter={setFilterKey}\n                      setFilterDirection={setFilterDirection}\n                    ></TableHeader>\n                  );\n                }\n              )}\n            </tr>\n          </tbody>\n        </table>\n        <Scrollbars\n          autoHeight\n          autoHeightMax={319}\n          autoHeightMin={100}\n          onScrollFrame={(v) => console.log(v)}\n        >\n          <table style={{ padding: \"2em\" }}>\n            <tbody>\n              {filteredCards.map((card, index) => {\n                const { added, src, author, interaction, sourceId, isActive } =\n                  card;\n                return (\n                  <XDrag\n                    className={\n                      isActive ? \"content-row-active\" : \"content-row-inactive\"\n                    }\n                    dndType={DndTypes.CARD_ROW}\n                    draggableId={sourceId}\n                    index={index}\n                    isDragDisabled={isActive}\n                    key={index.toString()}\n                  >\n                    <>\n                      <td>\n                        <TitleWithIcon card={card} />\n                      </td>\n                      <td>{formatDate(added)}</td>\n                      <td>{src}</td>\n                      <td>{author}</td>\n                      <td>{interaction}</td>\n                    </>\n                  </XDrag>\n                );\n              })}\n            </tbody>\n          </table>\n        </Scrollbars>\n      </IXDrop>\n    </div>\n  );\n};\n\n/**\n * Fetches a favicon for a card and displays the cards title\n */\nconst TitleWithIcon = ({ card }: { card: CardData }): JSX.Element => {\n  return (\n    <div style={{ display: \"flex\" }}>\n      <img\n        className={\n          card.isActive ? \"row-favicon-active\" : \"row-favicon-inactive\"\n        }\n        src={`https://s2.googleusercontent.com/s2/favicons?domain_url=${card.src}`}\n      ></img>\n      <div\n        style={{\n          marginTop: \"auto\",\n          marginBottom: \"auto\",\n          textAlign: \"left\",\n        }}\n      >\n        {card.src}\n      </div>\n    </div>\n  );\n};\n\nexport default ContentsTab;\n","import React from \"react\";\nimport \"../../css/panel.css\";\nimport { AddIcon } from \"evergreen-ui\";\n\ninterface PanelProperties{\n    children: JSX.Element | JSX.Element[]\n    padding?: string;\n    flexDirection?: \"column\" | \"row\"; \n    className?: string;\n\n}\n\nconst Panel = ({children, className, padding, flexDirection}:PanelProperties): JSX.Element => {\n  const panelStyle = {\n      padding: padding??\"0em\",\n      flexDirection: flexDirection??\"column\"\n  } as React.CSSProperties\n\n  return (\n    <div style = {panelStyle} className={\"panel\"+ \" \" + className??\"\"}>\n        {children}\n    </div>\n  );\n};\n\nexport default Panel;\n","import React, { useState, useRef, useEffect } from \"react\";\n//TODO: UNIFY MODAL CSS\nimport \"../../css/howToUse.css\";\nimport \"../../css/popup.css\";\n\nconst Modal = ({\n  children,\n  active,\n  containerClassName,\n  onClose,\n  backdropOpacity,\n}: {\n  active: boolean;\n  children: JSX.Element | JSX.Element[];\n\n  onClose: () => void;\n  backdropOpacity?: number;\n  containerClassName?: string;\n}): JSX.Element => {\n  return (\n    <div\n      className={\"modal-container\"}\n      style={{\n        display: active ? \"flex\" : \"none\",\n        width: \"100vw\",\n        height: \"100vh\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <MyBackdrop onClose={onClose} backdropOpacity={backdropOpacity ?? 0} />\n      <div style={{ zIndex: 1000 }} className={containerClassName}>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n\ninterface BackdropProperties {\n  backdropOpacity: number;\n  onClose: () => void;\n}\nconst MyBackdrop = ({ onClose, backdropOpacity }: BackdropProperties) => {\n  return (\n    <div\n      onMouseUp={onClose}\n      style={{ opacity: backdropOpacity, zIndex: 200 }}\n      className={\"pop-up-background\"}\n    ></div>\n  );\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport ReactDom from \"react-dom\";\nimport \"../../../../css/googleFormPopup.css\";\nimport { Pane, Dialog } from \"evergreen-ui\";\nimport Modal from \"../../../Shared/Modal\";\nimport formEmbedUrl from \"../../../../static/formEmbedUrl\";\nimport { useStoreState } from \"../../../../hooks\";\nimport classNames from \"classnames\";\nimport Button from \"../../../Shared/Button\";\nimport { ClipboardIcon, InlineAlert, CrossIcon, Heading } from \"evergreen-ui\";\nimport \"../../../../css/copyField.css\";\nimport Scrollbars from \"react-custom-scrollbars\";\n\n/**\n * Modal popup for displaying cards when in preview mode. Displays on top of the CardLayout, and renders\n * to <div id=\"google-form-popup\"></div> in index.html.\n * @component\n */\n\ninterface GoogleFormPopupProperties {\n  visible: boolean;\n  onCloseComplete: () => void;\n}\n\nconst GoogleFormPopup = ({\n  visible,\n  onCloseComplete,\n}: GoogleFormPopupProperties): JSX.Element => {\n  const layoutState = useStoreState((state) => state.layoutsModel.activeLayout);\n  // console.log(layoutState?.extendedLayout);\n  // console.log(layoutState?.extendedLayout.layoutSettings);\n\n  const [isShown, setIsShown] = useState(visible);\n  const [isCopiedJSON, setIsCopiedJson] = useState(false);\n  console.log(\"HELLO IM HERE\");\n  // const [layoutString, setLayoutString] = useState(\n  //   JSON.stringify(layoutState?.layout)\n  // );\n\n  // const [layoutString, setLayoutString] = useState(\n  //   JSON.stringify(layoutState?.extendedLayout)\n  // );\n\n  const layoutString = useStoreState((state) =>\n    JSON.stringify(state.layoutsModel.activeLayout)\n  );\n  console.log(layoutString);\n  const copyFieldContainerClass = classNames(\"copy-field-container\", {\n    \"copy-field-container-closed\": isCopiedJSON,\n  });\n\n  return ReactDom.createPortal(\n    <Modal\n      onClose={onCloseComplete}\n      active={isShown}\n      containerClassName=\"google-form-popup\"\n      backdropOpacity={0.5}\n    >\n      <div className={\"google-form-popup-inner-container\"}>\n        <Heading color={isCopiedJSON ? \"green\" : \"\"}>\n          1. Press the Copy Button\n        </Heading>\n        <Heading>\n          {isCopiedJSON\n            ? \"2. Fill out the form, and paste the copied text into the Content field, then submit\"\n            : \"\"}\n        </Heading>\n        <div className={copyFieldContainerClass}>\n          <CopyField\n            onCopy={(e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n              setIsCopiedJson(true);\n            }}\n            onCloseComplete={onCloseComplete}\n            text={layoutString}\n          />\n        </div>\n      </div>\n      {isCopiedJSON ? <GoogleFormIframe src={formEmbedUrl} /> : <></>}\n    </Modal>,\n    document.querySelector(\"#google-form-popup\") as HTMLElement\n  );\n};\nexport default GoogleFormPopup;\n//TODO: IMPROVE INHERITANCE OF BUTTONS\nconst CopyField = ({\n  text,\n  onCloseComplete,\n  onCopy,\n  isCurrentClipBoardContent,\n}: {\n  text: string;\n  isCurrentClipBoardContent?: boolean;\n  onCloseComplete: () => void;\n  onCopy: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n}): JSX.Element => {\n  const [isClipBoardCorrect, setIsClipBoardCorrect] = useState(false);\n  const [isCopied, setIsCopied] = useState(false);\n\n  const copyFieldClass = classNames(\"copy-field\", {\n    \"copy-field-success\": isCopied && isClipBoardCorrect,\n    \"copy-field-failure\": !isCopied && !isClipBoardCorrect,\n  });\n\n  useEffect(() => {\n    navigator.clipboard\n      .readText()\n      .then((clipboardText) => {\n        if (text === clipboardText) {\n          setIsClipBoardCorrect(true);\n          setIsCopied(true);\n        } else {\n          setIsCopied(false);\n          setIsClipBoardCorrect(false);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Failed to read clipboard contents:\", error);\n      });\n  }, [text]);\n  return (\n    <div>\n      <Button\n        iconBefore={<ClipboardIcon />}\n        text={\"Copy Layout To Clip Board\"}\n        onClick={(e) => {\n          navigator.clipboard.writeText(text);\n          setIsCopied(true);\n          onCopy(e);\n        }}\n        width={\"100%\"}\n        intent={\"success\"}\n        appearance={\"primary\"}\n      />\n      {!isClipBoardCorrect ? (\n        <InlineAlert intent=\"warning\">\n          Current clipboard content is out of sync with current layout, copy the\n          layout to clipboard again.\n        </InlineAlert>\n      ) : (\n        <InlineAlert intent=\"success\">Clipboard is current</InlineAlert>\n      )}\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          paddingTop: \"1em\",\n        }}\n      >\n        <Button\n          iconBefore={<CrossIcon />}\n          text={\"Return\"}\n          onClick={onCloseComplete}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst GoogleFormIframe = ({ src }: { src: string }): JSX.Element => {\n  return (\n    <iframe\n      src={src}\n      className={\"google-form-iframe\"}\n      width={\"100%\"}\n      frameBorder={0}\n      marginHeight={0}\n      marginWidth={0}\n      // style={{ height: \"60em\" }}\n    ></iframe>\n  );\n};\n","const formEmbedUrl =\n  \"https://docs.google.com/forms/d/e/1FAIpQLSeKP2imQv_UCj4qrGNk7mT6Rzz83F30IvEl8ZFdERIdzSnvig/viewform?usp=sf_link\";\n\nexport default formEmbedUrl;\n","import React, { useState, useEffect } from \"react\";\nimport { useStoreState, useStoreActions } from \"../../../../hooks\";\nimport IXDrop from \"../../../DragAndDrop/IXDrop\";\nimport XDrag from \"../../../DragAndDrop/DraggableRow\";\nimport { DndTypes, DragSource } from \"../../../../enums\";\nimport { StatusIndicator } from \"evergreen-ui\";\nimport { formatDate } from \"../../../../utils\";\nimport \"../../../../css/table.css\";\n/**\n * Table for displaying the available card layouts\n * @returns\n */\n\nconst LayoutTable = (): JSX.Element => {\n  const externalLayoutsState = useStoreState(\n    (state) => state.layoutsModel.externalLayouts\n  );\n  const activeLayoutState = useStoreState(\n    (state) => state.layoutsModel.activeLayout\n  );\n\n  const setActiveLayoutAction = useStoreActions(\n    (actions) => actions.layoutsModel.setActiveLayout\n  );\n  return (\n    <div>\n      <IXDrop\n        className={\"table-container\"}\n        droppableId={DragSource.LAYOUT_TABLE}\n        isDropDisabled={false}\n        cardType={DndTypes.CLOCK}\n      >\n        <table>\n          <tbody>\n            <tr>\n              <th>Title</th>\n              <th>Date Added</th>\n              <th>Author</th>\n            </tr>\n          </tbody>\n        </table>\n        <table>\n          <tbody>\n            {externalLayoutsState.map((l, index) => {\n              const { id, title, author, added } = l;\n              return (\n                <tr key={index} onClick={(e) => setActiveLayoutAction(l)}>\n                  <td key={index}>\n                    {id === activeLayoutState?.id ? (\n                      <StatusIndicator color=\"success\" />\n                    ) : (\n                      <></>\n                    )}\n                    {title}\n                  </td>\n                  <td>{formatDate(added)}</td>\n                  <td>{author}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </IXDrop>\n    </div>\n  );\n};\n\nexport default LayoutTable;\n","import {\n  AddIcon,\n} from \"evergreen-ui\";\nimport React, { FC,useEffect, useState } from \"react\";\n\nimport { useStoreActions,useStoreState } from \"../../../../hooks\";\nimport formEmbedUrl from \"../../../../static/formEmbedUrl\";\nimport Button from \"../../../Shared/Button\";\nimport Panel from \"../../../Shared/Panel\"; \nimport GoogleFormPopup from \"./GoogleFormPopup\";\nimport LayoutTable from \"./LayoutTable\";\n\nconst LayoutTab = (): JSX.Element => {\n  const layoutState = useStoreState((state) => state.layoutsModel.activeLayout);\n  const bufferState = useStoreState((state) => state.layoutsModel.bufferLayout);\n  const [showNewLayoutPopup, setShowNewLayoutPopup] = useState(false);\n  const fetchCardDataGoogleSheetThunk = useStoreActions(\n    (actions) => actions.googleSheetsModel.fetchAppGoogleSheet\n  );\n  const [layoutString, setLayoutString] = useState(JSON.stringify(layoutState));\n  useEffect(() => {\n    setLayoutString(JSON.stringify(bufferState));\n  }, [layoutState, bufferState]);\n\n\n  const newLayoutPopup = (): JSX.Element =>{\n    return showNewLayoutPopup ? <GoogleFormPopup\n      onCloseComplete={() => {\n        //reload the layouts after closing the add layout dialog\n        fetchCardDataGoogleSheetThunk()\n        setShowNewLayoutPopup(false);\n      }}\n      visible={showNewLayoutPopup}\n                                /> : <></>;\n  }\n  return (\n      <Panel>\n      <div style={{ display: \"flex\", justifyContent: \"center\", width: \"100%\", padding:\".5em\" }}>\n        <Button\n          iconBefore={<AddIcon />}\n          onClick={(e) => {\n            setShowNewLayoutPopup(true);\n          }}\n          text=\"Add New Layout\"\n          width=\"90%\"\n          intent=\"success\"\n          appearance=\"primary\"\n        />\n      </div>\n      {\n        newLayoutPopup()\n      }\n      <div>\n        <LayoutTable />\n      </div>\n      </Panel>\n  );\n};\n\nexport default LayoutTab;\n","import React, { ReactNode, useEffect } from \"react\";\nimport { Draggable, DraggableProps } from \"react-beautiful-dnd\";\n\nimport { DndTypes } from \"../../enums\";\nimport { useStoreState } from \"../../hooks\";\n\ninterface DraggableDiv extends Omit<DraggableProps, \"children\"> {\n  dndType: DndTypes;\n  className?: string;\n  children: ReactNode;\n  dragAll?: boolean;\n}\n\n/**\n * A draggable div for wrapping draggable widgets in the editor panel.\n */\nconst DraggableWidget = ({\n  dndType,\n  className,\n  children,\n  dragAll,\n  draggableId,\n  index,\n}: DraggableDiv): JSX.Element => {\n  const currentLayoutState = useStoreState(\n    (state) => state.layoutsModel.activeLayout\n  );\n\n  let isInLayout = currentLayoutState?.layout.lg\n    .map((l) => l.i)\n    .includes(draggableId);\n\n  useEffect(() => {\n    isInLayout = currentLayoutState?.layout.lg\n      .map((l) => l.i)\n      .includes(draggableId);\n  }, [currentLayoutState]);\n  const getItemStyle = () => ({\n    display: isInLayout ? \"none\" : \"block\",\n  });\n\n  if (!React.isValidElement(children)) return <div />;\n  return (\n    <div style={{ display: isInLayout ? \"none\" : \"block\" }}>\n      <Draggable draggableId={draggableId} index={index}>\n        {(provided, snapshot) => {\n          console.log(isInLayout);\n          return (\n            <div\n              className={className}\n              ref={provided.innerRef}\n              style={getItemStyle()}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              {React.cloneElement(children, { provided })}\n            </div>\n          );\n        }}\n      </Draggable>\n    </div>\n  );\n};\n\nexport default DraggableWidget;\n","import \"../../../../css/table.css\";\n\nimport React, { useEffect } from \"react\";\n\nimport { DndTypes, DragSource } from \"../../../../enums\";\nimport DraggableDiv from \"../../../DragAndDrop/DraggableWidget\";\nimport IXDrop from \"../../../DragAndDrop/IXDrop\";\nimport Clock from \"../../../Widgets/Clock\";\nimport { useStoreState } from \"../../../../hooks\";\n/**\n * Table for displaying the available card layouts\n */\n\nconst WidgetsTab = (): JSX.Element => {\n  const currentLayoutState = useStoreState(\n    (state) => state.layoutsModel.activeLayout\n  );\n\n  // console.log(\"ADDING WIDGET AT LAYOUT DATA\", toAdd);\n  // console.log(this.layout);\n  // const lg = Object.entries(this.layout)[0][1];\n  // if (lg.map(l=>l.i).includes(toAdd.id)){\n  //   console.log(\"ADDING A WIDGET THAT'S ALREADY PRESENT\");\n  // }\n  // for (const [k, v] of Object.entries(this.layout)) {\n  //   const newItem: Layout = {\n  //     x: pos.x,\n  //     y: pos.y,\n  //     w: 1,\n  //     h: 1,\n  //     i: toAdd.id,\n  //   };\n  //   this.layout[k].push(newItem);\n  // }\n\n  return (\n    <div>\n      <IXDrop\n        cardType={DndTypes.CLOCK}\n        className=\"table-container\"\n        droppableId={DragSource.WIDGETS_TABLE}\n        isDropDisabled={false}\n      >\n        <DraggableDiv\n          className=\"draggable-widget\"\n          dndType={DndTypes.WIDGET}\n          draggableId=\"clock\"\n          index={0}\n          isDragDisabled={false}\n        >\n          <Clock />\n        </DraggableDiv>\n        <DraggableDiv\n          className=\"draggable-widget\"\n          dndType={DndTypes.WIDGET}\n          draggableId=\"info\"\n          index={1}\n          isDragDisabled={false}\n        >\n          <button>HELLO</button>\n        </DraggableDiv>\n      </IXDrop>\n    </div>\n  );\n};\n\nexport default WidgetsTab;\n","import React from \"react\";\nimport { Heading } from \"evergreen-ui\";\nimport \"../../css/editorPanel.css\";\nimport ContentTab from \"./EditorTabs/ContentsTab/ContentsTab\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\nimport LayoutTab from \"./EditorTabs/LayoutTab/LayoutTab\";\nimport WidgetsTab from \"./EditorTabs/WidgetsTab/WidgetsTab\";\n// https://github.com/goodoldneon/react-drag-and-dock#api\n\nconst Editor = (): JSX.Element => {\n  return (\n      <Tabs>\n        <TabList>\n          <Tab>Content</Tab>\n          <Tab>Widgets</Tab>\n          <Tab>Layouts</Tab>\n        </TabList>\n        <TabPanel>\n          <ContentTab />\n        </TabPanel>\n        <TabPanel>\n          <WidgetsTab />\n        </TabPanel>\n        <TabPanel>\n          <LayoutTab />\n        </TabPanel>\n      </Tabs>\n  );\n};\n\nexport default Editor;\n","import \"../../css/editorPanel.css\";\n\nimport classNames from \"classnames\";\nimport { MinusIcon,PlusIcon } from \"evergreen-ui\";\nimport React, { useState } from \"react\";\nimport ReactDom from \"react-dom\";\nimport Draggable from \"react-draggable\";\n\nimport { AppMode } from \"../../enums\";\nimport { useStoreState } from \"../../hooks\";\nimport Editor from \"./Editor\";\n\n/**Draggable panel which contains the editor body, as well as a header bar with a min/max button for resizing the panel. Renders to \"editor-panel-container\" div in index.html*/\n\nconst EditorPanel = (): JSX.Element => {\n  const viewModeState = useStoreState((state) => state.appModel.appMode);\n\n  const [minimized, setMinimized] = useState(false);\n\n  const editorPanelClass = classNames(\"editor-panel\", {\n    \"editor-panel-full\": !minimized,\n    hidden: viewModeState === AppMode.DISPLAY,\n    \"editor-panel-minimized\": minimized,\n  });\n  const editorClass = classNames(\"editor\", {\n    \"editor-visible\": viewModeState === AppMode.EDIT,\n  });\n\n  return ReactDom.createPortal(\n      <Draggable\n        bounds = {{left: 0, top: 0, right: window.innerWidth-50, bottom: window.innerHeight-50}}\n        defaultClassName={editorPanelClass}\n        defaultPosition={{ x: 100, y: 100 }}\n        handle=\".editor-panel-handle\"\n      >\n        <div className={editorClass}>\n          <PanelHeader>\n            <BarButton\n              icon={<PlusIcon />}\n              onMouseUp={() => {\n                setMinimized(false);\n              }}\n            />\n            <BarButton\n              icon={<MinusIcon />}\n              onMouseUp={() => {\n                setMinimized(true);\n              }}\n            />\n          </PanelHeader>\n          <Editor />\n        </div>\n      </Draggable>,\n    document.querySelector(\"#editor-panel-container\") as HTMLDivElement\n  );\n};\n\nexport default EditorPanel;\n\ninterface PanelHeaderProperties {\n  children: JSX.Element | JSX.Element[];\n}\nconst PanelHeader = ({ children }: PanelHeaderProperties): JSX.Element => {\n  return <div className=\"editor-panel-handle panel-header\">{children}</div>;\n};\n\nconst BarButton = ({\n  icon,\n  onMouseUp,\n}: {\n  icon: JSX.Element;\n  onMouseUp: React.MouseEventHandler<HTMLDivElement>;\n}): JSX.Element => {\n  return (\n    <div className=\"window-button\" onMouseUp={onMouseUp}>\n      {icon}\n    </div>\n  );\n};\n","import \"../../css/howToUse.css\";\n\nimport { Heading, Text } from \"evergreen-ui\";\nimport { motion } from \"framer-motion\";\nimport React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Modal from \"../Shared/Modal\";\nimport Panel from \"../Shared/Panel\";\n\nconst HowToUsePopUp = ({\n  active,\n  onClose,\n}: {\n  active: boolean;\n  onClose: () => void;\n}): JSX.Element => {\n  const variants = {\n    hidden: {\n      y: 100,\n      opacity: 0,\n    },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        duration: 0.5,\n      },\n    },\n  };\n\n  useEffect(() => {\n    console.log(active);\n  }, [active]);\n  return ReactDOM.createPortal(\n    <Modal\n      active={active}\n      // containerClassName=\"how-to-use-popup\"\n      onClose={onClose}\n      backdropOpacity={0}\n    >\n      <motion.div\n        variants={variants}\n        style={{\n          width: \"30vw\",\n          height: \"80vh\",\n          backgroundColor: \"white\",\n          borderRadius: 10,\n          padding: \"1em\",\n        }}\n        animate={active ? \"visible\" : \"hidden\"}\n      >\n        <Panel>\n          <Heading>Connect Labtop</Heading>\n          <hr></hr>\n          <Text>Connect your labtop to use this screen as a display.</Text>\n          <img\n            className=\"how-to-image\"\n            src={process.env.PUBLIC_URL + \"/labtopdiagram.png\"}\n          />\n          <Heading>Explore Content</Heading>\n          <hr></hr>\n          <Text>Click on a card to explore data related content.</Text>\n          <img\n            className=\"how-to-image\"\n            src={process.env.PUBLIC_URL + \"/masonary.png\"}\n          />\n        </Panel>\n      </motion.div>\n    </Modal>,\n    document.getElementById(\"popup-container\") as HTMLDivElement\n  );\n};\n\nexport default HowToUsePopUp;\n","import \"../../css/howToUse.css\";\r\n\r\nimport classNames from \"classnames\";\r\nimport { HandUpIcon, Heading, InfoSignIcon, Text } from \"evergreen-ui\";\r\nimport { motion } from \"framer-motion\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { AppMode } from \"../../enums\";\r\nimport { useApp, useStoreState, useToggle } from \"../../hooks\";\r\nimport Button from \"../Shared/Button\";\r\nimport HowToUsePopUp from \"./HowToUsePopUp\";\r\n\r\nconst HowToUse = (): JSX.Element => {\r\n  const [visible, toggleVisible] = useToggle(false);\r\n\r\n  const { appMode } = useApp();\r\n\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      {appMode === AppMode.DISPLAY && (\r\n        <HowToUsePopUp active={visible} onClose={toggleVisible} />\r\n      )}\r\n      {appMode === AppMode.DISPLAY && (\r\n        <Button\r\n          appearance=\"primary\"\r\n          className=\"how-to-use-button\"\r\n          fontSize=\"xx-large\"\r\n          height=\"4vh\"\r\n          iconBefore={<HandUpIcon />}\r\n          onClick={toggleVisible}\r\n          text=\"Learn how to use this display\"\r\n          width=\"35vw\"\r\n        />\r\n      )}\r\n    </>,\r\n    document.querySelector(\"#how-to-use-button\") as HTMLDivElement\r\n  );\r\n};\r\n\r\nexport default HowToUse;\r\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useStoreActions } from \"../hooks\";\nimport {useLongPress} from \"react-use\"\nimport appConfig from \"../static/appConfig\";\n\n/**Invisible button in the bottom left corner of the screen. Hold touch/click to toggle app mode */\nconst ModeChangeButton = (): JSX.Element => {\n  const toggleModeAction = useStoreActions((actions)=>actions.appModel.toggleAppMode)\n\n  const longPressEvent = useLongPress(()=>{toggleModeAction()})\n\n  const modeChangeButtonStyle = {\n      position: \"absolute\",\n      width: 50, \n      height: 50, \n      border: appConfig.showModeSwitchButton?\"1px solid red\":\"none\",\n      bottom: 0,\n      left: 0, \n  } as React.CSSProperties\n  return ReactDOM.createPortal(\n    <div style ={modeChangeButtonStyle} {...longPressEvent}>\n    </div>, document.querySelector(\"#mode-change-button\") as HTMLElement\n  );\n};\n\nexport default ModeChangeButton;\n\n\n","import React, { useState, useEffect } from \"react\";\n\nconst Screen = ({\n  children,\n  padding,\n}: {\n  children: JSX.Element | JSX.Element[];\n  padding?: string;\n}): JSX.Element => {\n  return (\n    <div style={{width: \"100vw\", height: \"100vh\"}}>\n      {children}\n    </div>\n  );\n};\n\nexport default Screen;\n","import \"./App.global.css\";\nimport \"./css/global.css\";\n\nimport { DndContext } from \"@dnd-kit/core\";\nimport React, { useEffect } from \"react\";\nimport { useIdle, useInterval } from \"react-use\";\n\nimport Background from \"./components/Background\";\nimport CardGrid from \"./components/CardLayout/CardLayout\";\nimport AppDragContext from \"./components/DragAndDrop/AppDragContext\";\nimport EditorPanel from \"./components/EditorPanel/EditorPanel\";\nimport HowToUse from \"./components/HowToUse/HowToUse\";\nimport ModeChangeButton from \"./components/ModeChangeButton\";\nimport Screen from \"./components/Shared/Screen\";\nimport { AppMode } from \"./enums\";\nimport { useApp, useEffectOnce, useLayout, useStoreActions } from \"./hooks\";\nimport appConfig from \"./static/appConfig\";\n\n/**\n * High level container, the root component. Initial fetch requests to spreadsheets are made here via a useEffect hook.\n */\n\nconst App = (): JSX.Element => {\n  const isIdle = useIdle(appConfig.idleTime, false);\n\n  const fetchTopLevelSheetThunk = useStoreActions(\n    (actions) => actions.googleSheetsModel.fetchTopLevelSheet\n  );\n\n  const { setRandomLayout, activeLayout } = useLayout();\n\n  const { appMode, toggleAppMode } = useApp();\n\n  useInterval(() => {\n    if (appMode === AppMode.DISPLAY) {\n      setRandomLayout();\n    }\n  }, appConfig.rotationDuration);\n\n  useEffect(() => {\n    if (appMode === AppMode.EDIT) {\n      toggleAppMode();\n    }\n  }, [isIdle]);\n\n  useEffectOnce(() => {\n    fetchTopLevelSheetThunk();\n  });\n\n  return (\n    <>\n      <HowToUse />\n      <Background />\n      <ModeChangeButton />\n      <AppDragContext>\n        <EditorPanel />\n        <Screen>\n          <DndContext>\n            <CardGrid />\n          </DndContext>\n        </Screen>\n      </AppDragContext>\n    </>\n  );\n};\n\nexport default App;\n","import { InteractionType } from \"../enums\";\nimport IFrameValidator from \"../IFrameValidator\";\nimport type RawCardRow from \"../interfaces/RawCardRow\";\nimport { WidgetType } from \"./WidgetData\";\n\n\nexport type ContentType = \"video\"|\"image\"|\"website\"|\"embed\"|\"widget\"\n\ninterface ContentCardData{\n  src: string;\n  title: string;\n  added: Date;\n  sourceId: string;\n  author: string;\n}\n\ninterface WidgetCardData{\n  widgetType: WidgetType;\n}\n/**Contains all the information needed to create a display card */\nexport default class CardData {\n  readonly id: string;\n  readonly src: string;\n  readonly title: string;\n  readonly added?: Date;\n  readonly sourceId: string;\n  readonly author: string;\n  readonly interaction: InteractionType;\n  readonly contentType: ContentType;\n  readonly metaData: ContentCardData | WidgetCardData;\n  validator!: IFrameValidator;\n  isActive!: boolean;\n  failed!: boolean;\n\n  constructor(row: RawCardRow) {\n    // console.log(`GOT IMAGE CARD ROW: ${isImgLink(row.src)}`);\n    this.id = row.src\n    this.src = row.src;\n    this.title = row.title;\n    this.added = new Date(row.added);\n    this.sourceId = row.src;\n    this.author = row.author;\n    this.interaction =\n      InteractionType[row.interaction as keyof typeof InteractionType];\n    this.contentType = getContentType(this.src)\n    if (this.contentType === \"widget\" && row.widgetType){\n      this.metaData = {\n        widgetType: row.widgetType\n      }\n      this.id = row.widgetType\n    } else {\n      this.metaData = {\n        src: row.src,\n        title: row.title,\n        added: new Date(row.added),\n        sourceId: row.src,\n        author: row.author,\n      }\n      this.id = row.src\n    }\n\n    this.isActive = false;\n    this.validator = new IFrameValidator(this.src);\n    this.failed = false;\n\n    // if ()\n  }\n  setActive(b: boolean): void {\n    this.isActive = b;\n  }\n\n  fail(): void {\n    console.log(this.validator.errors);\n    this.failed = true;\n    // this.error =\n  }\n}\n \n\nfunction getContentType(url: string): ContentType{\n  if (isImgLink(url) ) return \"image\"\n  if (isVideo(url) ) return \"video\"\n  if (isEmbed(url) ) return \"embed\" \n  if (isWebsite(url)) return \"website\"\n  return \"widget\"\n\n}\n\nfunction isImgLink(url: string) {\n  if (typeof url !== \"string\") return false;\n  const imageReg = /[./](gif|jpg|jpeg|tiff|png)$/i;\n  return (\n    imageReg.test(url)\n  );\n}\n\nfunction isVideo(url: string){\n  if (typeof url !== \"string\") return false;\n  const videoReg = /[./](mp4|webm|mov)$/i;\n  return (\n    videoReg.test(url)\n    // url.match(/^http[^\\?]*.(jpg|jpeg|gif|png|tiff|bmp)(\\?(.*))?$/gim) != null\n  );\n}\n\nfunction isEmbed(url: string){\n  if (typeof url !== \"string\") return false;\n  return url.includes(\"embed\")\n}\n\nfunction isWebsite(url: string){\n  if (typeof url !== \"string\") return false;\n  return url.includes(\"https\")\n}","import { ContentType } from \"./CardData\";\n\nexport type WidgetType = \"clock\"|\"group label\"|\"info\"\n\ninterface WidgetCardData{\n  widgetType: WidgetType;\n}\n/**Contains all the information needed to create a display card */\nexport default class WidgetData {\n  readonly id: string;\n  readonly contentType: ContentType\n  isActive: boolean;\n\n\n  constructor(name: WidgetType) {\n    this.id = name as string\n    this.isActive = false;\n    this.contentType = \"widget\"\n  }\n  setActive(b: boolean): void {\n    this.isActive = b;\n  }\n\n}\n \n","import {\r\n  Action,\r\n  action,\r\n  debug,\r\n  Thunk,\r\n  thunk,\r\n  ThunkOn,\r\n  thunkOn,\r\n} from \"easy-peasy\";\r\n// import type {Action, Thunk, ThunkOn} from \"easy-peasy/types\"\r\nimport { Layouts } from \"react-grid-layout\";\r\n\r\nimport CardData from \"../data_structs/CardData\";\r\nimport WidgetData, { WidgetType } from \"../data_structs/WidgetData\";\r\nimport type { SheetNames } from \"../enums\";\r\nimport { AppMode } from \"../enums\";\r\nimport type RawCardRow from \"../interfaces/RawCardRow\";\r\nimport appConfig from \"../static/appConfig\";\r\nimport defaultGridLayout from \"../static/defaultStaticLayout\";\r\nimport { StoreModel } from \"./index\";\r\n/**\r\n * Core app model\r\n * @param\r\n */\r\nexport interface AppDataModel {\r\n  //state\r\n  availableCards: CardData[];\r\n  availableWidgets: WidgetData[];\r\n  activeWidgets: WidgetData[];\r\n  activeCards: CardData[];\r\n  rotationSpeed: number;\r\n  // currentLayout: Layouts;\r\n  appMode: AppMode;\r\n\r\n  //listeners\r\n  onCardSheetLoadSuccess: ThunkOn<AppDataModel, never, StoreModel>;\r\n  onSwapCardContent: ThunkOn<AppDataModel, never, StoreModel>;\r\n  onSetActiveLayout: ThunkOn<AppDataModel, never, StoreModel>;\r\n  //managers\r\n  manageViewModeChange: Thunk<AppDataModel, AppMode>;\r\n  toggleAppMode: Thunk<AppDataModel, never>;\r\n  //simple setters\r\n  setAppMode: Action<AppDataModel, AppMode>;\r\n  // setCurrentLayout: Action<AppDataModel, Layouts>;\r\n  setActiveCards: Action<AppDataModel, CardData[]>;\r\n  setActiveWidgets: Action<AppDataModel, WidgetData[]>;\r\n  setAvailableCards: Action<AppDataModel, CardData[]>;\r\n  registerCardLoadFailure: Thunk<AppDataModel, CardData, never, StoreModel>;\r\n}\r\n\r\nconst availableWidgets = appConfig.widgetIds.map(\r\n  (n) => new WidgetData(n as WidgetType)\r\n);\r\n\r\nconst appModel: AppDataModel = {\r\n  //state\r\n  availableCards: [],\r\n  availableWidgets: availableWidgets,\r\n  activeWidgets: [],\r\n  activeCards: [],\r\n  rotationSpeed: appConfig.rotationDuration,\r\n  // currentLayout: defaultGridLayout.layout,\r\n  appMode: AppMode.DISPLAY,\r\n  // localStorageLayouts: [],\r\n\r\n  //managers\r\n  /**Control side effects for altering the view state of the app, and dispatch a setter for the state */\r\n  manageViewModeChange: thunk((actions, viewModeEnum) => {\r\n    // console.log(viewModeEnum);\r\n    actions.setAppMode(viewModeEnum);\r\n    switch (viewModeEnum) {\r\n      case AppMode.EDIT:\r\n        break;\r\n      case AppMode.DISPLAY:\r\n        break;\r\n      case AppMode.CYCLE:\r\n        break;\r\n      default:\r\n        console.log(\"reached default in set view mode thunk\");\r\n    }\r\n  }),\r\n  toggleAppMode: thunk((actions, _, { getState }) => {\r\n    // console.log(\"toggling view mod \");\r\n\r\n    switch (getState().appMode) {\r\n      case AppMode.EDIT:\r\n        actions.setAppMode(AppMode.DISPLAY);\r\n        break;\r\n      case AppMode.DISPLAY:\r\n        actions.setAppMode(AppMode.EDIT);\r\n        break;\r\n      case AppMode.CYCLE:\r\n        break;\r\n      default:\r\n        console.log(\"reached default in set view mode thunk\");\r\n    }\r\n    console.log(getState().appMode);\r\n  }),\r\n  setAvailableCards: action((state, cardDataArray) => {\r\n    // console.log(\"setting available cards\");\r\n    state.availableCards = cardDataArray;\r\n  }),\r\n  setActiveCards: action((state, cardDataArray) => {\r\n    // console.log(cardDataArray);\r\n    state.activeCards = cardDataArray;\r\n  }),\r\n  setActiveWidgets: action((state, widgetDataArray) => {\r\n    // console.log(widgetDataArray);\r\n    state.activeWidgets = widgetDataArray;\r\n  }),\r\n  setAppMode: action((state, viewModeEnum) => {\r\n    // console.log(\"setting view mode\");\r\n    state.appMode = viewModeEnum;\r\n  }),\r\n\r\n  //listeners\r\n  onCardSheetLoadSuccess: thunkOn(\r\n    // targetResolver:\r\n    (actions, storeActions) =>\r\n      storeActions.googleSheetsModel.setAppGoogleSheetData,\r\n    // handler:\r\n    async (actions, target) => {\r\n      console.log(\"TRIGGERD\");\r\n      // console.log(\"got on card sheet load success\");\r\n      console.log(target.payload);\r\n      target.payload.getSheetRows<RawCardRow>(\"CARDS\").then((rows) => {\r\n        console.log(rows);\r\n        const rawCardRowsArray = rows.map((row) => {\r\n          return {\r\n            src: row.src,\r\n            title: row.title,\r\n            added: row.added,\r\n            sourceid: row.sourceid,\r\n            author: row.author,\r\n            interaction: row.interaction,\r\n          } as RawCardRow;\r\n        });\r\n\r\n        const cards = rawCardRowsArray.map((c: RawCardRow) => new CardData(c));\r\n        // console.log(cards);\r\n        // actions.setActiveCards(cards)\r\n        actions.setAvailableCards(cards);\r\n      });\r\n    }\r\n  ),\r\n  onSetActiveLayout: thunkOn(\r\n    (actions, storeActions) => storeActions.layoutsModel.setActiveLayout,\r\n    async (actions, layout, { getState }) => {\r\n      // console.log(layout.);\r\n      // console.log(\"SETTING ACTIVE LAYOUT\");\r\n      const activeSourceIds = new Set(layout.payload.sources());\r\n      // console.log(layout.payload);\r\n      // console.log(layout.payload.layoutWidgets);\r\n      const activeWidgetIds = new Set(\r\n        layout.payload.layoutWidgets.map((w) => w.id) ?? []\r\n      );\r\n      // console.log(\"ACTIVE WIDGET IDS\", activeWidgetIds);\r\n\r\n      const availableCardsUpdated = getState().availableCards.map((card) => {\r\n        if (activeSourceIds.has(card.sourceId)) {\r\n          card.setActive(true);\r\n        } else {\r\n          card.setActive(false);\r\n        }\r\n        return card;\r\n      });\r\n      const activeCards = getState().availableCards.filter((card) => {\r\n        return activeSourceIds.has(card.sourceId);\r\n      });\r\n      // console.log(object);\r\n      // availableWidgets = layout.payload.layout.\r\n      const activeWidgets = availableWidgets.filter((card) => {\r\n        return activeWidgetIds.has(card.id);\r\n      });\r\n      actions.setAvailableCards(availableCardsUpdated);\r\n      actions.setActiveCards(activeCards);\r\n      console.log(activeWidgets);\r\n      actions.setActiveWidgets(activeWidgets);\r\n    }\r\n  ),\r\n  registerCardLoadFailure: thunk(\r\n    (actions, failedCard, { getState, getStoreState }) => {\r\n      console.log(\"Got card Register Load Failure at Layouts Model\");\r\n      console.log(failedCard);\r\n      const { activeCards } = getState();\r\n      const failedId = failedCard.sourceId;\r\n      const newCards = activeCards.map((c) => {\r\n        if (c.sourceId === failedId) {\r\n          console.log(\"found failed\");\r\n          c.fail();\r\n        }\r\n        return c;\r\n      });\r\n      actions.setActiveCards(newCards);\r\n    }\r\n  ),\r\n  onSwapCardContent: thunkOn(\r\n    (actions, storeActions) => storeActions.layoutsModel.swapCardContent,\r\n    async (actions, payload, { getState }) => {\r\n      console.log(\"got swap card content\");\r\n      console.log(payload.payload);\r\n      console.log(getState().activeCards);\r\n      const newCards = getState().activeCards.map((c) => {\r\n        if (c.sourceId === payload.payload.targetId) {\r\n          const newSource = getState().availableCards.find(\r\n            (c) => c.sourceId === payload.payload.sourceId\r\n          );\r\n          console.log(newSource);\r\n          return newSource;\r\n        } else {\r\n          return c;\r\n        }\r\n      });\r\n      if (newCards) {\r\n        actions.setActiveCards(newCards as CardData[]);\r\n      }\r\n      console.log(debug(payload));\r\n    }\r\n  ),\r\n};\r\n\r\nexport default appModel;\r\n","import { ExtendedLayout, GridSettings, LayoutSettings } from \"../data_structs/LayoutData\"\n\nconst layout = { \"lg\": [{ \"w\": 2, \"h\": 1, \"x\": 0, \"y\": 0, \"i\": \"clock\", \"moved\": false, \"static\": true }, { \"w\": 2, \"h\": 2, \"x\": 2, \"y\": 0, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/DuBois_Racism.png\", \"moved\": false, \"static\": false }, { \"w\": 1, \"h\": 2, \"x\": 0, \"y\": 1, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/VideoGames.jpeg\", \"moved\": false, \"static\": false }], \"md\": [{ \"w\": 2, \"h\": 1, \"x\": 0, \"y\": 0, \"i\": \"clock\", \"moved\": false, \"static\": true }, { \"w\": 2, \"h\": 2, \"x\": 2, \"y\": 0, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/DuBois_Racism.png\", \"moved\": false, \"static\": false }, { \"w\": 1, \"h\": 2, \"x\": 0, \"y\": 1, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/VideoGames.jpeg\", \"moved\": false, \"static\": false }], \"sm\": [{ \"w\": 2, \"h\": 1, \"x\": 0, \"y\": 0, \"i\": \"clock\", \"moved\": false, \"static\": true }, { \"w\": 2, \"h\": 2, \"x\": 2, \"y\": 0, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/DuBois_Racism.png\", \"moved\": false, \"static\": false }, { \"w\": 1, \"h\": 2, \"x\": 0, \"y\": 1, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/VideoGames.jpeg\", \"moved\": false, \"static\": false }], \"xs\": [{ \"w\": 2, \"h\": 1, \"x\": 0, \"y\": 0, \"i\": \"clock\", \"moved\": false, \"static\": true }, { \"w\": 2, \"h\": 2, \"x\": 2, \"y\": 0, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/DuBois_Racism.png\", \"moved\": false, \"static\": false }, { \"w\": 1, \"h\": 2, \"x\": 0, \"y\": 1, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/VideoGames.jpeg\", \"moved\": false, \"static\": false }], \"xxs\": [{ \"w\": 2, \"h\": 1, \"x\": 0, \"y\": 0, \"i\": \"clock\", \"moved\": false, \"static\": true }, { \"w\": 2, \"h\": 2, \"x\": 2, \"y\": 0, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/DuBois_Racism.png\", \"moved\": false, \"static\": false }, { \"w\": 1, \"h\": 2, \"x\": 0, \"y\": 1, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/VideoGames.jpeg\", \"moved\": false, \"static\": false }] }\n\nconst gridSettings: GridSettings = {\n    defaultBackgroundColor: \"red\"\n}\nconst layoutSettings: LayoutSettings  = {\n    gridSettings: gridSettings,\n    cardSettings: [],\n}\n\nconst extendedLayoutTest: ExtendedLayout = {\n    layout: layout,\n    layoutSettings: layoutSettings,\n    widgets: [],\n}\n\nexport default extendedLayoutTest","import { Layout, Layouts } from \"react-grid-layout\";\n\nimport type { CardSwapEvent } from \"../interfaces/CardEvents\";\nimport type { GridPosition } from \"../interfaces/GridPosition\";\nimport type RawLayoutRow from \"../interfaces/RawLayoutRow\";\nimport appConfig from \"../static/appConfig\";\nimport extendedLayoutTest from \"../static/extendedLayoutTest\";\nimport CardData from \"./CardData\";\nimport WidgetData from \"./WidgetData\";\n\nexport interface CardOptions {\n  id: string;\n  scale: number;\n  backgroundColor: string;\n  objectPosition: string;\n}\n\nexport interface GridSettings {\n  defaultBackgroundColor: string;\n}\nexport interface LayoutSettings {\n  cardSettings: CardOptions[];\n  gridSettings: GridSettings;\n}\n\nexport interface ExtendedLayout {\n  layout: Layouts;\n  layoutSettings: LayoutSettings;\n  widgets: WidgetData[];\n}\n\n//TODO: Google form columns and layoutData fields should have the same capitilization\nexport default class LayoutData {\n  readonly title: string;\n  readonly author: string;\n  readonly added: Date;\n  readonly id: string;\n  readonly sourceLayout: ExtendedLayout;\n  layout: Layouts;\n  layoutWidgets: WidgetData[];\n\n  constructor(row: RawLayoutRow) {\n    const { widgets, layout, layoutSettings } = testGetLayout(row);\n    this.id = row.title + \"_\" + row.timestamp;\n    this.title = row.title;\n    this.author = row.author;\n    this.added = new Date(row.timestamp.split(\" \")[0]);\n    const s = {};\n    // Object.assign(s, layout);\n    // this.sourceLayout = testGetLayout(row);\n    // this.sourceLayout = s;\n    // this.sourceLayout = JSON.parse(row.layout).s;\n    this.sourceLayout = JSON.parse(row.layout).sourceLayout;\n    console.log(JSON.parse(row.layout));\n    if (JSON.parse(row.layout).layoutWidgets) {\n      this.layoutWidgets = JSON.parse(row.layout).layoutWidgets;\n    } else {\n      this.layoutWidgets = [];\n    }\n    // this.layoutWidgets = []\n    // this.extendedLayout = testGetLayout(row);\n    this.layout = layout;\n    // this.layoutWidgets = widgets\n  }\n\n  swapCard(swapInfo: CardSwapEvent): void {\n    for (const [k, v] of Object.entries(this.layout)) {\n      for (const [index, layoutValue] of v.entries()) {\n        if (layoutValue.i == swapInfo.targetId) {\n          v[index].i = swapInfo.sourceId;\n        }\n      }\n      this.layout[k] = v;\n    }\n  }\n\n  removeCard(toRemoveId: string): void {\n    console.log(this.layout);\n    for (const [k, v] of Object.entries(this.layout)) {\n      for (const [index, layoutValue] of v.entries()) {\n        this.layout[k] = v.filter((l) => l.i !== toRemoveId);\n      }\n    }\n  }\n\n  clearCards(): void {\n    console.log(this.layout);\n    for (const [k, v] of Object.entries(this.layout)) {\n      for (const [index, layoutValue] of v.entries()) {\n        this.layout[k] = [];\n      }\n    }\n  }\n\n  addCard(toAdd: CardData, pos: GridPosition): void {\n    console.log(\"ADDING CARD AT LAYOUT DATA\");\n    console.log(this.layout);\n    const lg = Object.entries(this.layout)[0][1];\n    if (lg.map((l) => l.i).includes(toAdd.sourceId)) {\n      console.log(\"ADDING SOMETHING THAT'S ALREADY PRESENT\");\n    }\n    for (const [k, v] of Object.entries(this.layout)) {\n      const newItem: Layout = {\n        x: pos.x,\n        y: pos.y,\n        w: 1,\n        h: 1,\n        i: toAdd.sourceId,\n      };\n      this.layout[k].push(newItem);\n    }\n  }\n  addWidget(toAdd: WidgetData, pos: GridPosition): void {\n    // console.log(\"ADDING WIDGET AT LAYOUT DATA\", toAdd);\n    // console.log(this.layout);\n    const lg = Object.entries(this.layout)[0][1];\n    if (lg.map((l) => l.i).includes(toAdd.id)) {\n      console.log(\"ADDING A WIDGET THAT'S ALREADY PRESENT\");\n    }\n    this.layoutWidgets.push(toAdd);\n    for (const [k, v] of Object.entries(this.layout)) {\n      const newItem: Layout = {\n        x: pos.x,\n        y: pos.y,\n        w: 1,\n        h: 1,\n        i: toAdd.id,\n      };\n      this.layout[k].push(newItem);\n    }\n  }\n  resetLayout(): void {\n    // this.layout = { ...this.sourceLayout };\n    console.log(\"RESETING LAYOUT\");\n    console.log(this.sourceLayout.layout);\n    this.layout = { ...this.sourceLayout.layout };\n  }\n  failCard(toFail: CardData) {\n    console.log(\"FAILING CARD AT LAYOUT DATA\");\n    // console.log()\n  }\n  setGridLayout(newGridLayout: Layouts): void {\n    console.log(newGridLayout);\n    this.layout = newGridLayout;\n  }\n  sources(): string[] {\n    const lg = Object.entries(this.layout)[0][1];\n    return lg.map((l: any) => l.i);\n  }\n  widgets(): string[] {\n    console.log(\"GETTING WIDGETS AT WIDGET LAYOUTDATA\");\n    const lg = Object.entries(this.layout)[0][1];\n    console.log(lg);\n    const justWidgets = lg.filter((l: any) =>\n      appConfig.widgetIds.includes(l.i)\n    );\n    console.log(\"just widgets\", justWidgets);\n    return justWidgets.map((l: any) => l.i);\n  }\n}\n//TODO: TEMPORRARY!!!!!\nfunction testGetLayout(row: RawLayoutRow): ExtendedLayout {\n  const test = JSON.parse(row.layout);\n  // console.log(row);\n  // const test = JSON.parse(row.layout).layt=\n  return test.layout ? test : extendedLayoutTest;\n}\n","import { Layout, Layouts } from \"react-grid-layout\";\nimport LayoutData, { ExtendedLayout } from \"../data_structs/LayoutData\";\nimport RawLayoutRow from \"../interfaces/RawLayoutRow\";\n// const availableHandles: ResizeHandle[] = [\n//   \"s\",\n//   \"w\",\n//   \"e\",\n//   \"n\",\n//   \"sw\",\n//   \"nw\",\n//   \"se\",\n//   \"ne\",\n// ];\nconst defaultGridLayoutArray: Layout[] = [\n  {\n    i: \"https://codepen.io/rcyou/embed/QEObEk?height=265&theme-id=light&default-tab=css,result\",\n    x: 2,\n    y: 2,\n    w: 1,\n    h: 1,\n    static: false,\n  },\n  {\n    i: \"https://sketchfab.com/models/e55956fee6444011b574bad021a03eae/embed?autostart=1\",\n    x: 3,\n    y: 0,\n    w: 1,\n    h: 1,\n    minW: 1,\n  },\n  {\n    i: \"https://www.lib.ncsu.edu/huntlibrary\",\n    x: 3,\n    y: 1,\n    w: 1,\n    h: 1,\n    minW: 1,\n  },\n];\n\nconst defaultStaticLayout: ExtendedLayout = {\n  layout: {\n    lg: defaultGridLayoutArray,\n    md: defaultGridLayoutArray,\n    sm: defaultGridLayoutArray,\n    xs: defaultGridLayoutArray,\n    xxs: defaultGridLayoutArray,\n  },\n  layoutSettings: {\n    cardSettings: [],\n    gridSettings: {\n      defaultBackgroundColor: \"red\",\n    },\n  },\n  widgets: [],\n};\n\nconst fakeLayoutRow: RawLayoutRow = {\n  title: \"default static layout\",\n  author: \"webb\",\n  timestamp: \"1/1/2021\",\n  layout: JSON.stringify(defaultStaticLayout),\n  interaction: \"active\",\n};\n\nconst defaultLayoutData = new LayoutData(fakeLayoutRow);\n\n// console.log(JSON.stringify(defaultLayouts));\nexport default defaultLayoutData;\n\n// const defaultLayoutData =\" f\"\n// export default defaultLayoutData;\n","import { Action, action, Thunk, thunk, ThunkOn, thunkOn } from \"easy-peasy\";\r\nimport { Layouts } from \"react-grid-layout\";\r\n\r\nimport CardData from \"../data_structs/CardData\";\r\nimport LayoutData from \"../data_structs/LayoutData\";\r\nimport type { SheetNames } from \"../enums\";\r\nimport { AppMode } from \"../enums\";\r\nimport { CardAddEvent, CardSwapEvent } from \"../interfaces/CardEvents\";\r\nimport RawLayoutRow from \"../interfaces/RawLayoutRow\";\r\nimport appConfig from \"../static/appConfig\";\r\nimport defaultStaticLayout from \"../static/defaultStaticLayout\";\r\nimport { StoreModel } from \"./index\";\r\n\r\nexport interface LayoutsModel {\r\n  //state\r\n  activeLayout: LayoutData | undefined;\r\n  externalLayouts: LayoutData[];\r\n  bufferLayout: Layouts;\r\n  tempLayout: Layouts;\r\n\r\n  //listeners\r\n  onSetAppGoogleSheetData: ThunkOn<LayoutsModel, never, StoreModel>;\r\n  onToggleViewMode: ThunkOn<LayoutsModel, never, StoreModel>;\r\n\r\n  //simple setters\r\n  setActiveLayout: Action<LayoutsModel, LayoutData>;\r\n  setExternalLayouts: Action<LayoutsModel, LayoutData[]>;\r\n  setBufferLayout: Action<LayoutsModel, Layouts>;\r\n  setTempLayout: Action<LayoutsModel, Layouts>;\r\n  updateLayout: Action<LayoutsModel, CardSwapEvent>;\r\n\r\n  //update\r\n  setRandomLayout: Thunk<LayoutsModel, never, StoreModel>;\r\n  swapCardContent: Thunk<LayoutsModel, CardSwapEvent, StoreModel>;\r\n  deleteCard: Thunk<LayoutsModel, string, StoreModel>;\r\n  clearCards: Thunk<LayoutsModel, never, StoreModel>;\r\n  addCard: Thunk<LayoutsModel, CardAddEvent, never, StoreModel>;\r\n  addWidget: Thunk<LayoutsModel, CardAddEvent, never, StoreModel>;\r\n  registerCardLoadFailure: Thunk<LayoutsModel, CardData, never, StoreModel>;\r\n  resetLayout: Thunk<LayoutsModel, never, StoreModel>;\r\n}\r\n\r\n//TODO: Get feedback the whole buffer layout approach\r\nconst layoutsModel: LayoutsModel = {\r\n  //state\r\n  activeLayout: undefined,\r\n  externalLayouts: [],\r\n  bufferLayout: defaultStaticLayout.layout,\r\n  tempLayout: defaultStaticLayout.layout,\r\n\r\n  //listeners\r\n  /**On setAppGoogleSheetData, create an array of LayoutData objects from the provided rows */\r\n  onSetAppGoogleSheetData: thunkOn(\r\n    (actions, storeActions) =>\r\n      storeActions.googleSheetsModel.setAppGoogleSheetData,\r\n    (actions, target) => {\r\n      //TODO: ERROR HANDLING FOR LAYOUTS\r\n      target.payload.getSheetRows<RawLayoutRow>(\"LAYOUTS\").then((rows) => {\r\n        const rawLayoutRows = rows;\r\n        const layouts = rawLayoutRows.map((l, i) => new LayoutData(l));\r\n        let defaultLayout: LayoutData;\r\n        if (appConfig.useStaticLayout) {\r\n          defaultLayout = defaultStaticLayout;\r\n          actions.setActiveLayout(defaultLayout);\r\n          actions.setBufferLayout(defaultLayout.layout);\r\n        } else {\r\n          const defaultLayout = layouts.filter(\r\n            (layout) => layout.title === appConfig.defaultLayoutName\r\n          )[0];\r\n          if (defaultLayout) {\r\n            console.log(defaultLayout);\r\n            actions.setActiveLayout(defaultLayout);\r\n            actions.setBufferLayout(defaultLayout.layout);\r\n          }\r\n        }\r\n        actions.setExternalLayouts(layouts);\r\n      });\r\n    }\r\n  ),\r\n  onToggleViewMode: thunkOn(\r\n    // targetResolver:toggleAppMode\r\n    (actions, storeActions) => storeActions.appModel.toggleAppMode,\r\n    // handler:\r\n    (actions, target, { getState, getStoreState }) => {\r\n      const { activeLayout } = getState();\r\n      const buf = getState().bufferLayout;\r\n      if (getStoreState().appModel.appMode === AppMode.DISPLAY) {\r\n        console.log(\"IT WAS IN DISPLAY MODE\");\r\n        if (activeLayout?.layout) {\r\n          activeLayout.layout = buf;\r\n          actions.setActiveLayout(activeLayout);\r\n        }\r\n      }\r\n    }\r\n  ),\r\n  //simple setters\r\n  setActiveLayout: action((state, newActiveLayout) => {\r\n    state.activeLayout = newActiveLayout;\r\n  }),\r\n  setRandomLayout: thunk((actions, _, { getState }) => {\r\n    const { externalLayouts, activeLayout } = getState();\r\n\r\n    // const possibleLayouts = externalLayouts.filter(\r\n    //   (l) => l.id !== activeLayout?.id\r\n    // );\r\n    if (activeLayout) {\r\n      const curIndex = externalLayouts\r\n        .map((l) => l.id)\r\n        .indexOf(activeLayout?.id);\r\n      console.log(curIndex);\r\n      const nextIndex = (curIndex + 1) % externalLayouts.length;\r\n      console.log(\r\n        `SETTING LAYOUT INDEX TO ${nextIndex} - ${externalLayouts[nextIndex].id} `\r\n      );\r\n      const selectedRandom = externalLayouts[nextIndex];\r\n      // console.log(selectedRandom);\r\n      actions.setActiveLayout(selectedRandom);\r\n    }\r\n    // state.activeLayout = selectedRandom;\r\n  }),\r\n  setExternalLayouts: action((state, newLayoutArray) => {\r\n    console.log(\"setting external layouts\");\r\n    state.externalLayouts = newLayoutArray;\r\n  }),\r\n  //mutators\r\n  swapCardContent: thunk((actions, swapInfo, { getState }) => {\r\n    const { activeLayout } = getState();\r\n    if (activeLayout) {\r\n      const buf = getState().bufferLayout;\r\n      activeLayout.layout = buf;\r\n      activeLayout.swapCard(swapInfo);\r\n      actions.setActiveLayout(activeLayout);\r\n    }\r\n  }),\r\n  deleteCard: thunk((actions, cardToDelete, { getState }) => {\r\n    const { activeLayout } = getState();\r\n    if (activeLayout) {\r\n      const buf = getState().bufferLayout;\r\n      activeLayout.layout = buf;\r\n      activeLayout.removeCard(cardToDelete);\r\n      actions.setActiveLayout(activeLayout);\r\n    }\r\n  }),\r\n  clearCards: thunk((actions, _, { getState }) => {\r\n    const { activeLayout } = getState();\r\n    if (activeLayout) {\r\n      const buf = getState().bufferLayout;\r\n      activeLayout.layout = buf;\r\n      activeLayout.clearCards();\r\n      actions.setActiveLayout(activeLayout);\r\n    }\r\n  }),\r\n  addCard: thunk((actions, cardAddEvent, { getState, getStoreState }) => {\r\n    const { availableCards } = getStoreState().appModel;\r\n    const { sourceId, targetPosition } = cardAddEvent;\r\n    const cardToAdd = availableCards.find((c) => c.sourceId == sourceId);\r\n    const { activeLayout } = getState();\r\n    if (activeLayout && cardToAdd) {\r\n      const buf = getState().bufferLayout;\r\n      activeLayout.setGridLayout(buf);\r\n      activeLayout?.addCard(cardToAdd, targetPosition);\r\n      actions.setActiveLayout(activeLayout);\r\n    }\r\n  }),\r\n  addWidget: thunk((actions, cardAddEvent, { getState, getStoreState }) => {\r\n    console.log(\"ADDING NEW WIDGET!!!\");\r\n    const { availableWidgets } = getStoreState().appModel;\r\n    const { sourceId, targetPosition } = cardAddEvent;\r\n    const widgetToAdd = availableWidgets.find((c) => c.id == sourceId);\r\n    const { activeLayout } = getState();\r\n    if (activeLayout && widgetToAdd) {\r\n      const buf = getState().bufferLayout;\r\n      activeLayout.setGridLayout(buf);\r\n      activeLayout?.addWidget(widgetToAdd, targetPosition);\r\n      actions.setActiveLayout(activeLayout);\r\n    }\r\n  }),\r\n  registerCardLoadFailure: thunk(\r\n    (actions, failedCard, { getState, getStoreState }) => {\r\n      const { activeLayout } = getState();\r\n      if (activeLayout) {\r\n        activeLayout.failCard(failedCard);\r\n      }\r\n    }\r\n  ),\r\n  resetLayout: thunk((actions, _, { getState }) => {\r\n    const { activeLayout } = getState();\r\n    if (activeLayout) {\r\n      const buf = getState().activeLayout;\r\n      buf?.resetLayout();\r\n      if (buf) {\r\n        actions.setActiveLayout(buf);\r\n      }\r\n    }\r\n  }),\r\n  setBufferLayout: action((state, layouts) => {\r\n    state.bufferLayout = layouts;\r\n  }),\r\n  setTempLayout: action((state, layouts) => {\r\n    state.tempLayout = layouts;\r\n  }),\r\n  updateLayout: action((state, swap) => {\r\n    const old = state.activeLayout;\r\n    if (old) {\r\n      old.swapCard(swap);\r\n      state.activeLayout = old;\r\n    }\r\n  }),\r\n};\r\n\r\nexport default layoutsModel;\r\n","import type SheetId from \"../interfaces/SheetId\";\n\nconst cardDataSheetKey: SheetId = {\n  key: \"181P-SDszUOj_xn1HJ1DRrO8pG-LXyXNmINcznHeoK8k\",\n  gid: 0,\n};\nexport default cardDataSheetKey;\n\n\n\n// 1o-R04VC8cIbcmqM68q4ESguaaNYb-0jhoPNgEuKa0i4\n// key: \"181P-SDszUOj_xn1HJ1DRrO8pG-LXyXNmINcznHeoK8k\",\n","import { SheetNames } from \"../enums\";\r\n\r\nexport default class GoogleSheetData {\r\n  title!: string;\r\n  sheetId!: string;\r\n  sheets!: Map<SheetNames, unknown[]>;\r\n  constructor(\r\n    title: string,\r\n    sheetId: string,\r\n  ) {\r\n    this.title = title;\r\n    this.sheetId = sheetId;\r\n    this.sheets = new Map();\r\n  }\r\n  getSheetRows<P>(title: SheetNames): Promise<P[]>{\r\n    // const typedArr = this.rows.map(r=>r as P)\r\n    return new Promise<P[]>((resolve, reject)=>{\r\n      const rowArray = this.sheets.get(title);\r\n      if (rowArray){\r\n        resolve(rowArray.map(r=>r as P))\r\n      } else {\r\n        reject(`sheet with title ${title} did not exist`)\r\n      }\r\n    })\r\n  }\r\n  addSheet(title: SheetNames, rows: unknown[]){\r\n    this.sheets.set(title, rows);\r\n  }\r\n}\r\n","import { action, Action, thunk, Thunk } from \"easy-peasy\";\r\nimport type GoogleSheet from \"../interfaces/GoogleSheet\";\r\nimport type RawCardRow from \"../interfaces/RawCardRow\";\r\nimport type RawLayoutRow from \"../interfaces/RawLayoutRow\";\r\nimport cardDataSheetKey from \"../static/cardDataSheetKey\";\r\nimport layoutsGoogleSheetKey from \"../static/layoutsGoogleSheetKey\";\r\nimport GoogleSheetData from \"../data_structs/GoogleSheetData\";\r\nimport Papa from \"papaparse\";\r\nimport { SheetNames } from \"../enums\";\r\nimport SheetId from \"../interfaces/SheetId\";\r\nimport RawTopSheetRow from \"../interfaces/PrincipleSheetRow\";\r\nimport PrincipleSheetRow from \"../interfaces/PrincipleSheetRow\";\r\n\r\nexport interface GoogleSheetsModel {\r\n  //state\r\n  appGoogleSheet: GoogleSheetData | undefined;\r\n  cardDataGoogleSheet: RawCardRow[] | null;\r\n  layoutDataGoogleSheet: RawLayoutRow[] | null;\r\n  formUrl: string | undefined;\r\n  layoutSheetUrl: string | undefined;\r\n  cardSheetUrl: string | undefined;\r\n  //requests\r\n  fetchTopLevelSheet: Thunk<GoogleSheetsModel>;\r\n  fetchAppGoogleSheet: Thunk<GoogleSheetsModel>;\r\n  fetchSheet: Thunk<GoogleSheetsModel, { url: string; name: SheetNames }[]>;\r\n  //setters\r\n  setFormUrl: Action<GoogleSheetsModel, string>;\r\n  setCardSheetUrl: Action<GoogleSheetsModel, string>;\r\n  setLayoutsSheetUrl: Action<GoogleSheetsModel, string>;\r\n  setAppGoogleSheetData: Action<GoogleSheetsModel, GoogleSheetData>;\r\n  setCardDataGoogleSheet: Action<GoogleSheetsModel, RawCardRow[]>;\r\n  setLayoutDataGoogleSheet: Action<GoogleSheetsModel, RawLayoutRow[]>;\r\n}\r\n/**\r\n * Responsible for making requestst to google sheets. Other models must listen this model to intercept the sheet payload.\r\n * Also stores the fetch data purely for debugging purposes.\r\n */\r\n\r\ninterface LoadSheetResult {\r\n  rows: unknown[];\r\n  sheetTitle: SheetNames;\r\n}\r\n\r\nconst googleSheetsModel: GoogleSheetsModel = {\r\n  //state\r\n  layoutDataGoogleSheet: null,\r\n  cardDataGoogleSheet: null,\r\n  appGoogleSheet: undefined,\r\n  formUrl: undefined,\r\n  layoutSheetUrl: undefined,\r\n  cardSheetUrl: undefined,\r\n  //requests\r\n  fetchTopLevelSheet: thunk((actions) => {\r\n    getData(\"TOP_LEVEL\", process.env.REACT_APP_SHEET_URL as string).then(\r\n      (r) => {\r\n        console.log(r);\r\n        let sheetRow = r.rows[0] as PrincipleSheetRow;\r\n        actions.setFormUrl(sheetRow.googleForm);\r\n        actions.setLayoutsSheetUrl(urlToCsvUrl(sheetRow.layoutsSheet));\r\n        actions.setCardSheetUrl(urlToCsvUrl(sheetRow.cardsSheet));\r\n        actions.fetchSheet([\r\n          { name: \"LAYOUTS\", url: urlToCsvUrl(sheetRow.layoutsSheet) },\r\n          { name: \"CARDS\", url: urlToCsvUrl(sheetRow.cardsSheet) },\r\n        ]);\r\n      }\r\n    );\r\n    console.log(\"GOT HERE\");\r\n  }),\r\n  fetchSheet: thunk(async (actions, sheets, { getState }) => {\r\n    console.log(getState().cardSheetUrl, getState().layoutSheetUrl);\r\n    // const getCardDataResponse = getData(\"CARDS\", getState().cardSheetUrl as string)\r\n    // const getLayoutDataResponse = getData( \"LAYOUTS\", getState().layoutSheetUrl as string)\r\n    const sheetResponses = sheets.map((s) => getData(s.name, s.url));\r\n    // Promise.allSettled([getCardDataResponse, getLayoutDataResponse]).then(results=>{\r\n    Promise.allSettled(sheetResponses).then((results) => {\r\n      const sheetData = new GoogleSheetData(\"DSC App\", cardDataSheetKey.key);\r\n      const goodValues: PromiseFulfilledResult<LoadSheetResult>[] = [];\r\n\r\n      results.forEach((result, num) => {\r\n        console.log(result);\r\n        if (result.status == \"fulfilled\") {\r\n          goodValues.push(result);\r\n          sheetData.addSheet(result.value.sheetTitle, result.value.rows);\r\n        }\r\n        if (result.status == \"rejected\") {\r\n          console.error(\"failed \");\r\n        }\r\n      });\r\n      actions.setAppGoogleSheetData(sheetData);\r\n      sheetData.getSheetRows(\"CARDS\").then((r) => {\r\n        actions.setCardDataGoogleSheet(r as RawCardRow[]);\r\n      });\r\n      sheetData.getSheetRows(\"LAYOUTS\").then((r) => {\r\n        actions.setLayoutDataGoogleSheet(r as RawLayoutRow[]);\r\n      });\r\n    });\r\n  }),\r\n\r\n  fetchAppGoogleSheet: thunk(async (actions, _, { getState }) => {\r\n    // const getCardDataResponse = parseData(\"CARDS\", cardDataSheetKey)\r\n    // const getLayoutDataResponse = parseData( \"LAYOUTS\", layoutsGoogleSheetKey)\r\n\r\n    console.log(getState().cardSheetUrl, getState().layoutSheetUrl);\r\n    const getCardDataResponse = getData(\r\n      \"CARDS\",\r\n      getState().cardSheetUrl as string\r\n    );\r\n    const getLayoutDataResponse = getData(\r\n      \"LAYOUTS\",\r\n      getState().layoutSheetUrl as string\r\n    );\r\n\r\n    Promise.allSettled([getCardDataResponse, getLayoutDataResponse]).then(\r\n      (results) => {\r\n        const sheetData = new GoogleSheetData(\"DSC App\", cardDataSheetKey.key);\r\n        const goodValues: PromiseFulfilledResult<LoadSheetResult>[] = [];\r\n\r\n        results.forEach((result, num) => {\r\n          console.log(result);\r\n          if (result.status == \"fulfilled\") {\r\n            goodValues.push(result);\r\n            sheetData.addSheet(result.value.sheetTitle, result.value.rows);\r\n          }\r\n          if (result.status == \"rejected\") {\r\n            console.error(\"failed \");\r\n          }\r\n        });\r\n        actions.setAppGoogleSheetData(sheetData);\r\n        sheetData.getSheetRows(\"CARDS\").then((r) => {\r\n          actions.setCardDataGoogleSheet(r as RawCardRow[]);\r\n        });\r\n        sheetData.getSheetRows(\"LAYOUTS\").then((r) => {\r\n          actions.setLayoutDataGoogleSheet(r as RawLayoutRow[]);\r\n        });\r\n      }\r\n    );\r\n  }),\r\n  setAppGoogleSheetData: action((state, googleSheet) => {\r\n    state.appGoogleSheet = googleSheet;\r\n  }),\r\n  setCardDataGoogleSheet: action((state, sheet) => {\r\n    state.cardDataGoogleSheet = sheet;\r\n  }),\r\n  setLayoutDataGoogleSheet: action((state, sheet) => {\r\n    state.layoutDataGoogleSheet = sheet;\r\n  }),\r\n  setFormUrl: action((state, formUrl) => {\r\n    state.formUrl = formUrl;\r\n  }),\r\n  setCardSheetUrl: action((state, cardSheetUrl) => {\r\n    state.formUrl = cardSheetUrl;\r\n  }),\r\n  setLayoutsSheetUrl: action((state, layoutSheetUrl) => {\r\n    state.formUrl = layoutSheetUrl;\r\n  }),\r\n};\r\n\r\nexport default googleSheetsModel;\r\n\r\nfunction urlToCsvUrl(url: string) {\r\n  console.log(url);\r\n  // https://docs.google.com/spreadsheets/d/1zwPZV75EhBLseFpcpQhHXEjLTV6JDrwfIGNhaI2GCXI/edit#gid=1913514186\r\n  let sections = url.split(\"/\");\r\n  const sheetKey = sections[5];\r\n  let sectionsGid = url.split(\"gid=\");\r\n  const gid = sectionsGid[1];\r\n  const csvUrl = `https://docs.google.com/spreadsheets/d/${sheetKey}/export?format=csv&gid=${gid}`;\r\n  return csvUrl;\r\n}\r\n\r\nfunction parseData(\r\n  sheetTitle: SheetNames,\r\n  sheetId: SheetId\r\n): Promise<LoadSheetResult> {\r\n  let data;\r\n  const csvUrl = `https://docs.google.com/spreadsheets/d/${sheetId.key}/export?format=csv&gid=${sheetId.gid}`;\r\n\r\n  return new Promise<LoadSheetResult>((resolve) => {\r\n    Papa.parse(csvUrl, {\r\n      download: true,\r\n      header: true,\r\n      delimiter: \",\",\r\n      dynamicTyping: true,\r\n      complete: (results) => {\r\n        data = results.data;\r\n        resolve({ rows: data, sheetTitle: sheetTitle });\r\n      },\r\n    });\r\n  });\r\n}\r\n// https://docs.google.com/spreadsheets/d/e/2PACX-1vRalMG47cvXmCbEqeIJWn5qwd9bPhHUV16_VN7LuKsv5\r\n\r\nfunction getData(\r\n  sheetTitle: SheetNames,\r\n  sheetUrl: string\r\n): Promise<LoadSheetResult> {\r\n  let data;\r\n  return new Promise<LoadSheetResult>((resolve) => {\r\n    console.log(sheetUrl);\r\n    Papa.parse(sheetUrl, {\r\n      download: true,\r\n      header: true,\r\n      delimiter: \",\",\r\n      dynamicTyping: true,\r\n      complete: (results) => {\r\n        data = results.data;\r\n        console.log(data);\r\n        resolve({ rows: data, sheetTitle: sheetTitle });\r\n      },\r\n    });\r\n  });\r\n}\r\n","import appData, { AppDataModel } from \"./appModel\";\r\nimport layoutsModel, { LayoutsModel } from \"./layoutsModel\";\r\nimport googleSheetsModel, { GoogleSheetsModel } from \"./googleSheetsModel\";\r\n// https://codesandbox.io/s/easy-peasy-typescript-v3-riqbl?file=/src/model/todos.ts\r\n\r\nexport interface StoreModel {\r\n  appModel: AppDataModel;\r\n  layoutsModel: LayoutsModel;\r\n  googleSheetsModel: GoogleSheetsModel;\r\n}\r\n\r\nconst model: StoreModel = {\r\n  appModel: appData,\r\n  layoutsModel: layoutsModel,\r\n  googleSheetsModel: googleSheetsModel,\r\n};\r\n\r\nexport default model;\r\n","import { createStore, action } from \"easy-peasy\";\nimport model from \"./model\";\n\nconst store = createStore(model, { name: \"Cuboard App Store\" });\n\nexport default store;\n","import React from \"react\";\nimport App from \"./App\";\nimport { StoreProvider } from \"easy-peasy\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <StoreProvider store={store}>\n    <App />\n  </StoreProvider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}