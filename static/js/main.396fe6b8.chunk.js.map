{"version":3,"sources":["enums.ts","hooks.ts","components/Background/TestShader1.js","utils.ts","components/Background/BackgroundShader.js","components/Background.tsx","static/appConfig.ts","components/IFrameView.tsx","components/Shared/Button.tsx","components/CardLayout/ViewCard/CardInfo.tsx","components/CardLayout/ViewCard/DeleteButton.tsx","components/CardLayout/ViewCard/SettingsButton.tsx","components/CardLayout/ViewCard/SettingsMenu.tsx","components/CardLayout/ViewCard/ViewCard.tsx","components/Shared/Pulsar.tsx","components/DragAndDrop/IXDrop.tsx","components/CardLayout/GuideGrid.tsx","components/Widgets/Clock.tsx","components/Shared/Modal.tsx","components/Shared/Panel.tsx","components/HowToUse/HowToUsePopUp.tsx","components/Widgets/HowToUse.tsx","components/Widgets/WidgetRenderer.tsx","components/CardLayout/CardLayout.tsx","components/AppWrappers/AppDragContext.tsx","components/DragAndDrop/DraggableRow.tsx","IFrameValidator.ts","components/Loader.tsx","components/Shared/FlexRow.tsx","components/EditorPanel/PopOver.tsx","components/EditorPanel/TableHeader.tsx","components/EditorPanel/EditorTabs/ContentsTab/ContentsTab.tsx","components/EditorPanel/EditorTabs/TabPane.tsx","components/Shared/FlexColumn.tsx","components/EditorPanel/EditorTabs/LayoutTab/GoogleFormPopup.tsx","static/formEmbedUrl.ts","components/EditorPanel/EditorTabs/LayoutTab/LayoutTable.tsx","components/EditorPanel/EditorTabs/LayoutTab/LayoutTab.tsx","components/DragAndDrop/DraggableWidget.tsx","components/EditorPanel/EditorTabs/WidgetsTab/WidgetsTab.tsx","components/EditorPanel/EditorTabs/AppTab/AppTab.tsx","components/EditorPanel/EditorTabs/IssuesTab/IssuesTable.tsx","components/EditorPanel/EditorTabs/IssuesTab/IssuesTab.tsx","components/EditorPanel/Editor.tsx","components/EditorPanel/EditorPanel.tsx","components/ModeChangeButton.tsx","components/Shared/Screen.tsx","components/AppWrappers/AppTimers.tsx","App.tsx","data_structs/CardData.ts","data_structs/WidgetData.ts","static/widgets.ts","model/appModel.ts","static/extendedLayoutTest.ts","data_structs/LayoutData.ts","model/layoutsModel.ts","data_structs/GoogleSheetData.ts","static/cardDataSheetKey.ts","model/googleSheetsModel.ts","model/index.ts","store.ts","index.tsx"],"names":["AppMode","CardView","DragType","InteractionType","DndTypes","DragSource","appModelHooks","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","useSheets","fetchTopLevelSheet","actions","googleSheetsModel","parentSheetUrl","state","cardSheetUrl","layoutSheetUrl","formUrl","useErrors","appErrors","appModel","layoutErrors","layoutsModel","googleSheetsErrors","allErrors","useApp","toggleAppMode","rotationSpeed","rotateLayouts","sheetsAreLoaded","setRotationSpeed","transitionLayout","setRotateLayouts","addAppError","appMode","useLayout","activeCards","activeWidgets","externalLayouts","swapCard","swapCardContent","deleteCard","addCard","setBufferLayout","activeLayout","useNextLayout","setNextLayout","setActiveLayout","clearCards","resetLayout","useOnClickOutside","ref","handler","useEffect","listener","event","el","current","contains","target","document","addEventListener","removeEventListener","useEventListener","eventName","element","savedHandler","useRef","targetElement","window","eventListener","useElementSize","useState","setRef","width","height","size","setSize","handleSize","useCallback","offsetWidth","offsetHeight","useLayoutEffect","useWindowSize","windowSize","setWindowSize","innerWidth","innerHeight","TestShader1","uniforms","time","value","vertexShader","fragmentShader","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","toString","slice","length","join","randomIntFromInterval","min","max","Math","floor","random","randomNumber","randomisePosition","THREE","rgb","r","g","b","baseColors","pink","brightPink","darkPurple","orange","darkgrey","lightgrey","red","u_bg","type","u_bgMain","u_color1","u_color2","u_time","u_randomisePosition","ShadedGeometry1","position","shaderMaterialRef","t","j","x","y","vCheck","useFrame","clock","cos","R","sin","G","B","rotation","degToRad","attach","args","BackgroundShader","cam","gl","antialias","alpha","PerspectiveCamera","fov","aspect","near","far","faceResolution","OrbitControls","Background","backgroundColor","backgroundStyle","setBackgroundStyle","style","top","left","EDIT","transition","backgroundClass","classNames","DISPLAY","ReactDOM","createPortal","className","querySelector","React","memo","appConfig","idleTime","sheetLink","defaultIframeScale","defaultEmbedScale","defaultLayoutName","formLink","widgetIds","gridRows","gridCols","showModeSwitchButton","useStaticLayout","gridBottomPadding","rotationDuration","IFrameView","card","scale","cardView","onError","onLoad","objectFit","active","setActive","valid","isLoaded","setIsLoaded","indexFrameContainerClass","iframeStyle","border","transform","transformOrigin","src","contentType","onDoubleClick","onReady","PREVIEW","objectPosition","ResponsivePlayer","controls","muted","playing","url","PureComponent","Button","onClick","text","appearance","iconBefore","containerClass","fontSize","intent","onMouseUp","cursor","undefined","CardInfo","data","title","DeleteButton","action","onTouchEnd","e","display","DeleteIcon","SettingsButton","CogIcon","InputRow","children","ScaleControls","setScale","ChevronLeftIcon","onChange","parseInt","defaultValue","ChevronRightIcon","SettingsMenu","isShown","setBackgroundColor","setShowMenu","menuReference","handleClickOutside","menuStyle","ViewCard","cardType","cardId","cardContainerReference","useAnimation","GRID","oldCardView","setCardView","setIsError","animationVariant","setAnimationVariant","animationCounter","useLocalStore","cardBackgroundColor","color","show","showMenu","toggleMenu","cardClass","computed","FULL_SCREEN","CLOCK","cardInfoClass","handleCardPress","thunk","_","getState","rootel","getElementById","pointerEvents","setTimeout","id","zIndex","s","devTools","settingsMenuProperties","cardModalBackdrop","cardChildContainer","keyCode","disabled","enable","disable","handleAction","preventDefault","useKeyboardShortcut","showDeleteButton","renderCardInfo","containerReference","variants","opacity","delay","duration","preview","none","error","loaded","out","console","log","motion","div","animate","initial","layoutId","willChange","errorType","description","source","link","renderReturnButton","ReturnButton","Pulsar","AddIcon","IXDrop","properties","provided","snapshot","innerRef","isDraggingOver","placeholder","GuideGrid","gridSettings","ResponsiveGridLayout","WidthProvider","Responsive","guideCards","rows","cols","allGridSpots","push","emptyCards","map","rr","w","h","i","minW","maxW","minH","maxH","static","isDraggable","isResizable","resizeHandles","lg","md","sm","xs","xxs","generateFilledLayout","justCardNames","c","layouts","preventCollision","p","index","key","PLACEHOLDER","droppableId","Clock","setDate","timerID","setInterval","clearInterval","padding","overflow","fontWeight","boxSizing","toLocaleTimeString","hour12","timeStyle","Modal","containerClassName","onClose","backdropOpacity","justifyContent","alignItems","MyBackdrop","Panel","flexDirection","panelStyle","HowToUsePopUp","hidden","visible","borderRadius","Heading","Text","process","HowToUse","initialValue","setValue","useToggle","toggleVisible","HandUpIcon","WidgetRenderer","widget","colWidth","rowHeight","widgetId","widg","renderWidget","CardLayout","layout","margin","onLayoutChange","cards","widgets","useControls","sharedGridSettings","breakpoints","compactType","onDragStart","oldItem","newItem","verticalCompact","exit","IFRAME","contentCard","stringToGridPos","posString","split","Number","charAt","AppDragContext","externalLayoutsState","onDragEnd","response","destination","draggableId","CARD_TABLE","startsWith","cardPos","sourceId","targetPosition","targetId","WIDGETS_TABLE","LAYOUT_TABLE","newLayout","filter","l","DraggableRow","dndType","dragAll","isValidElement","createElement","body","appendChild","removeChild","useDraggableInPortal","dragHandleProperties","dragHandleProps","isDragging","draggableProps","offsetLeft","offsetTop","cloneElement","defaultProps","IFrameLoadError","IFrameLoadWarning","getDefaultStyle","Loader","ariaLabel","wrapperStyle","wrapperClass","viewBox","xmlns","fill","attributeName","from","to","dur","repeatCount","FlexRow","props","PopOver","AnimatePresence","ease","boxShadow","transformBox","TableHeader","headerTitle","setFilter","setFilterDirection","activeFilter","sortDirection","setSortDirection","showSortArrow","str","regex","toLowerCase","match","forEach","char","replace","toUpperCase","titleCapitilization","toTitleCase","TitleWithIcon","iconId","setPosition","hovered","setHovered","setPreviewLoaded","delayHandler","setDelayHandler","onMouseEnter","pageY","parentElement","getBoundingClientRect","onMouseLeave","_event","clearTimeout","isActive","fallbackImage","maxWidth","_c","marginTop","marginBottom","textAlign","paddingLeft","ContentsTab","availableCards","filterKey","setFilterKey","filterDirection","cardItems","setCardItems","searchTerm","setSearchTerm","filteredCards","setFilteredCards","aboveThreshholdCardTitles","fuzzysort","go","filtered","includes","sortedItems","sort","a","aText","bText","reverse","SearchInput","currentTarget","isDropDisabled","autoHeight","autoHeightMax","autoHeightMin","added","author","interaction","CARD_ROW","isDragDisabled","TabPane","FlexColumn","GoogleFormPopup","onCloseComplete","layoutsString","isCopiedJSON","setIsCopiedJson","layoutString","JSON","stringify","bufferLayout","ReactDom","borderBottom","rel","href","onCopy","CopyField","isCurrentClipBoardContent","setIsClipBoardCorrect","setIsCopied","navigator","clipboard","readText","then","clipboardText","catch","ClipboardIcon","writeText","GoogleFormIframe","frameBorder","marginHeight","marginWidth","LayoutTable","activeLayoutState","StatusIndicator","LayoutTitle","layoutCardIds","sources","layoutWidgetsIds","availableWidgets","pageX","textDecoration","LayoutTab","bufferState","showNewLayoutPopup","setShowNewLayoutPopup","setLayoutString","DraggableWidget","currentLayoutState","isInLayout","WidgetsTab","widgetsToRender","setWidgetsToRender","WIDGET","WidgetWrapper","editorPanelRef","scalar","setScalar","Label","AppTab","val","checked","setChecked","Switch","SheetLinks","links","titles","SheetLink","textOverflow","ErrorMessage","marginRight","textTransform","IssuesTable","squareReference","overflowY","IssuesTab","Editor","ErrorsNofictions","aspectRatio","marginLeft","EditorPanel","viewModeState","minimized","setMinimized","editorPanelClass","editorClass","bounds","right","bottom","defaultClassName","defaultPosition","handle","icon","PlusIcon","MinusIcon","PanelHeader","BarButton","ModeChangeButton","toggleModeAction","longPressEvent","useLongPress","modeChangeButtonStyle","whileTap","Screen","AppTimers","isIdle","useIdle","callback","savedCallback","intervalRef","reset","stop","useInterval","App","effect","setGridLayout","IFrameValidator","errors","warnings","this","malformedUrlCheckArray","warningsArray","RegExp","test","MALFORMED_URL","validURL","CROSS_ORIGIN","CardData","row","metaData","validator","failed","isImgLink","isVideo","isEmbed","isWebsite","widgetType","WidgetData","info","Object","values","widgetInfo","manageViewModeChange","viewModeEnum","setAppMode","CYCLE","setAvailableCards","cardDataArray","setActiveCards","setActiveWidgets","widgetDataArray","speed","should","errorsString","newError","onCardSheetLoadSuccess","thunkOn","storeActions","setAppGoogleSheetData","payload","getSheetRows","sourceid","onSetActiveLayout","activeSourceIds","Set","availableCardsUpdated","has","onSwapCardContent","newCards","find","extendedLayoutTest","layoutSettings","defaultBackgroundColor","cardSettings","LayoutData","sourceLayout","layoutWidgets","parse","testGetLayout","timestamp","swapInfo","entries","k","v","toRemoveId","toAdd","pos","newGridLayout","keys","onSetAppGoogleSheetData","rawLayoutRows","currentLayoutIds","addLayoutError","defaultLayout","setExternalLayouts","onToggleViewMode","getStoreState","buf","newActiveLayout","currentIndex","indexOf","selectedRandom","newLayoutArray","cardToDelete","removeCard","cardAddEvent","cardToAdd","updateLayout","swap","old","setAnimationCounter","GoogleSheetData","sheetId","sheets","Map","Promise","resolve","reject","rowArray","get","set","cardDataSheetKey","gid","layoutDataGoogleSheet","cardDataGoogleSheet","parentGoogleSheet","every","getSheetData","sheetRow","setFormUrl","googleForm","setLayoutsSheetUrl","layoutsSheet","setCardSheetUrl","cardsSheet","setParentSheetUrl","fetchSheet","name","googleSheetUrlToCSVUrl","addGoogleSheetError","sheetResponses","allSettled","results","sheetData","goodValues","result","num","status","addSheet","sheetTitle","setCardDataGoogleSheet","setLayoutDataGoogleSheet","fetchAppGoogleSheet","getCardDataResponse","getLayoutDataResponse","googleSheet","sheet","googleSheetError","sheetKey","sheetUrl","Papa","download","header","delimiter","dynamicTyping","complete","model","appData","store","createStore","render"],"mappings":"s+MAAYA,EAMAC,EAMAC,EAKAC,EAOAC,EASAC,E,8GAjCAL,K,kBAAAA,E,YAAAA,E,eAAAA,M,cAMAC,K,YAAAA,E,kBAAAA,E,2BAAAA,M,cAMAC,K,kCAAAA,E,6BAAAA,M,cAKAC,K,gBAAAA,E,gBAAAA,E,cAAAA,E,eAAAA,M,cAOAC,K,0BAAAA,E,cAAAA,E,gBAAAA,E,oBAAAA,E,gBAAAA,E,iBAAAA,M,cASAC,K,4BAAAA,E,wBAAAA,E,sBAAAA,E,+BAAAA,M,iBCbNC,EAAgBC,cAETC,EAAkBF,EAAcE,gBAEhCC,GADmBH,EAAcI,iBACjBJ,EAAcG,eAmBpC,IAAME,EAAY,WAgBvB,MAAO,CACLC,mBAhByBJ,GACzB,SAACK,GAAD,OAAaA,EAAQC,kBAAkBF,sBAgBvCG,eAdqBN,GACrB,SAACO,GAAD,OAAWA,EAAMF,kBAAkBG,gBAcnCA,aAXmBR,GACnB,SAACO,GAAD,OAAWA,EAAMF,kBAAkBG,gBAWnCC,eATqBT,GACrB,SAACO,GAAD,OAAWA,EAAMF,kBAAkBI,kBASnCC,QAPcV,GAAc,SAACO,GAAD,OAAWA,EAAMF,kBAAkBK,aAkBtDC,EAAY,WACvB,IAAMC,EAAYZ,GAAc,SAACO,GAAD,OAAWA,EAAMM,SAASD,aACpDE,EAAed,GACnB,SAACO,GAAD,OAAWA,EAAMQ,aAAaD,gBAE1BE,EAAqBhB,GACzB,SAACO,GAAD,OAAWA,EAAMF,kBAAkBW,sBAGrC,MAAO,CACLJ,YACAE,eACAE,qBACAC,UALa,sBAAOL,GAAP,YAAqBE,GAArB,YAAsCE,MAqB1CE,EAAS,WACpB,IAAMC,EAAgBpB,GACpB,SAACK,GAAD,OAAaA,EAAQS,SAASM,iBAG1BC,EAAgBpB,GAAc,SAACO,GAAD,OAAWA,EAAMM,SAASO,iBACxDC,EAAgBrB,GAAc,SAACO,GAAD,OAAWA,EAAMM,SAASQ,iBACxDC,EAAkBtB,GACtB,SAACO,GAAD,OAAWA,EAAMF,kBAAkBiB,mBAG/BC,EAAmBxB,GACvB,SAACK,GAAD,OAAaA,EAAQS,SAASU,oBAE1BC,EAAmBzB,GACvB,SAACK,GAAD,OAAaA,EAAQW,aAAaS,oBAE9BC,EAAmB1B,GACvB,SAACK,GAAD,OAAaA,EAAQS,SAASY,oBAE1BC,EAAc3B,GAClB,SAACK,GAAD,OAAaA,EAAQS,SAASa,eAIhC,MAAO,CACLC,QAHc3B,GAAc,SAACO,GAAD,OAAWA,EAAMM,SAASc,WAItDP,gBACAG,mBACAJ,gBACAE,gBACAI,mBACAC,cACAJ,kBACAE,qBAqBSI,EAAY,WACvB,IAAMC,EAAc7B,GAAc,SAACO,GAAD,OAAWA,EAAMM,SAASgB,eACtDC,EAAgB9B,GAAc,SAACO,GAAD,OAAWA,EAAMM,SAASiB,iBACxDC,EAAkB/B,GACtB,SAACO,GAAD,OAAWA,EAAMQ,aAAagB,mBAE1BC,EAAWjC,GACf,SAACK,GAAD,OAAaA,EAAQW,aAAakB,mBAO9BC,EAAanC,GACjB,SAACK,GAAD,OAAaA,EAAQW,aAAamB,cAE9BC,EAAUpC,GAAgB,SAACK,GAAD,OAAaA,EAAQW,aAAaoB,WAE5DC,EAAkBrC,GACtB,SAACK,GAAD,OAAaA,EAAQW,aAAaqB,mBAG9BC,EAAerC,GACnB,SAACO,GAAD,OAAWA,EAAMQ,aAAasB,gBAG1BC,EAAgBvC,GACpB,SAACK,GAAD,OAAaA,EAAQW,aAAawB,iBAcpC,MAAO,CACLV,cACAC,gBACAM,kBACAC,eACAH,aACAC,UACAH,WAEAQ,gBApBsBzC,GACtB,SAACK,GAAD,OAAaA,EAAQW,aAAayB,mBAoBlCF,gBACAG,WAnBiB1C,GACjB,SAACK,GAAD,OAAaA,EAAQW,aAAa0B,cAmBlCC,YAhBkB3C,GAClB,SAACK,GAAD,OAAaA,EAAQW,aAAa2B,eAgBlCX,oBAyCG,SAASY,EACdC,EACAC,GAEAC,qBAAU,WACR,IAAMC,EAAW,SAACC,GAChB,IAAMC,EAAE,OAAGL,QAAH,IAAGA,OAAH,EAAGA,EAAKM,QAGXD,IAAMA,EAAGE,SAASH,EAAMI,SAI7BP,EAAQG,IAMV,OAHAK,SAASC,iBAAT,YAAuCP,GACvCM,SAASC,iBAAT,aAAwCP,GAEjC,WAGLM,SAASE,oBAAT,YAA0CR,GAC1CM,SAASE,oBAAT,aAA2CR,MAI5C,CAACH,EAAKC,IAsGX,SAASW,EAKPC,EACAZ,EAGAa,GAGA,IAAMC,EAAeC,mBAErBd,qBAAU,WAER,IAAMe,GAAmC,OAAPH,QAAO,IAAPA,OAAA,EAAAA,EAASR,UAAWY,OACtD,GAAMD,GAAiBA,EAAcP,iBAArC,CAKIK,EAAaT,UAAYL,IAC3Bc,EAAaT,QAAUL,GAIzB,IAAMkB,EAAgC,SAACf,IAEhC,OAACW,QAAD,IAACA,OAAD,EAACA,EAAcT,UAClBS,EAAaT,QAAQF,IAOzB,OAHAa,EAAcP,iBAAiBG,EAAWM,GAGnC,WACLF,EAAcN,oBAAoBE,EAAWM,OAE9C,CAACN,EAAWC,EAASb,IAUnB,SAASmB,IAOd,MAAsBC,mBAAmB,MAAzC,mBAAOrB,EAAP,KAAYsB,EAAZ,KACA,EAAwBD,mBAAe,CACrCE,MAAO,EACPC,OAAQ,IAFV,mBAAOC,EAAP,KAAaC,EAAb,KAMMC,EAAaC,uBAAY,WAC7BF,EAAQ,CACNH,OAAU,OAAHvB,QAAG,IAAHA,OAAA,EAAAA,EAAK6B,cAAe,EAC3BL,QAAW,OAAHxB,QAAG,IAAHA,OAAA,EAAAA,EAAK8B,eAAgB,MAI9B,QAAC9B,QAAD,IAACA,OAAD,EAACA,EAAK8B,aAAN,OAAoB9B,QAApB,IAAoBA,OAApB,EAAoBA,EAAK6B,cAS5B,OAPAjB,EAAiB,SAAUe,GAE3BI,2BAAgB,WACdJ,MAEC,QAAC3B,QAAD,IAACA,OAAD,EAACA,EAAK8B,aAAN,OAAoB9B,QAApB,IAAoBA,OAApB,EAAoBA,EAAK6B,cAErB,CAACP,EAAQG,GAsBX,SAASO,IACd,MAAoCX,mBAAqB,CACvDE,MAAO,EACPC,OAAQ,IAFV,mBAAOS,EAAP,KAAmBC,EAAnB,KAKMP,EAAa,WACjBO,EAAc,CACZX,MAAOL,OAAOiB,WACdX,OAAQN,OAAOkB,eAYnB,OARAxB,EAAiB,SAAUe,GAG3BI,2BAAgB,WACdJ,MAEC,IAEIM,E,YCjXQI,EA1IG,CAChBC,SAAU,CACRC,KAAM,CAAEC,MAAO,IAEjBC,aAAa,u8DAuDbC,eAAe,68E,0BClCZ,SAASC,EAAWC,GACzB,GAAIA,EAAM,CACR,IAAMC,EAAI,IAAIC,KAAKF,GACfG,EAAQ,IAAMF,EAAEG,WAAa,GAC7BC,EAAM,GAAKJ,EAAEK,UACXC,EAAON,EAAEO,cAAcC,WAAWC,MAAM,GAK9C,OAHIP,EAAMQ,OAAS,IAAGR,EAAQ,IAAMA,GAChCE,EAAIM,OAAS,IAAGN,EAAM,IAAMA,GAEzB,CAACF,EAAOE,EAAKE,GAAMK,KAAK,KAE/B,MAAO,cAsBJ,SAASC,EAAsBC,EAAaC,GAEjD,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAG/C,SAASK,EAAaL,EAAaC,GACxC,OAAOC,KAAKE,UAAYH,EAAMD,GAAOA,EC1DvC,IAAIM,EAAoB,IAAIC,UAAc,EAAG,GAE7C,SAASC,EAAIC,EAAGC,EAAGC,GACjB,OAAO,IAAIJ,UAAcE,EAAGC,EAAGC,GAGjC,IAEMC,EAAa,CACjBC,KAAML,EAAI,IAAK,EAAG,IAClBM,WAAYN,EAAI,IAAK,EAAG,IACxBO,WAAYP,EAAI,GAAI,EAAG,IACvBQ,OAAQR,EAAI,IAAK,GAAI,IACrBS,SAAUT,EAAI,GAAG,GAAG,IACpBU,UAAWV,EAAI,IAAI,IAAI,KACvBW,IAAKX,EAAI,IAAK,EAAG,IAGb5B,EAAW,CACfwC,KAAM,CAAEC,KAAM,KAAMvC,MAAO8B,EAAWM,WACtCI,SAAU,CAAED,KAAM,KAAMvC,MAAO8B,EAAWM,WAC1CK,SAAU,CAAEF,KAAM,KAAMvC,MAAO8B,EAAWM,WAC1CM,SAAU,CAAEH,KAAM,KAAMvC,MAAO8B,EAAWM,WAC1CO,OAAQ,CAAEJ,KAAM,IAAKvC,MAAO,GAC5B4C,oBAAqB,CAAEL,KAAM,KAAMvC,MAAOwB,IActCqB,EAAkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnBC,EAAoBvE,mBACtBwE,EAAI,EACJC,EAAI,EAEJC,EAAIjC,EAAsB,EAAE,IAC5BkC,EAAIlC,EAAsB,EAAG,IAC7BmC,GAAS,EAyBb,OAvBAC,aAAS,YAAe,EAAZC,MACVP,EAAkBjF,QAAQgC,SAAS8C,oBAAoB5C,MAAQ,IAAIyB,UAAcwB,EAAGA,GACpFF,EAAkBjF,QAAQgC,SAAS2C,SAASzC,MAAQ,IAAIyB,UAvBlD,SAAUyB,EAAGC,EAAGH,GACxB,OAAO5B,KAAKC,MAAM,IAAM,GAAKD,KAAKmC,KAAKL,EAAIA,EAAIC,EAAIA,GAAK,IAAMH,IAsBUQ,CAAEN,EAAGC,EAAGH,EAAI,GAnB5E,SAAUE,EAAGC,EAAGH,GACxB,OAAO5B,KAAKC,MAAM,IAAM,GAAKD,KAAKqC,KAAKP,EAAIA,EAAI9B,KAAKmC,IAAIP,EAAI,GAAKG,EAAIA,EAAI/B,KAAKqC,IAAIT,EAAI,IAAM,MAkBJU,CAAER,EAAGC,EAAGH,EAAI,GAf5F,SAAUE,EAAGC,EAAGH,GACxB,OAAO5B,KAAKC,MAAM,IAAM,GAAKD,KAAKqC,IAAI,EAAIrC,KAAKqC,IAAIT,EAAI,KAAOE,EAAI,MAAQA,EAAI,MAAQC,EAAI,MAAQA,EAAI,MAAQ,OAcNQ,CAAET,EAAGC,EAAGH,EAAI,IAElHD,EAAkBjF,QAAQgC,SAAS6C,OAAO3C,MAAQgD,EAC9CA,EAAI,KAAQ,KACC,IAAXI,GACFF,GAAK,IACI,IACPE,GAAS,IAGXF,GAAK,IACI,KACPE,GAAS,IAKfH,GAAQ,IACRD,GAAQ,OAIR,0BAAMF,SAAUA,EAAUc,SAAU,CAACnC,YAAgBoC,SAAS,GAAIpC,YAAgBoC,SAAS,GAAIpC,YAAgBoC,SAAS,MACtH,mCAAeC,OAAO,WAAWC,KAAM,CAAC,IAAKrF,OAAOiB,WAAa,EAlE5C,SAmErB,oCACEmE,OAAO,WACP7D,aAAcJ,EAAYI,aAC1BC,eAAgBL,EAAYK,eAC5BJ,SAAUA,EACVtC,IAAKuF,MAiBEiB,EAXU,WACvB,IAAMC,EAAMzF,mBACZ,OACE,kBAAC,IAAD,CAAQ0F,GAAI,CAAEC,WAAW,EAAOC,OAAO,IACrC,kBAACC,EAAA,EAAD,CAAmB7G,IAAKyG,EAAKnB,SAAU,CAAC,EAAG,EAAG,GAAIwB,IAAK,GAAIC,OAAQ7F,OAAOiB,WAAajB,OAAOkB,YAAa4E,KAAM,GAAKC,IAAK,MAC3H,kBAAC,EAAD,CAAiB3B,SAAU,CAAC,EAAG,GAAI,KAAM4B,eAAgB,MACzD,kBAACC,EAAA,EAAD,QCvFAC,EAAa,WACjB,IAAQrI,EAAYT,IAAZS,QAER,EAA8CsC,mBAAS,CACrDgG,gBAAiB,SADnB,mBAAOC,EAAP,KAAwBC,EAAxB,KAGArH,qBAAU,WACR,IAAMsH,EAAQ,CACZlC,SAAU,WACV9D,OAAQ,QACRD,MAAO,QACPkG,IAAK,EACLC,KAAM,EACNL,gBAAiBtI,IAAYpC,EAAQgL,KAAO,UAAY,OACxDC,WAAY,8BAEdL,EAAmBC,KAClB,CAACzI,IAEJ,IAAM8I,EAAkBC,IAAW,uBAAwB,CACzD,oCAAqC/I,GAAWpC,EAAQoL,QACxD,iCAAkChJ,GAAWpC,EAAQgL,OAavD,OAAOK,IAASC,aACd,yBAAKC,UAAWL,EAAiBL,MAAOF,GACrCvI,IAAYpC,EAAQgL,KACnB,yBAAKH,MAbS,CAClBlC,SAAU,WACV9D,OAAQ,QACRD,MAAO,QACPkG,IAAK,EACLC,KAAM,EACNL,gBAAiB,YACjBO,WAAY,gCAQR,yBAAKM,UAAU,wBACb,yBAAKA,UAAU,oBACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,yBAIrBzH,SAAS0H,cAAc,iBAIZC,MAAMC,KAAKjB,G,gCCpBXkB,EAlBc,CAC3BC,SAA+D,IAC/DC,UACE,iGACFC,mBAAoB,GACpBC,kBAAmB,EAEnBC,kBAAmB,yBACnBC,SAAU,sCACVC,UAAW,CAAC,QAAS,cAAe,QACpCC,SAAU,EACVC,SAAU,EACVC,sBAAsB,EACtBC,iBAAiB,EACjBC,kBAAmB,GACnBC,iBAAkB,K,wDCAdC,GAAuC,SAAC,GAOvC,IANLC,EAMI,EANJA,KACAC,EAKI,EALJA,MACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,OACAC,EACI,EADJA,UAEA,EAA4BrI,oBAAS,GAArC,mBAAOsI,EAAP,KAAeC,EAAf,KACA,EAA4BvI,oBAAS,GAArC,mBAAOwI,EAAP,KACA,GADA,KACgCxI,oBAAS,IAAzC,mBAAOyI,EAAP,KAAiBC,EAAjB,KAOMC,GALqBlC,IAAW,sBAAuB,CAC3D,6BAA8BgC,EAC9B,+BAAgCA,IAGDhC,IAAW,mBAAoB,CAC9D,2BAA4B+B,KAG9B3J,qBAAU,cAEP,CAACqJ,IAEJ,IAAMU,EAAc,CAClBC,OAAQ,OACRC,UAAU,SAAD,OAAWb,EAAX,KACT/H,MAAM,GAAD,OAAY,EAAI+H,EAAX,IAAL,KACL9H,OAAO,GAAD,OAAY,EAAI8H,EAAX,IAAL,KACNc,gBAAiB,YAiBXC,EAAqBhB,EAArBgB,IAAKC,EAAgBjB,EAAhBiB,YAEb,OACE,yBACEpC,UAAW8B,EACXO,cAAe,WACbX,GAAWD,KAGI,UAAhBW,EACC,kBAAC,GAAD,CACEE,QAAS,SAACpK,GACR2J,GAAY,IAEdM,IAAKhB,EAAKgB,MAEM,UAAhBC,EACF,yBACEb,OAAQ,SAACrJ,GAEPqJ,EAAOrJ,EAAOiJ,IAEhBG,QAAS,SAACpJ,GACRoJ,EAAQpJ,EAAOiJ,IAGjBgB,IAAKA,EACL7C,MAAO,CACLjG,MAAO,OACPC,OAAQ,OACRkI,WACW,OAATA,QAAS,IAATA,IAAaH,IAAa3M,EAAS6N,SAAU,UAAY,QAC3DC,eACEnB,IAAa3M,EAAS6N,QAAU,UAAY,YAIlD,4BACEhB,OAAQ,SAACrJ,GACP2J,GAAY,IAEdM,IAAKA,EACL7C,MAAOmC,EAxDM,CACnBpI,MAAO,OACPC,OAAQ,OACR0I,OAAQ,YAqD6BD,MAO1B7B,OAAMC,KAAKe,IAgBpBuB,GAAmB,SAAC,GAMN,IALlBN,EAKiB,EALjBA,IACAG,EAIiB,EAJjBA,QAKA,OACE,yBAAKtC,UAAU,kBACb,kBAAC,KAAD,CACEA,UAAU,eACV0C,UAAQ,EACRpJ,OAAO,OACPqJ,OAAK,EACLL,QAASA,EACTM,SAAO,EACPC,IAAKV,EACL9I,MAAM,W,IAMQ6G,IAAM4C,c,6BChHbC,GArCA,SAAC,GAYsB,IAXpCC,EAWmC,EAXnCA,QACAC,EAUmC,EAVnCA,KACAC,EASmC,EATnCA,WACAlD,EAQmC,EARnCA,UACAmD,EAOmC,EAPnCA,WACA9J,EAMmC,EANnCA,MACAC,EAKmC,EALnCA,OACAgG,EAImC,EAJnCA,MACA8D,EAGmC,EAHnCA,eACAC,EAEmC,EAFnCA,SACAC,EACmC,EADnCA,OAEA,OACE,yBACEtD,UAAWoD,EACXG,UAAWP,EACX1D,MAAO,CAAEjG,MAAOA,EAAOC,OAAQ,SAE/B,kBAAC,KAAD,CACE4J,WAAU,OAAEA,QAAF,IAAEA,IAAc,UAE1BlD,UAAWA,EACXwD,OAAO,UACPH,SAAUA,EACV/J,OAAM,OAAEA,QAAF,IAAEA,SAAUmK,EAClBN,WAAU,OAAEA,QAAF,IAAEA,SAAcM,EAC1BH,OAAM,OAAEA,QAAF,IAAEA,IAAU,OAClBhE,MAAOA,EACPjG,MAAK,OAAEA,QAAF,IAAEA,SAASoK,GAEfR,KCpBMS,I,OA5BE,SAAC,GAME,IALlBC,EAKiB,EALjBA,KAMA,GADiB,EAJjB3D,UAKgC7G,oBAAS,IAAzC,6BAKA,OACE,oCACE,yBAAK6G,UAAW,eACd,wBAAIV,MANS,IAMWqE,EAAKC,OAE7B,qRAIgD,S,mBCEvCC,GAnBI,SAAC,GAA8D,IAA5Db,EAA2D,EAA3DA,QAA2D,EAAlDc,OAC7B,OACE,yBACE9D,UAAU,0BACVuD,UAAWP,EACXA,QAASA,EACTe,WAAY,SAACC,MAEb,yBAEA1E,MAAO,CAAC2E,QAAS,SAEf,kBAACC,GAAA,EAAD,CAAY3K,KAAM,Q,mBCAb4K,GAlBQ,SAAC,GAIJ,IAHlBnB,EAGiB,EAHjBA,QAIelK,mBACf,OACE,yBAAKkH,UAAU,4BAA4BuD,UAAWP,GACpD,yBAEE1D,MAAO,CAAE2E,QAAS,SAElB,kBAACG,GAAA,EAAD,CAAS7K,KAAM,Q,6BCkCjB8K,GAAW,SAAC,GAAyF,IAAxFT,EAAuF,EAAvFA,MAAOU,EAAgF,EAAhFA,SACtB,OACI,yBAAKtE,UAAU,kBACV4D,EACAU,IAKPC,GAAgB,SAAC,GAMH,IALlBC,EAKiB,EALjBA,SACApD,EAIiB,EAJjBA,MAKA,OACE,yBAAKpB,UAAU,uBACb,kBAAC,GAAD,CACEoD,eAAe,sBACf9J,OAAU,GACV6J,WAAY,kBAACsB,GAAA,EAAD,CAAiBlL,KAAM,KAEnCyJ,QAAS,WACPwB,GAAU,KAEZnL,MAAO,KAIT,2BAAOqL,SAAY,SAACV,GAAKQ,EAASG,SAASX,EAAE1L,OAAOgC,SAAUgF,MAAQ,CAACjG,MAAO,IAAKuL,aAAgB,GAAK/H,KAAK,OAAOvC,MAAS8G,EAAMjG,WAAWC,MAAM,EAAG,KACvJ,kBAAC,GAAD,CACEgI,eAAe,uBACf9J,OAAU,GACV6J,WAAY,kBAAC0B,GAAA,EAAD,CAAkBtL,KAAM,KAEpCyJ,QAAS,WACPwB,EAAS,KAGXnL,MAAO,OAMAyL,GA9EM,SAAC,GAOsB,IAN1CC,EAMyC,EANzCA,QACAP,EAKyC,EALzCA,SACAQ,EAIyC,EAJzCA,mBACAC,EAGyC,EAHzCA,YACA7D,EAEyC,EAFzCA,MAIM8D,EAAgBpM,iBAAO,MACvBqM,EAAqBtN,EAAkBqN,GAAe,WAAKD,GAAY,MACvEG,EAAY,CAChBnB,QAASc,EAAU,OAAS,QAG9B,OACE,uCAAK/E,UAAW,iBAAiBlI,IAAOoN,EAAe5F,MAAO8F,GAAeD,GACzE,kBAAC,GAAD,CAAUvB,MAAQ,qBACnB,2BACC5D,UAAU,SACV4E,aAAa,gBACbF,SAAU,SAACV,GAAKgB,EAAmBhB,EAAE1L,OAAOgC,QAC5CuC,KAAK,WAGL,kBAAC,GAAD,CAAU+G,MAAQ,WAClB,kBAAC,GAAD,CAAexC,MAAOA,EAAOoD,SAAUA,OCyCzCa,GAAmC,SAAC,GAOf,IANzBC,EAMwB,EANxBA,SACAhB,EAKwB,EALxBA,SACAiB,EAIwB,EAJxBA,OACA5B,EAGwB,EAHxBA,KACAX,EAEwB,EAFxBA,QAGMwC,GADkB,EADxBC,aAE+B3M,iBAAuB,OACtD,EAAiC1C,IAAzBS,EAAR,EAAQA,QAASD,EAAjB,EAAiBA,YACTQ,EAAeN,IAAfM,WACR,EAAmC+B,mBAASzE,EAASgR,MAArD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA8BzM,oBAAS,GAAvC,mBAAgB0M,GAAhB,WACA,EAAgC1M,oBAAS,GAAzC,mBAAiB0I,GAAjB,WAEA,EAAgD1I,mBACxB,YAAlB,OAAJwK,QAAI,IAAJA,OAAA,EAAAA,EAAMvB,aAA2B,SAAW,IAD9C,mBAAO0D,EAAP,KAAyBC,EAAzB,KAIMC,EAAmB9Q,GACvB,SAACO,GAAD,OAAWA,EAAMQ,aAAa+P,oBAGhChO,qBAAU,WACJnB,IAAYpC,EAAQoL,SACtBkG,EAAoB,OAEI,YAAlB,OAAJpC,QAAI,IAAJA,OAAA,EAAAA,EAAMvB,cACR2D,EAAoB,YAErB,CAACC,IAEJ,MAAyBC,aACvB,iBAAO,CACL5E,SAAU3M,EAASgR,KACnBE,YAAa9B,aAAO,SAACrO,EAAO4L,GAC1B5L,EAAM4L,SAAWA,KAEnBD,MACwB,WAAlB,OAAJuC,QAAI,IAAJA,OAAA,EAAAA,EAAMvB,aACFhC,EAAUI,kBACVJ,EAAUG,mBAChBiE,SAAUV,aAAO,SAACrO,EAAO2L,GACvB3L,EAAM2L,OAASA,KAEjB8E,oBAAqB,GACrBlB,mBAAoBlB,aAAO,SAACrO,EAAO0Q,GACjC1Q,EAAMyQ,oBAAsBC,KAE9BlB,YAAanB,aAAO,SAACrO,EAAO2Q,GAC1B3Q,EAAM4Q,SAAWD,KAEnBE,WAAYxC,aAAO,SAACrO,GAClBA,EAAM4Q,UAAY5Q,EAAM4Q,YAE1BA,UAAU,EACVf,SAAUA,EACViB,UAAWC,YAAS,CAAC,SAAC/Q,GAAD,OAAWA,EAAM4L,YAAW,SAACA,GAahD,OAZazB,IAAW,OAAQ,CAC9B,YAAa/I,IAAYpC,EAAQgL,KACjC,eACE5I,IAAYpC,EAAQoL,SAAWwB,GAAY3M,EAASgR,KACtD,eAAgBrE,IAAa3M,EAAS6N,QACtC,kBAAmBlB,IAAa3M,EAAS+R,YACzC,aAAc5P,IAAYpC,EAAQgL,OAAS6E,EAC3C,qBAAsBA,GAAYzN,GAAWpC,EAAQoL,QACrD,cACEpK,EAAM6P,WAAazQ,EAAS6R,OAAS7P,IAAYpC,EAAQgL,UAK/DkH,cAAeH,aAAS,SAAC/Q,GACvB,OAAOmK,IAAW,OAAQ,CACxB,cAAe/I,IAAYpC,EAAQgL,KACnC,eAAgB5I,IAAYpC,EAAQoL,QACpC,eAAgBpK,EAAM4L,WAAa3M,EAAS6N,aAGhDqE,gBAAiBC,aAAM,SAACvR,EAASwR,EAAV,GAA+B,IAAD,EAAfC,EAAe,EAAfA,SAI9BC,EAASzO,SAAS0O,eAAe,QAQvC,IAPKD,EAAO1H,MAAM4H,cAAgB,SAChCF,EAAO1H,MAAM4H,cAAgB,QAG/BC,YAAW,WACTH,EAAO1H,MAAM4H,cAAgB,QAC5B,KACCrQ,IAAYpC,EAAQoL,cAAqB4D,GAAV8B,EACjC,OAAQwB,IAAW1F,UACjB,KAAK3M,EAASgR,KAUZ,MACF,KAAKhR,EAAS6N,QACZjN,EAAQsQ,YAAYlR,EAASgR,MAClBnN,SAAS0O,eAAT,iBACTtD,QADS,IACTA,OADS,EACTA,EAAMyD,UADG,QACG,aAEX9H,MAAM+H,OAAS,WAQ5B,CAACxQ,IACD,SAACyQ,GACC,MAAO,CAAEC,UAAU,MAvFvB,mBAAO9R,EAAP,KAAcH,EAAd,KA2FMkS,EAAyB,CAC7BpG,MAAO3L,EAAM2L,MACboD,SAAUlP,EAAQkP,SAClBQ,mBAAoB1P,EAAQ0P,mBAC5BC,YAAa3P,EAAQ2P,aAGjBwC,EAAoB7H,IAAW,sBAAuB,CAC1D,6BACE+F,IAAgBjR,EAAS6N,SAAWoD,IAAgBjR,EAAS+R,YAC/D,+BAAgCd,IAAgBjR,EAASgR,OAGrDgC,EAAqB9H,IAAW,uBAAwB,CAC5D,+BAAgCnK,EAAM4L,WAAa3M,EAAS6N,QAC5D,kCAAmC9M,EAAM4L,WAAa3M,EAAS+R,YAC/D,4BAA6BhR,EAAM4L,WAAa3M,EAASgR,OAG3D,EZXiC,SAAC,GAQgB,IAPlDiC,EAOiD,EAPjDA,QACA7D,EAMiD,EANjDA,OACA8D,EAKiD,EALjDA,SAMA1H,IAAMlI,WAAU,WAId,OAHK4P,GACHC,IAEK,WACLC,QAIJ,IAAMD,EAAS,WACbtP,SAASC,iBAAiB,UAAWuP,IAGjCD,EAAU,WACdvP,SAASE,oBAAoB,UAAWsP,IAGpCA,EAAe,SAAC/D,GAChBA,EAAE2D,UAAYA,IAChB3D,EAAEgE,iBACFlE,EAAOE,KAIX,MAAO,CAAE6D,SAAQC,WYtBWG,CAAoB,CAC9CN,QAAS,GACT7D,OAAQ,WAEJ6B,IAAgBjR,EAAS+R,aACzBd,IAAgBjR,EAAS6N,SAEzBqD,EAAYlR,EAASgR,OAGzBkC,UAAU,IAGNM,GAbN,EAAQL,OAAR,EAAgBC,QAaS,WACvB,GAAIjR,GAAWpC,EAAQgL,MAAQkE,EAC7B,OACE,oCACE,kBAAC,GAAD,CACEX,QAAS,WACP5L,EAAWuM,EAAKyD,KAElBtD,OAAQ,WACN1M,EAAWuM,EAAKyD,OAGpB,kBAAC,GAAD,CACEpE,QAAS,SAACgB,GACR1O,EAAQgR,mBAQd6B,EAAiB,WACrB,GACExC,IAAgBjR,EAAS6N,SACzBoB,GACqB,WAArBA,EAAKvB,YAEL,OACE,kBAAC,GAAD,CAAUpC,UAAWvK,EAAMkR,cAAehD,KAAMA,KAyBhDyE,EAAqBtP,iBAAO,MAClCjB,EAAkBuQ,GAAoB,SAACpE,GACrCA,EAAEgE,iBACEvS,EAAM4L,UAAY3M,EAAS6N,SAC7BjN,EAAQsQ,YAAYlR,EAASgR,SA0CjC1N,qBAAU,WACJvC,EAAM4L,SAAa3M,EAAS6N,QAG5B9M,EAAM4L,SAAa3M,EAASgR,OAI/B,CAACjQ,EAAM4L,WAEV,IAAMgH,EAAW,CACf5G,OAAQ,CACN6G,QAAS,EACT5I,WAAY,CACV6I,MAAO1M,EAAa,GAAK,IACzB2M,SAAU,KAGdC,QAAS,CACPH,QAAS,EACT5I,WAAY,CACV8I,SAAU,KAGdE,KAAM,CACJJ,QAAS,EACT9K,EAAG,EACHC,EAAG,GAELkL,MAAO,CAELxJ,gBAAiB,OAEnByJ,OAAQ,CAGNN,QAAS,EACT5I,WAAY,CACV6I,MAAO1M,EAAa,GAAK,IACzB2M,SAAU,IAEZhL,EAAG,GAELqL,IAAK,CACHpL,EAAG5B,GAAc,IAAK,IACtByM,QAAS,EACT5I,WAAY,CACV6I,MAAO1M,EAAa,GAAK,IACzB2M,SAAU,MAShB,OAJAxQ,qBAAU,WACR8Q,QAAQC,IAAIjD,KACX,CAACA,IAGF,kBAACkD,EAAA,EAAOC,IAAR,CACEC,QAASpD,EACT9F,UAAWvK,EAAM8Q,UACjB4C,QAA+B,YAAlB,OAAJxF,QAAI,IAAJA,OAAA,EAAAA,EAAMvB,aAA2B,SAAW,GACrDgH,SAAS,WACTtR,IAAK0N,EACLlG,MAAO,CACL4C,gBAAiB,SACjBmH,WAAY,YACZ/P,OAAQ,OACR6F,gBAAiB1J,EAAMyQ,oBACvBoC,QAASzR,IAAYpC,EAAQoL,QAAU,EAAI,EAC3CpC,EAAG,GAEL4K,SAAUA,GAET/D,GACC,yBAAKtE,UAAWyH,GACd,yBACEzH,UAAW0H,EACXnE,UAAW,WACTjO,EAAQsR,kBACJ5D,GACFA,KAGJlL,IAAKsQ,GArJa,YAAlB,OAAJzE,QAAI,IAAJA,OAAA,EAAAA,EAAMvB,aACD,CAAC8F,IAAoBC,KAErB,CAACD,KAsJD5D,EAAS7O,EAAM2L,MAAO3L,EAAM4L,UA1GL,SAACnJ,EAAOiJ,GACxC,IAAQyC,EAAezC,EAAfyC,MAAOzB,EAAQhB,EAARgB,IACfvL,EAAY,CACV0S,UAAW,yBACXC,YAAa,cACbC,OAAO,SAAD,OAAW5F,GACjB6F,KAAMtH,IAER0D,GAAW,MAGmB,SAAC3N,EAAOiJ,GAClCtK,IAAYpC,EAAQoL,SACtBkG,EAAoB,UAEtBlE,GAAY,MA4FJ,kBAAC,GAAD,iBACM2F,EADN,CAEEzC,QAAStP,EAAM4Q,aArJA,WACzB,GAAIV,IAAgBjR,EAAS+R,YAC3B,OACE,kBAAC,GAAD,CACEzD,QAAS,WACP4C,EAAYlR,EAASgR,SAmJtBgE,MA0ELC,GAAe,SAAC,GAIF,IAHlB3G,EAGiB,EAHjBA,QAIA,OACE,yBAAKhD,UAAU,2BACb,kBAAC,GAAD,CAAQgD,QAASA,EAASC,KAAK,SAAS5J,MAAO,QAWtC6G,WAAMC,KAAKkF,I,4CC7fXuE,GAbA,WACb,OACE,yBAAK5J,UAAU,UACb,kBAAC6J,GAAA,EAAD,CAAStQ,KAAM,Q,uCC2CNuQ,GAtCY,SAAC,GAKrB,IAJLxF,EAII,EAJJA,SACAtE,EAGI,EAHJA,UAEG+J,GACC,EAFJzE,SAEI,oBAEJ,OACE,kBAAC,KAAD,iBAAeyE,EAAf,CAA2BlN,KAAM,aAC9B,SAACmN,EAAUC,GACV,OACE,yCACMD,EAASE,SADf,CAEEpS,IAAKkS,EAASE,SACdlK,UACEiK,EAASE,eACL,qBAA4BnK,EAC5B,aAAoBA,IAG1B,yBACEA,UACEiK,EAASE,eACL,8CACA,8CAGN,kBAAC,GAAD,OAED7F,EACA0F,EAASI,iBC/BTC,GAAY,SAAC,GAIN,IAHlBC,EAGiB,EAHjBA,aAIMC,EAAuBC,wBAAcC,cACrCC,EAoDR,SAA8BC,EAAcC,GAE1C,IADA,IAAMC,EAA+B,GAC5BpN,EAAI,EAAGA,EAAIkN,EAAMlN,IACxB,IAAK,IAAID,EAAI,EAAGA,EAAIoN,EAAMpN,IACxBqN,EAAaC,KAAK,CAAEtN,EAAGA,EAAGC,EAAGA,IAIjC,IAAMsN,EAAaF,EAAaG,KAAI,SAACC,GACnC,MAAO,CACLzN,EAAGyN,EAAGzN,EACNC,EAAGwN,EAAGxN,EACNyN,EAAG,EACHC,EAAG,EACHC,EAAE,eAAD,OAAiBH,EAAGzN,EAApB,aAA0ByN,EAAGxN,EAA7B,KACD4N,KAAM,EACNC,KAAM,EACNC,KAAM,EACNC,KAAM,EACNC,QAAQ,EAERC,aAAa,EACbC,aAAa,EACbC,cAAe,OASnB,MAAO,CACLC,GAAId,EACJe,GAAIf,EACJgB,GAAIhB,EACJiB,GAAIjB,EACJkB,IAAKlB,GAzFYmB,CACjB9L,EAAUQ,SACVR,EAAUS,UAENsL,EAAgBzB,EAAWmB,GAAGb,KAAI,SAACoB,GAAD,OAAOA,EAAEhB,KAEjD,OACE,yBACE9L,MAAO,CACLlC,SAAU,WACVmC,IAAK,EACLC,KAAM,EACNnG,MAAO,OACPC,OAAQ,OACR+N,OAAQ,IAGV,kBAACkD,EAAD,iBACMD,EADN,CAEEtK,UAAU,cACVqM,QAAS3B,EACTkB,cAAe,GACfU,kBAAkB,EAClBZ,aAAa,EACbC,aAAa,IAEZQ,EAAcnB,KAAI,SAACuB,EAAGC,GACrB,OACE,yBAAKC,IAAKF,GACR,kBAAC,GAAD,CACEjH,SAAUzQ,EAAS6X,YACnB1M,UAAW,kBACX2M,YAAaJ,EACbE,IAAKD,GAEL,kBAAC,GAAD,CACEC,IAAKF,EAELhH,OAAQgH,EACRjH,SAAUzQ,EAAS6X,YACnBjH,cAAc,YAUjBvF,OAAMC,KAAKkK,I,WCvBXuC,GApCD,WACZ,MAAwBzT,mBAAS,IAAIyB,MAArC,mBAAOF,EAAP,KAAamS,EAAb,KAuBA,OAXA7U,qBAAU,WACR,IAAM8U,EAAUC,aAAY,WAO5BF,EAAQ,IAAIjS,QAP8B,KAC1C,OAAO,WACLoS,cAAcF,OAShB,yBAAKxN,MAtBgB,CACrBhG,OAAQ,OACR2T,QAAS,QACTC,SAAU,SACV7T,MAAO,OACP8T,WAAY,IACZhH,MAAO,QACPiH,UAAW,eAgBT,yBAAK9N,MAAO,CAAE6G,MAAO,QAAS9C,SAAU,UAAxC,uBAGA,yBAAK/D,MAAO,CAAE6G,MAAO,QAAS9C,SAAU,UACrC3I,EAAK2S,mBAAmB,QAAS,CAAEC,QAAQ,EAAMC,UAAW,a,uCCEtDC,I,OAnCD,SAAC,GAaK,IAZlBlJ,EAYiB,EAZjBA,SACA7C,EAWiB,EAXjBA,OACAgM,EAUiB,EAVjBA,mBACAC,EASiB,EATjBA,QACAC,EAQiB,EARjBA,gBASA,OACE,kBAAC3E,EAAA,EAAOC,IAAR,CACEjJ,UAAW,kBACXV,MAAO,CACL2E,QAASxC,EAAS,OAAS,OAC3BpI,MAAO,QACPC,OAAQ,QACRsU,eAAgB,SAChBC,WAAY,UAGd3E,QAAS,CAAEzL,EAAG,IAEd,kBAAC,GAAD,CAAYiQ,QAASA,EAASC,gBAAe,OAAEA,QAAF,IAAEA,IAAmB,IAClE,yBAAKrO,MAAO,CAAE+H,OAAQ,KAAQrH,UAAWyN,GACtCnJ,MAYHwJ,GAAa,SAAC,GAAsD,IAApDJ,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,gBAC7B,OACE,yBACEpK,UAAWmK,EACXpO,MAAO,CAAEgJ,QAASqF,EAAiBtG,OAAQ,KAC3CrH,UAAW,uBC3BF+N,I,OAbD,SAAC,GAAgF,IAAD,EAA9EzJ,EAA8E,EAA9EA,SAAUtE,EAAoE,EAApEA,UAAWiN,EAAyD,EAAzDA,QAASe,EAAgD,EAAhDA,cACtCC,EAAa,CACfhB,QAAO,OAAEA,QAAF,IAAEA,IAAS,MAClBe,cAAa,OAAEA,QAAF,IAAEA,IAAe,UAGlC,OACE,yBAAK1O,MAAS2O,EAAYjO,UAAS,UAAE,SAAeA,SAAjB,QAA4B,IAC1DsE,KCsDM4J,GAhEO,SAAC,GAMH,IALlBzM,EAKiB,EALjBA,OACAiM,EAIiB,EAJjBA,QAsBA,OAHA1V,qBAAU,WACR8Q,QAAQC,IAAItH,KACX,CAACA,IACG3B,IAASC,aACd,kBAAC,GAAD,CACE0B,OAAQA,EAERiM,QAASA,EACTC,gBAAiB,GAEjB,kBAAC3E,EAAA,EAAOC,IAAR,CACEZ,SAzBW,CACf8F,OAAQ,CACN1Q,EAAG,IACH6K,QAAS,GAEX8F,QAAS,CACP9F,QAAS,EACT7K,EAAG,EACHiC,WAAY,CACV8I,SAAU,MAiBVlJ,MAAO,CACLjG,MAAO,OACPC,OAAQ,OACR6F,gBAAiB,QACjBkP,aAAc,GACdpB,QAAS,OAEX/D,QAASzH,EAAS,UAAY,UAE9B,kBAAC,GAAD,KACE,kBAAC6M,GAAA,EAAD,uBACA,6BACA,kBAACC,GAAA,EAAD,6DACA,yBACEvO,UAAU,eACVmC,IAAKqM,4CAEP,kBAACF,GAAA,EAAD,wBACA,6BACA,kBAACC,GAAA,EAAD,yDACA,yBACEvO,UAAU,eACVmC,IAAKqM,0CAKbjW,SAAS0O,eAAe,qBCLbwH,GApDE,WACf,MAAwBtV,mBAAS,IAAIyB,MAArC,mBAAaiS,GAAb,WAaA,EpBDK,SAAmB6B,GACxB,MAA0BvV,mBAAkBuV,GAA5C,mBAAOpU,EAAP,KAAcqU,EAAd,KAIA,MAAO,CAACrU,EAFY,kBAAMqU,GAAUrU,KoBFHsU,EAAU,GAA3C,mBAAOR,EAAP,KAAgBS,EAAhB,KAEA7W,qBAAU,WACR,IAAM8U,EAAUC,aAAY,WAO5BF,EAAQ,IAAIjS,QAP8B,KAC1C,OAAO,WACLoS,cAAcF,OAQE1W,IAAZS,QAER,OACE,yBAAKyI,MA3BgB,CACrBhG,OAAQ,OAERD,MAAO,OACPgK,SAAU,QACV8J,WAAY,IACZhH,MAAO,QACPiH,UAAW,aACXjO,gBAAiB,QAmBWiI,GAAG,4BAE7B,kBAAC,GAAD,CAAe3F,OAAQ2M,EAASV,QAASmB,IAGzC,kBAAC,GAAD,CACE3L,WAAW,UACXlD,UAAU,oBACVqD,SAAS,WAETF,WAAY,kBAAC2L,GAAA,EAAD,MACZ9L,QAAS6L,EACT5L,KAAK,gCAEL5J,MAAM,OACNC,OAAO,WCRAyV,GA5CQ,SAAC,GAUJ,IATlBC,EASiB,EATjBA,OACA5N,EAQiB,EARjBA,MACA6N,EAOiB,EAPjBA,SACAC,EAMiB,EANjBA,UAuBA,OACE,yBACElP,UAAU,eACVV,MAAO,CACLjG,MAAO4V,EAAWD,EAAO9D,EAAI+D,EAAW,OACxC3V,OAAQ4V,EAAYF,EAAO7D,EAAI+D,EAAY,OAC3CjN,UAAU,SAAD,OAAWb,EAAX,KACTc,gBAAiB,WACjBmM,aAAc,OACdnB,SAAU,WAzBK,SAACiC,GACpB,IAAIC,EAAO,8BACX,OAAQD,GACN,IAAK,QACHC,EAAO,kBAAC,GAAD,MACP,MACF,IAAK,OACHA,EAAO,kBAAC,GAAD,MACP,MACF,QACEA,EAAO,8BAGX,OAAOA,EAeJC,CAAaL,EAAO5H,MCyGZkI,GAnIW,SAAC,GA6BP,IA5BlBC,EA4BiB,EA5BjBA,OAGAjW,GAyBiB,EA3BjBzC,QA2BiB,EA1BjBwC,MA0BiB,EAzBjBC,QACAkW,EAwBiB,EAxBjBA,OACAC,EAuBiB,EAvBjBA,eACAC,EAsBiB,EAtBjBA,MACAC,EAqBiB,EArBjBA,QACA/E,EAoBiB,EApBjBA,KAEAc,GAkBiB,EAnBjBf,KAmBiB,EAlBjBe,aACAC,EAiBiB,EAjBjBA,YAkBMpU,GADW,EAhBjBqY,YAiBqBL,GAErBvX,qBAAU,WACR8Q,QAAQC,IAAR,OAAYxR,QAAZ,IAAYA,OAAZ,EAAYA,EAAc6P,MACzB,QAAC7P,QAAD,IAACA,OAAD,EAACA,EAAc6P,KAElB0B,QAAQC,IAAIxR,GAEZ,IAAMgT,EAAuBC,wBAAcC,cAErCoF,EAAqB,CACzBC,YAAa,CAAEjE,GAAI,KAAMC,GAAI,IAAKC,GAAI,IAAKC,GAAI,IAAKC,IAAK,GACzDrB,KAAM,CACJiB,GAAIjB,EACJkB,GAAIlB,EACJmB,GAAInB,EACJoB,GAAIpB,EACJqB,IAAKrB,GAEPsE,UAAW5V,EAAS8G,EAAUQ,SAE9B4O,OAAQA,EACRlD,kBAAkB,EAClByD,YAAa,MAIf,OADAjH,QAAQC,IAAI4G,GAEV,6BACE,yBAAK3P,UAAU,uBACb,kBAACuK,EAAD,iBACMsF,EADN,CAEE7P,UAAU,cACV0L,YAAW,OAAEA,QAAF,IAAEA,KACbC,YAAW,OAAEA,QAAF,IAAEA,KACbU,QAAO,OAAEkD,QAAF,IAAEA,IAAU,CAAE1D,GAAI,IACzBmE,YAAa,SAACT,EAAQU,EAASC,EAAS9F,EAAapG,EAAGpL,GAChCA,EAAQ0G,MAChB0C,OAAS,iBACvBpJ,EAAQ0G,MAAM0C,OAAS,kBAEzByN,eAAgBA,EAChBnD,kBAAgB,EAChBV,cAAe,CAAC,MAChBuE,iBAAe,IAEd,sBAAIT,GAAJ,YAAcC,IAAS3E,KACtB,SAAC7J,EAA6BqL,GAC5B,OACE,kBAACxD,EAAA,EAAOC,IAAR,CACEwD,IAAKtL,EAAKiG,GACVpH,UAAU,iBACVV,MAAO,CAAEjG,MAAO,QAChB+W,KAAM,CAAE3S,GAAI,MAEZ,kBAAC,GAAD,CACE6H,SAAUzQ,EAASwb,OACnBrQ,UAAU,iBACV2M,YAAaxL,EAAKiG,GAClBqF,IAAKD,GAEL,kBAAC,GAAD,CACEjH,OAAQiH,EAAMrR,WACdmK,SAAUzQ,EAASwb,OACnB1M,KAAMxC,EACNsE,aAAmC,WAArBtE,EAAKiB,aAEG,WAArBjB,EAAKiB,YACF,SAAChB,EAAOC,EAAUC,EAASC,GACzB,IAAM+O,EAAcnP,EACpB,OACE,kBAAC,GAAD,CACEA,KAAMmP,EACNlP,MAAOA,EACPC,SAAUA,EACVC,QAASA,EACTC,OAAQA,KAId,SAACH,GACC,OACE,kBAAC,GAAD,CACE4N,OAAQ7N,EACRC,MAAO,aAajC,kBAAC,GAAD,CAAWkJ,aAAcuF,MCtIzBU,GAAkB,SAAChL,GAGvB,IAAMiL,EAAYjL,EAAOkL,MAAM,KAAK,GAMpC,MAAO,CACLjT,EALQkT,OAAO/L,SAAS6L,EAAUG,OAAO,IAMzClT,EAJQiT,OAAO/L,SAAS6L,EAAUG,OAAO,MA2E9BC,GA/DQ,SAAC,GAIJ,IAHlBtM,EAGiB,EAHjBA,SAIA,EAA+CxN,IAAvCO,EAAR,EAAQA,QAASH,EAAjB,EAAiBA,SAAUQ,EAA3B,EAA2BA,gBAErBmZ,EAAuB3b,GAC3B,SAACO,GAAD,OAAWA,EAAMQ,aAAagB,mBAoDhC,OAAO,kBAAC,KAAD,CAAiB6Z,UAjDN,SAACC,GAA0B,IAAD,IAC1C,IAAI,UAAAA,EAASC,mBAAT,eAAsBrE,eAAtB,UAAqCoE,EAASvH,cAA9C,aAAqC,EAAiBmD,aAA1D,CAEA,IAAQnD,EAAqCuH,EAArCvH,OAAQwH,EAA6BD,EAA7BC,YAAaC,EAAgBF,EAAhBE,YAO7B,GANAnI,QAAQC,IAAR,uBACkBkI,EADlB,sBAEID,QAFJ,IAEIA,OAFJ,EAEIA,EAAarE,YAFjB,mBAGqB,QAGhBqE,EACL,OAAQxH,EAAOmD,aACb,KAAK7X,EAAWoc,WACd,GAAIF,EAAYrE,YACd,GAAgBqE,EAAYrE,YA5BtBwE,WAAW,SA4ByB,CACxC,IAAMC,EAAUb,GAAgBS,EAAYrE,aAK5CtV,EAJiB,CACfga,SAAUJ,EACVK,eAAgBF,IAGlBtI,QAAQC,IAAI,gDAEZ7R,EAAS,CACPma,SAAUJ,EACVM,SAAUP,EAAYrE,cAI5B,MACF,KAAK7X,EAAW0c,cACd,IAAMJ,EAAUb,GAAgBS,EAAYrE,aAK5CtV,EAJiB,CACfga,SAAUJ,EACVK,eAAgBF,IAGlB,MACF,KAAKtc,EAAW2c,aACd,IAAMC,EAAYb,EAAqBc,QACrC,SAACC,GAAD,OAAOA,EAAExK,KAAO6J,KAChB,GACFvZ,EAAgBga,GAChB,MACF,QACE5I,QAAQC,IAAI,8BAI6BzE,I,6KCrC3CuN,GAAe,SAAC,GAOqB,EANzCC,QAM0C,IAL1C9R,EAKyC,EALzCA,UACAsE,EAIyC,EAJzCA,SACAyN,EAGyC,EAHzCA,QAEGhI,GACsC,EAFzC5I,KAEyC,oBACzC,IAAKjB,IAAM8R,eAAe1N,GAAW,OAAO,+BA1CjB,WAC3B,IAAM1L,EAAUE,iBAAuBP,SAAS0Z,cAAc,QAAQ7Z,QAEtEJ,qBAAU,WACR,GAAIY,EAUF,OATAA,EAAQ0G,MAAM4H,cAAgB,OAC9BtO,EAAQ0G,MAAMlC,SAAW,WACzBxE,EAAQ0G,MAAMhG,OAAS,OACvBV,EAAQ0G,MAAMjG,MAAQ,OACtBT,EAAQ0G,MAAMC,IAAM,IAGpBhH,SAAS2Z,KAAKC,YAAYvZ,GAEnB,WACLL,SAAS2Z,KAAKE,YAAYxZ,MAG7B,CAACA,IA0BoByZ,GAExB,OACE,kBAAC,KAActI,GACZ,SAACC,EAAUC,GACV,IAAMqI,EAAuBP,EAAU/H,EAASuI,gBAAkB,GAgBlE,OAdEtI,EAASuI,YACTxI,GACAA,EAASyI,gBACTzI,EAASyI,eAAenT,QAGxB0K,EAASyI,eAAenT,MAAME,KAE5BwK,EAASyI,eAAenT,MAAMoT,WAEhC1I,EAASyI,eAAenT,MAAMC,IAE5ByK,EAASyI,eAAenT,MAAMqT,WAGhC,oCACE,sCACE3S,UAAWA,EACXlI,IAAKkS,EAASE,UACVF,EAASyI,eACTH,GAEHpS,IAAM0S,aAAatO,EAAU,CAAE0F,cAElC,wBACE1K,MAAO,CACL2E,QAASgG,EAASuI,WAAa,YAAc,OAC7CrT,gBAAiB8K,EAASuI,WAAa,QAAU,SAGlDtS,IAAM0S,aAAatO,EAAU,CAAE0F,mBAgB9C6H,GAAagB,aAAe,CAC1Bd,SAAS,GAGI7R,ICzHV4S,GAIAC,GDqHU7S,OAAMC,KAAK0R,I,QErGpBmB,GAAkB,SAAC5E,GAAD,MAA8B,CACpDnK,QAASmK,EAAU,OAAS,SAkDf6E,GA/CiC,SAAC,GAAD,QAC9C3Z,cAD8C,MACrC,GADqC,MAE9CD,aAF8C,MAEtC,GAFsC,MAG9C8M,aAH8C,MAGtC,QAHsC,MAI9C+M,iBAJ8C,MAIlC,kBAJkC,EAK9CC,EAL8C,EAK9CA,aACAC,EAN8C,EAM9CA,aAN8C,IAO9ChF,eAP8C,gBAS9C,yBACE9O,MAAK,6BAAO0T,GAAgB5E,IAAa+E,GACzCnT,UAAWoT,EACX,cAAY,mBAEZ,yBACE/Z,MAAOA,EACPC,OAAQA,EACR+Z,QAAQ,cACRC,MAAM,6BACNC,KAAMpN,EACN,aAAY+M,EACZ,cAAY,eAEZ,0BAAMvY,EAAE,0WACN,sCACE6Y,cAAc,YACd3W,KAAK,SACL4W,KAAK,UACLC,GAAG,aACHC,IAAI,OACJC,YAAY,gBAGhB,0BAAMjZ,EAAE,m+BACN,sCACE6Y,cAAc,YACd3W,KAAK,SACL4W,KAAK,UACLC,GAAG,YACHC,IAAI,KACJC,YAAY,mBChDPC,GAXC,SAACC,GACf,OACE,yCACMA,EADN,CAEExU,MAAK,6BACCwU,EAAMxU,OAAS,IADhB,IAEH2E,QAAS,a,UCLX8P,GAAU,SAAC,GAcG,IAblBvW,EAaiB,EAbjBA,EACAC,EAYiB,EAZjBA,EACA6G,EAWiB,EAXjBA,SACA8J,EAUiB,EAVjBA,QACA/U,EASiB,EATjBA,MACAC,EAQiB,EARjBA,OAUMS,EAAaD,IAEnB,OAAOiG,uBACL,oCACE,kBAACiU,GAAA,EAAD,KACG5F,GACC,kBAACpF,EAAA,EAAOC,IAAR,CACEC,QAAS,CACPZ,QAAS,EACT5I,WAAY,CACV6I,MAAO,GACPC,SAAU,GACVyL,KAAM,WAGV7D,KAAM,CAAE9H,QAAS,GACjBhJ,MAAO,CACLH,gBAAiB,QACjB+U,UAAW,sCACX7a,MAAK,OAAEA,QAAF,IAAEA,IAlBL,GAkBcU,EAAWV,MAC3BC,OAAM,OAAEA,QAAF,IAAEA,IAnBN,GAmBgBS,EAAWT,OAC7B8D,SAAU,WACVI,EAAGA,EACHC,EAAGA,EACH0W,aAAc,WACdjS,gBAAiB,WACjBmM,aAAc,OACdnB,SAAU,WAGX5I,KAMT/L,SAAS0H,cAAc,sBAIZC,OAAMC,KAAK4T,ICpBXK,GArCK,SAAC,GAYD,IAXlBC,EAWiB,EAXjBA,YACAC,EAUiB,EAVjBA,UACAC,EASiB,EATjBA,mBACAvU,EAQiB,EARjBA,UACAwU,EAOiB,EAPjBA,aASA,EAA0Crb,oBAAS,GAAnD,mBAAOsb,EAAP,KAAsBC,EAAtB,KAEMC,EAAiBN,IAAgBG,EAEvC,OACE,wBACExU,UAAS,OAAEA,QAAF,IAAEA,IAAa,4BACxBgD,QAAS,WACPsR,EAAUD,GACVK,GAAkBD,GAClBF,EAAmBE,K3BapB,SAAqBG,GAC1B,IACMhR,EADQgR,EAAInE,MAAM,KACJzF,KAAI,SAACE,GAAD,OAG1B,SAA6B0J,GAAc,IAAD,EAClCC,EAAQ,qBAQd,OAJA,WAFAD,EAAMA,EAAIE,eAENC,MAAMF,UAAV,SAAkBG,SAAQ,SAACC,GACzBL,EAAMA,EAAIM,QAAQD,EAAMA,EAAKE,kBAGxBP,EAZwBQ,CAAoBlK,MAAI5P,KAAK,KAC5D,OAAOsI,E2BbFyR,CAAYhB,GACZM,GAAiBF,EACd,SACAE,IAAkBF,EAClB,SACA,KCsIJa,GAAgB,SAAC,GAA+C,IAA7CnU,EAA4C,EAA5CA,KACfgB,EAAmBhB,EAAnBgB,IAAKiF,EAAcjG,EAAdiG,GAAIxD,EAAUzC,EAAVyC,MAEX2R,EAASnO,EAAK,QAEpB,EAAgCjO,mBAAS,CAAC,EAAG,IAA7C,mBAAOiE,EAAP,KAAiBoY,EAAjB,KACA,EAA8Brc,oBAAS,GAAvC,mBAAOsc,EAAP,KAAgBC,EAAhB,KAEA,EAA0Cvc,oBAAS,GAAnD,mBAAsBwc,GAAtB,WACA,EAAwCxc,qBAAxC,mBAAOyc,EAAP,KAAqBC,EAArB,KA0BA,OACE,yBACEC,aA1BqB,SACvB5d,GAEA2d,EACE1O,YAAW,WAAO,IAAD,EACP4O,EAAU7d,EAAV6d,MAGAvY,GAFA,UAAGjF,SAAS0O,eAAesO,UAA3B,aAAG,EACPS,eACaC,wBAATzY,EACRgY,EAAY,CAAChY,EAAI,IAAKuY,IACtBL,GAAW,KACV,OAgBHQ,aAZqB,SACvBC,GAEIP,IACFQ,aAAaR,GACbF,GAAW,KAQXpW,MAAO,CAAE2E,QAAS,SAElB,yBAAKmD,GAAImO,EAAQjW,MAAO,CAAE2E,QAAS,OAAQ5K,MAAO,KAChD,kBAAC,KAAD,CACE2G,UACEmB,EAAKkV,SAAW,qBAAuB,uBAEzCC,cAAa,UAAK9H,wBAAL,sBACbrM,IACuB,UAArBhB,EAAKiB,YACDD,EADJ,kEAE+DhB,EAAKgB,KAEtE7C,MAAO,CAAEjG,MAAO,OAAQkd,SAAU,OAGtC,kBAAC,GAAD,CAASnI,QAASqH,EAASjY,EAAGJ,EAAS,GAAIK,EAAGL,EAAS,IACrD,kBAAC,GAAD,CACE+D,KAAMA,EACNE,SAAU3M,EAASgR,KACnBlE,UAAW,UACXF,QAAS,SAACkV,KACVjV,OAAQ,SAACiV,GACPb,GAAiB,IAEnBvU,MAAO,KAGX,yBACE9B,MAAO,CACLmX,UAAW,OACXC,aAAc,OACdC,UAAW,OACXC,YAAa,QAGdhT,KAMMiT,GAnOK,WAClB,IAAMC,EAAiB5hB,GACrB,SAACO,GAAD,OAAWA,EAAMM,SAAS+gB,kBAG5B,EAAoChgB,IAA5Ba,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,YAEpB,EAAkCuB,qBAAlC,mBAAO4d,EAAP,KAAkBC,EAAlB,KACA,EAA8C7d,oBAAS,GAAvD,mBAAO8d,EAAP,KAAwB1C,EAAxB,KACA,EAAkCpb,mBAAS2d,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KACA,EAAoChe,mBAAS,IAA7C,mBAAOie,EAAP,KAAmBC,EAAnB,KACA,EACEle,mBAAqB2d,GADvB,mBAAOQ,EAAP,KAAsBC,EAAtB,KAIAvf,qBAAU,WACR,GAAI,EAAIof,EAAW/b,OAAQ,CACzB,IAIMmc,EAJaC,KAAUC,GAC3BN,EACAF,EAAUlM,KAAI,SAACoB,GAAD,OAAOA,EAAExI,UAE8BoH,KACrD,SAAC1D,GAAD,OAAOA,EAAEhP,UAELqf,EAAWT,EAAUvF,QAAO,SAACvF,GAAD,OAChCoL,EAA0BI,SAASxL,EAAExI,UAEvC2T,EAAiBI,QAEjBJ,EAAiBL,KAElB,CAACE,EAAYF,IAGhBlf,qBAAU,WACR,IAAMyU,EAAMsK,EAGNc,EAFK,YAAOf,GAEQgB,MAAK,SAACC,EAAG5b,GACjC,IAAM6b,EAAQD,EAAEtL,GACVwL,EAAQ9b,EAAEsQ,GAChB,GAAIuL,GAASC,EAAO,CAClB,GAAID,EAAQC,EACV,OAAQ,EAEV,GAAIA,EAAQD,EACV,OAAO,EAGX,OAAO,MAERf,GAAkBY,EAAYK,UAC/Bf,EAAaU,KACZ,CAACd,EAAWD,EAAgBG,IAG/B,OACE,yBAAKjX,UAAU,0BACb,kBAAC,GAAD,CAASV,MAAO,CAAE2N,QAAS,UACzB,kBAACkL,GAAA,EAAD,CACEzT,SAAU,SAACxM,GAAD,OACRmf,EAAcnf,EAAMkgB,cAAc9d,QAEpC8P,YAAY,eACZ/Q,MAAM,QAER,kBAAC,GAAD,CACE6J,WAAW,UACXI,OAAO,SACPN,QAAS,SAACmT,GACRve,KAEFqL,KAAK,iBAEP,kBAAC,GAAD,CACEC,WAAW,UACXI,OAAO,SACPN,QAAS,SAACmT,GACRxe,KAGFsL,KAAK,eAGT,kBAAC,GAAD,CACEqC,SAAUzQ,EAAS6R,MACnB1G,UAAU,kBACV2M,YAAa7X,EAAWoc,WACxBmH,gBAAc,GAEd,2BAAOrY,UAAU,sBACf,+BACE,4BACG,CAAC,QAAS,SAAU,SAASgL,KAAI,SAAC1D,EAAGkF,GACpC,OACE,kBAAC,GAAD,CACEgI,aAAcuC,EACd/W,UA1CO,wBA2CPqU,YAAa/M,EACbmF,IAAKD,EACL8H,UAAW0C,EACXzC,mBAAoBA,UAOhC,kBAAC,cAAD,CAAY+D,YAAU,EAACC,cAAe,IAAKC,cAAe,KACxD,2BAAOlZ,MAAO,CAAE2N,QAAS,QACvB,+BACGqK,EAActM,KAAI,SAAC7J,EAAMqL,GACxB,IAAQiM,EAA6CtX,EAA7CsX,MAAOrR,EAAsCjG,EAAtCiG,GAAIsR,EAAkCvX,EAAlCuX,OAAqBrC,GAAalV,EAA1BwX,YAA0BxX,EAAbkV,UACxC,OACE,kBAAC,GAAD,CACErW,UACEqW,EAAW,qBAAuB,uBAEpClV,KAAMA,EACN2Q,QAASjd,EAAS+jB,SAClB3H,YAAa7J,EACboF,MAAOA,EACPqM,eAAgBxC,EAChB5J,IAAKD,EAAMrR,YAEX,oCACE,4BACE,kBAAC,GAAD,CAAegG,KAAMA,KAEvB,4BAAKuX,GACL,4BAAKje,EAAWge,e,SCpIvBK,I,OAlBC,SACd/O,GAGA,OACE,yCACMA,EADN,CAEEzK,MAAK,6BACCyK,EAAWzK,OAAS,IADrB,IAEHjG,MAAO,UACP4T,QAAS,WAGVlD,EAAWzF,Y,mBCDHyU,I,OAZI,SAACjF,GAClB,OACE,yCACMA,EADN,CAEExU,MAAK,6BACCwU,EAAMxU,OAAS,IADhB,IAEH2E,QAAS,OACT+J,cAAe,gBCyHRgL,GAnGS,SAAC,GAGsB,IAF7C5K,EAE4C,EAF5CA,QACA6K,EAC4C,EAD5CA,gBAIMtjB,GAFcT,GAAc,SAACO,GAAD,OAAWA,EAAMQ,aAAasB,gBACrDrC,GAAc,SAACO,GAAD,OAAWA,EAAMQ,aAAaijB,iBAChChkB,GACrB,SAACO,GAAD,OAAWA,EAAMF,kBAAkBI,mBAKrC,EAA8BwD,mBAASiV,GAAvC,mBAAOrJ,EAAP,KACA,GADA,KACwC5L,oBAAS,IAAjD,mBAAOggB,EAAP,KAAqBC,EAArB,KACAtQ,QAAQC,IAAI,iBACajS,IAAjBS,aAAR,IACM8hB,EAAenkB,GAAc,SAACO,GAAD,OACjC6jB,KAAKC,UAAU9jB,EAAMQ,aAAasB,iBAE9BiiB,EAAetkB,GAAc,SAACO,GAAD,OACjC6jB,KAAKC,UAAU9jB,EAAMQ,aAAaujB,iBAoBpC,OAlBAxhB,qBAAU,WAIR8Q,QAAQC,IAAIyQ,KACX,CAACA,IACJxhB,qBAAU,WAIR8Q,QAAQC,IAAIsQ,KACX,CAACA,IAKJvQ,QAAQC,IAAIsQ,GAELI,IAAS1Z,aACd,kBAAC,GAAD,CACE2N,QAASuL,EACTxX,OAAQsD,EACR0I,mBAAmB,oBACnBE,gBAAiB,IAEjB,yBAAK3N,UAAW,qCACd,kBAAC,GAAD,CACEgD,QAASiW,EACTnV,OAAQ,eAIV,kBAAC,GAAD,KACE,yBAAKxE,MAAO,CAAEoa,aAAc,kBAAmBzM,QAAS,UACtD,kBAACqB,GAAA,EAAD,CAASnI,MAAM,QAAQ5M,KAAM,KAA7B,oBAGA,kBAAC+U,GAAA,EAAD,CAASnI,MAAM,QAAQ5M,KAAM,KAA7B,gCACoC,IAClC,uBACE+F,MAAO,CAAE6G,MAAO,aAChB7N,OAAO,SACPqhB,IAAI,aACJC,KAAMjkB,GAELA,KAIP,kBAAC,GAAD,CACE2J,MAAO,CACLhG,OAAQ,OACR2T,QAAS,QAETW,eAAgB,kBAGlB,yBAEEtO,MAAO,CAAEjG,MAAO,gBAEhB,kBAAC,GAAD,CACEwgB,OAAQ,SAAC7V,GACPoV,GAAgB,IAElBH,gBAAiBA,EACjBhW,KAAMoW,KAGV,kBAAC,GAAD,CAAkBlX,IC5H5B,kHD4H+CV,OAAQ0X,QAKrD5gB,SAAS0H,cAAc,wBAKrB6Z,GAAY,SAAC,GAUC,IATlB7W,EASiB,EATjBA,KAEA4W,GAOiB,EARjBZ,gBAQiB,EAPjBY,QAQA,GADiB,EANjBE,0BAOoD5gB,oBAAS,IAA7D,mBAA2B6gB,GAA3B,WACA,EAAgC7gB,oBAAS,GAAzC,mBAAiB8gB,GAAjB,WAkBA,OAhBAjiB,qBAAU,WACRkiB,UAAUC,UACPC,WACAC,MAAK,SAACC,GACDrX,IAASqX,GACXN,GAAsB,GACtBC,GAAY,KAEZA,GAAY,GACZD,GAAsB,OAGzBO,OAAM,SAAC5R,GACNG,QAAQH,MAAM,qCAAsCA,QAEvD,CAAC1F,IAEF,oCACE,kBAAC,GAAD,CACEE,WAAY,kBAACqX,GAAA,EAAD,MACZvX,KAAM,4BACND,QAAS,SAACgB,GACRkW,UAAUC,UAAUM,UAAUxX,GAC9BgX,GAAY,GACZJ,EAAO7V,IAET3K,MAAO,IACPC,OAAQ,IACRgK,OAAQ,UACRJ,WAAY,cAgBdwX,GAAmB,SAAC,GAMN,IALlBvY,EAKiB,EALjBA,IACAV,EAIiB,EAJjBA,OAKA,OACE,yBACEnC,MAAO,CACLjG,MAAO,IACPC,OAAQ,OACR4T,SAAU,SACV9P,SAAU,aAGZ,kBAAC4L,EAAA,EAAOC,IAAR,CACE3J,MAAO,CACLlC,SAAU,WACV/D,MAAO,OACPC,OAAQ,OACR6F,gBAAiB,MACjBkI,OAAQ,EACR9H,IAAK,EACLC,KAAM,EACN8I,QAAS,GACTrE,QAAS,OACT4J,WAAY,SACZ3G,cAAezF,EAAS,OAAS,OAEnCyH,QAASzH,EAAS,CAAE6G,QAAS,GAAM,IAEnC,yBACEhJ,MAAO,CACLjG,MAAO,MACPmW,OAAQ,OACRrC,WAAY,OACZnL,OAAQ,kBACRiL,QAAS,MACT9N,gBAAiB,QACjBmJ,QAAS,IARb,8DAcF,4BACEnG,IAAKA,EAGLwY,YAAa,EACbC,aAAc,EACdC,YAAa,EACbvb,MAAO,CACLlC,SAAU,WACVmC,IAAK,EACLC,KAAM,EACNnG,MAAO,OACPC,OAAQ,Y,UEjLHwhB,GAtDK,WAClB,IAAMjK,EAAuB3b,GAC3B,SAACO,GAAD,OAAWA,EAAMQ,aAAagB,mBAE1B8jB,EAAoB7lB,GACxB,SAACO,GAAD,OAAWA,EAAMQ,aAAasB,gBAGxBG,EAAoBZ,IAApBY,gBAER,OACE,6BACE,kBAAC,GAAD,CACEsI,UAAW,kBACX2M,YAAa7X,EAAW2c,aACxB4G,gBAAgB,EAChB/S,SAAUzQ,EAAS6R,OAEnB,+BACE,+BACE,4BACE,qCACA,0CACA,yCAIN,+BACE,+BACGmK,EAAqB7F,KAAI,SAAC4G,EAAGpF,GAC5B,IAAQpF,EAA6BwK,EAA7BxK,GAAWsR,GAAkB9G,EAAzBhO,MAAyBgO,EAAlB8G,QAAQD,EAAU7G,EAAV6G,MAC3B,OACE,wBAAIhM,IAAKD,EAAOxJ,QAAS,SAACgB,GAAD,OAAOtM,EAAgBka,KAC9C,wBACEnF,IAAKD,EACLlN,MAAO,CAAE2E,QAAS,OAAQ2J,eAAgB,WAEzCxG,KAAE,OAAK2T,QAAL,IAAKA,OAAL,EAAKA,EAAmB3T,KACzB,kBAAC4T,GAAA,EAAD,CAAiB7U,MAAM,YAEzB,kBAAC,GAAD,CAAaoJ,OAAQqC,KAEvB,4BAAKnX,EAAWge,IAChB,4BAAKC,YAajBuC,GAAc,SAAC,GAAqD,IAAnD1L,EAAkD,EAAlDA,OACrB,EAA8BpW,oBAAS,GAAvC,mBAAOsc,EAAP,KAAgBC,EAAhB,KAEA,EAAgCvc,mBAAS,CAAC,EAAG,IAA7C,mBAAOiE,EAAP,KAAiBoY,EAAjB,KACQ5R,EAAU2L,EAAV3L,MACR,EAA0B9J,IAAlBT,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAEPzC,EAAYT,IAAZS,QAEFqkB,EAAgB3L,EAAO4L,UACvBC,EAAmB7L,EAAOI,UAE1BD,EAAQxa,GAAc,SAACO,GAAD,OAC1BA,EAAMM,SAAS+gB,eAAenF,QAAO,SAACvF,GAAD,OAAO8O,EAActD,SAASxL,EAAEjK,WAGjEwN,EAAUza,GAAc,SAACO,GAAD,OAC5BA,EAAMM,SAASslB,iBAAiB1J,QAAO,SAACvF,GAAD,OACrCgP,EAAiBxD,SAASxL,EAAEhF,UAKhC,OACE,6BACE,yBACE0O,aAAc,SAAC9R,GACb,IAAQsX,EAAiBtX,EAAjBsX,MAAOvF,EAAU/R,EAAV+R,MACfP,EAAY,CAAC8F,EAAOvF,IACpBL,GAAW,IAEbQ,aAAc,SAAClS,GACb0R,GAAW,IAEbpW,MAAO,CACLic,eAAgB9F,EAAU,YAAc,KAGzC7R,GAGF/M,IAAYpC,EAAQgL,MAAQgW,GAC3B,kBAAC,GAAD,CACEpc,MArCM,GAqCCA,EACPC,OAtCM,GAsCEA,EACRkE,EAAGJ,EAAS,GACZK,EAAGL,EAAS,GACZgR,QAASqH,GAET,yBACEnW,MAAO,CACL2C,UAAU,SAAD,OA7CP,GA6CO,KACTC,gBAAiB,UACjB5I,SACAD,UAGF,kBAAC,GAAD,CACEuR,KAAMxK,EAAUS,SAChB8J,KAAMvK,EAAUQ,SAChBvH,MAAOA,EACPC,OAAQA,EACRiW,OAAQA,EAAOA,OACfC,OAAQ,CAAC,GAAI,IACb3Y,QAASpC,EAAQoL,QACjB4P,eAAgB,SAACmC,KACjBlC,MAAOA,EACPC,QAASA,QC7ER6L,GAnDG,WAChB,IAAMC,EAAcvmB,GAAc,SAACO,GAAD,OAAWA,EAAMQ,aAAaujB,gBACxDjiB,EAAiBT,IAAjBS,aACAlC,EAAuBD,IAAvBC,mBAER,EAAoD8D,oBAAS,GAA7D,mBAAOuiB,EAAP,KAA2BC,EAA3B,KAEA,EAAwCxiB,mBACtCmgB,KAAKC,UAAUhiB,IADjB,mBAAqBqkB,GAArB,WAQA,OAJA5jB,qBAAU,WACR4jB,EAAgBtC,KAAKC,UAAUkC,MAC9B,CAAClkB,EAAckkB,IAGhB,6BACE,kBAAC,GAAD,CACEnc,MAAO,CACL2E,QAAS,OACT5K,MAAO,OACPuU,eAAgB,eAGlB,kBAAC,GAAD,CACEzK,WAAY,kBAAC0G,GAAA,EAAD,MACZ7G,QAAS,SAACgB,GACR2X,GAAsB,IAExB1Y,KAAK,iBACL5J,MAAM,MACNiK,OAAO,UACPJ,WAAW,aAGdwY,GACC,kBAAC,GAAD,CACEzC,gBAAiB,WACf5jB,IACAsmB,GAAsB,IAExBvN,QAASsN,IAGb,6BACE,kBAAC,GAAD,SCyCOG,I,OA9ES,SAAC,GASQ,EAR/B/J,QAQgC,IAPhC9R,EAO+B,EAP/BA,UACAsE,EAM+B,EAN/BA,SAEA2M,GAI+B,EAL/Bc,QAK+B,EAJ/Bd,aACAzE,EAG+B,EAH/BA,MACAlT,EAE+B,EAF/BA,OACA8N,EAC+B,EAD/BA,GAEM0U,EAAqB5mB,GACzB,SAACO,GAAD,OAAWA,EAAMQ,aAAasB,gBAG5BwkB,EAAU,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAoBvM,OAAO1D,GACzCb,KAAI,SAAC4G,GAAD,OAAOA,EAAExG,KACbwM,SAAS3G,GAEZjZ,qBAAU,WACR+jB,EAAU,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAoBvM,OAAO1D,GACrCb,KAAI,SAAC4G,GAAD,OAAOA,EAAExG,KACbwM,SAAS3G,KACX,CAAC6K,IAOJ,OAAK5b,IAAM8R,eAAe1N,GAExB,yBACEhF,MAAO,CACL2E,QAAsB,QACtB3K,OAAM,OAAEA,QAAF,IAAEA,IAAU,KAIpB,kBAAC,KAAD,CAAW2X,YAAaA,EAAazE,MAAOA,IAGxC,SAACxC,EAAUC,GAkBT,OAhBAnB,QAAQC,IAAIgT,GAEV9R,EAASuI,YACTxI,GACAA,EAASyI,gBACTzI,EAASyI,eAAenT,QAGxB0K,EAASyI,eAAenT,MAAME,KAE5BwK,EAASyI,eAAenT,MAAMoT,WAEhC1I,EAASyI,eAAenT,MAAMC,IAE5ByK,EAASyI,eAAenT,MAAMqT,WAGhC,uCACEvL,GAAIA,EACJpH,UAAWA,EACXlI,IAAKkS,EAASE,UAEVF,EAASyI,eACTzI,EAASuI,iBAEZrS,IAAM0S,aAAatO,EAAU,CAAE0F,kBAvCF,gCC4C/BgS,GAtEI,WACjB,MAAwCllB,IAAhCS,EAAR,EAAQA,aAAcP,EAAtB,EAAsBA,cAChBqkB,EAAmBnmB,GACvB,SAACO,GAAD,OAAWA,EAAMM,SAASslB,oBAK5B,EACEliB,mBAAuBkiB,GADzB,mBAAOY,EAAP,KAAwBC,EAAxB,KASA,OANAlkB,qBAAU,WACRkkB,EACEb,EAAiB1J,QAAO,SAACzG,GAAD,QAAO,OAAC3T,QAAD,IAACA,OAAD,EAACA,EAAcoY,UAAUiI,SAAS1M,EAAE9D,WAEpE,CAACiU,EAAkB9jB,EAAcP,EAAcqE,SAGhD,kBAAC,GAAD,KACE,yBACEiE,MAAO,CACLH,gBAAiB,UACjBkP,aAAc,OACdnB,SAAU,SACVD,QAAS,QAGgB,GAA1BgP,EAAgB5gB,OACf,mDAEA,kBAAC,GAAD,CACEiK,SAAUzQ,EAAS6R,MACnB1G,UAAU,oBACV2M,YAAa7X,EAAW0c,cACxB6G,gBAAgB,GAEhB,kBAAC,GAAD,MACG,SAACjX,EAAO6N,EAAUC,GACjB,OAAO+M,EACJtK,QAAO,SAACzG,GAAD,QAAO,OAAC3T,QAAD,IAACA,OAAD,EAACA,EAAcoY,UAAUiI,SAAS1M,EAAE9D,QAClD4D,KAAI,SAACE,EAAGE,GACP,OACE,kBAAC,GAAD,CACEpL,UAAU,mBACV8R,QAASjd,EAASsnB,OAClBlL,YAAa/F,EAAE9D,GACf9N,OAAQ8H,EAAQ8J,EAAEC,EAAI+D,EACtB1C,MAAOpB,EACPyN,gBAAgB,EAChBpM,IAAKrB,EACLhE,GAAE,gCAA2B8D,EAAE9D,KAE/B,kBAAC,GAAD,CACE4H,OAAQ9D,EACR9J,MAAOA,EACP6N,SAAUA,EACVC,UAAWA,eAgB/BkN,GAAgB,SAAC,GAQH,IAPlB9X,EAOiB,EAPjBA,SAQM+X,EAAiBvjB,mBACvB,EAA4BK,mBAAS,GAArC,mBAAOmjB,EAAP,KAAeC,EAAf,KACA,EAA0BziB,IAAlBT,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAET2V,EAAW5V,EAAQ+G,EAAUS,SAC7BqO,EAAY5V,EAAS8G,EAAUQ,SAUrC,OARA5I,qBAAU,WACRqkB,EAAejkB,QAAUG,SAAS0O,eAChC,gBAEF6B,QAAQC,IAAIsT,EAAejkB,QAAQ6d,wBAAwB5c,OAC3DkjB,EAAUF,EAAejkB,QAAQ6d,wBAAwB5c,MAAQA,KAChE,CAACA,IAEG,6BAAMiL,EAAkB,IAATgY,EAAcrN,EAAUC,K,UCjC1CsN,GAAQ,SAAC,GAAwC,IAAtClY,EAAqC,EAArCA,SACf,OAAO,yBAAKhF,MAAO,CAAE6G,MAAO,UAAY7B,IAG3BmY,GA/EA,WACb,MAA8DrmB,IAAvCK,GAAvB,EAAQH,cAAR,EAAuBG,kBAAkBE,EAAzC,EAAyCA,iBAUzC,EAAsBwC,mBAAS,IAA/B,mBAAOujB,EAAP,KACA,GADA,KAC8Bxc,IAAM/G,UAAS,IAA7C,mBAAOwjB,EAAP,KAAgBC,EAAhB,KAEA5kB,qBAAU,WACR8Q,QAAQC,IAAI4T,GACZhmB,EAAiBgmB,GACbA,GAIFlmB,EAAiB2J,EAAUa,oBAE5B,CAAC0b,IAEJ3kB,qBAAU,WACR8Q,QAAQC,IAAI2T,KACX,CAACA,IAEJ,MAAuCxjB,IAAvC,mCAAoBG,MAApB,EAA2BC,OAE3B,OACE,yBAAKgG,MAAO,CAAEhG,OAAQ,OAAQ4N,cAAe,MAAO+F,QAAS,UAC3D,kBAACqB,GAAA,EAAD,CAAS/U,KAAM,IAAK+F,MAAO,CAAE6G,MAAO,UAApC,WAGA,yBAAK7G,MAAO,CAAEkQ,OAAQ,SACpB,kBAAC,GAAD,CAASlQ,MAAO,CAAEuO,WAAY,WAC5B,kBAAC,GAAD,uBACA,yBAAKvO,MAAO,CAAEsX,YAAa,SACzB,kBAACiG,GAAA,EAAD,CACEvd,MAAO,CAAEkQ,OAAQ,QACjBmN,QAASA,EACTjY,SAAU,SAACV,GAAD,OAAO4Y,EAAW5Y,EAAE1L,OAAOqkB,eAM7C,kBAAC,GAAD,QAgCAG,GAAa,WACjB,MAAkE1nB,IAA1DM,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,eAAgBC,EAAtC,EAAsCA,QAChCmnB,EAAQ,CADd,EAA+CvnB,eAChBE,EAAcC,EAAgBC,GACvDonB,EAAS,CAAC,eAAgB,UAAW,UAAW,eAEtD,OACE,kBAAC,GAAD,KACE,kBAAC1O,GAAA,EAAD,CAAS/U,KAAM,IAAK+F,MAAO,CAAE6G,MAAO,UAApC,iBAGA,kBAAC,GAAD,CACE7G,MAAO,CACL2N,QAAS,OACT9N,gBAAiB,UACjB+N,SAAU,WAGX6P,EAAM/R,KAAI,SAACvB,EAAM2B,GAAP,OACT,kBAAC,GAAD,CAAWxH,MAAOoZ,EAAO5R,GAAI3B,KAAI,OAAEA,QAAF,IAAEA,IAAQ,uBAO/CwT,GAAY,SAAC,GAMC,IALlBrZ,EAKiB,EALjBA,MACA6F,EAIiB,EAJjBA,KAKA,OACE,kBAAC,GAAD,CACEnK,MAAO,CACL2N,QAAS,OACT9N,gBAAiB,UACjB+N,SAAU,SACVU,eAAgB,kBAGlB,kBAACU,GAAA,EAAD,CAAShP,MAAO,CAAE6G,MAAO,UAAYvC,EAAQ,OAC7C,uBACEgW,KAAMnQ,EACNnK,MAAO,CACL6G,MAAO,QACP+G,SAAU,SACVgQ,aAAc,WACd3G,SAAU,OAEZje,OAAO,SACPqhB,IAAI,cAEHlQ,KCpHH0T,GAAe,SAAC,GAAiD,IAA/CxU,EAA8C,EAA9CA,MACdW,EAA4BX,EAA5BW,UAAWG,EAAiBd,EAAjBc,KAAMD,EAAWb,EAAXa,OAEzB,OACE,yBACElK,MAAO,CACL2E,QAAS,OACTgJ,QAAS,QACTe,cAAe,SAEf3U,MAAO,OACP+jB,YAAa,SACbje,gBAAiB,UACjBua,aAAc,kBACdtM,UAAW,eAGb,yBACE9N,MAAO,CACL6G,MAAO,UACPkX,cAAe,YACflQ,WAAY,SAJhB,iBAMO7D,IACP,6BAAME,GACN,6BACE,uBACEoQ,KAAMnQ,EACNkQ,IAAI,aACJra,MAAO,CAAE6G,MAAO,aAChB7N,OAAO,UAENmR,MAOI6T,GA3DK,WAClB,MAAwDznB,IAAhDC,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,aAAcE,EAAjC,EAAiCA,mBACjC,EAAsCgD,IAAtC,mBAAOqkB,EAAP,UAA0BjkB,OAC1B,OACE,yBACE0G,UAAU,kBACVV,MAAO,CAAEhG,OAAQ,IAAKD,MAAO,IAAKmkB,UAAW,WAG7C,yBAAK1lB,IAAKylB,EAAiBje,MAAO,CAAEjG,MAAO,SACxC,sBAAIvD,GAAJ,YAAkBE,GAAlB,YAAmCE,IAAoB8U,KACtD,SAACrC,EAAO6D,GACN,OAAO,kBAAC,GAAD,CAAc7D,MAAOA,EAAO8D,IAAKD,UCbrCiR,GARG,WAChB,OACE,yBAAKne,MAAO,CAAEhG,OAAQ,OAAQ4N,cAAe,QAC3C,kBAAC,GAAD,QCsCSwW,GA/BA,WACb,OACE,kBAAC,KAAD,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,gBACA,kBAAC,KAAD,gBACA,kBAAC,KAAD,gBACA,kBAAC,KAAD,qBACA,kBAAC,KAAD,eACS,kBAAC,GAAD,QAGX,kBAAC,KAAD,KACE,kBAAC,GAAD,OAEF,kBAAC,KAAD,KACE,kBAAC,GAAD,OAEF,kBAAC,KAAD,KACE,kBAAC,GAAD,OAEF,kBAAC,KAAD,KACE,kBAAC,GAAD,OAEF,kBAAC,KAAD,KACE,kBAAC,GAAD,SAQFC,GAAmB,WACvB,IAAQxnB,EAAcN,IAAdM,UACR,OACE,yBACEmJ,MAAO,CACLH,gBAAiBhJ,EAAUkF,OAAS,EAAI,UAAY,UACpDiN,QAAS,GACT+F,aAAc,MACdhV,MAAO,GACPC,OAAQ,GACRskB,YAAa,MACbva,SAAU,MACVY,QAAS,OACT2J,eAAgB,SAChBC,WAAY,SACZgQ,WAAY,QAGb1nB,EAAUkF,OAAS,GAAK,MAAQlF,EAAUkF,SCnD3CyiB,GAAc,WAClB,IAAMC,EAAgB7oB,GAAc,SAACO,GAAD,OAAWA,EAAMM,SAASc,WAE9D,EAAkCsC,oBAAS,GAA3C,mBAAO6kB,EAAP,KAAkBC,EAAlB,KAEMC,EAAmBte,IAAW,eAAgB,CAClD,qBAAsBoe,EACtB7P,OAAQ4P,IAAkBtpB,EAAQoL,QAClC,yBAA0Bme,IAEtBG,EAAcve,IAAW,SAAU,CACvC,iBAAkBme,IAAkBtpB,EAAQgL,OAG9C,OAAOga,IAAS1Z,aACd,kBAAC,KAAD,CACEqe,OAAQ,CACN5e,KAAM,EACND,IAAK,EACL8e,MAAOrlB,OAAOiB,WAAa,GAC3BqkB,OAAQtlB,OAAOkB,YAAc,IAE/BqkB,iBAAkBL,EAClBM,gBAAiB,CAAEhhB,EAAG,IAAKC,EAAG,KAC9BghB,OAAO,wBAEP,yBAAKze,UAAWme,EAAa/W,GAAG,gBAC9B,kBAAC,GAAD,KACE,kBAAC,GAAD,CACEsX,KAAM,kBAACC,GAAA,EAAD,MACNpb,UAAW,WACT0a,GAAa,MAGjB,kBAAC,GAAD,CACES,KAAM,kBAACE,GAAA,EAAD,MACNrb,UAAW,WACT0a,GAAa,OAInB,kBAAC,GAAD,QAGJ1lB,SAAS0H,cAAc,6BAIZC,OAAMC,KAAK2d,IAKpBe,GAAc,SAAC,GAAsD,IAApDva,EAAmD,EAAnDA,SACrB,OAAO,yBAAKtE,UAAU,oCAAoCsE,IAGtDwa,GAAY,SAAC,GAMC,IALlBJ,EAKiB,EALjBA,KACAnb,EAIiB,EAJjBA,UAKA,OACE,yBAAKvD,UAAU,gBAAgBuD,UAAWA,GACvCmb,I,UCzCQK,GA/BU,WACvB,IAAMC,EAAmB/pB,GACvB,SAACK,GAAD,OAAaA,EAAQS,SAASM,iBAG1B4oB,EAAiBC,cAAa,WAClCF,OAGIG,EAAwB,CAC5B/hB,SAAU,WACV/D,MAAO,GACPC,OAAQ,GACR0I,OAAQ5B,EAAUU,qBAAuB,gBAAkB,OAC3Dwd,OAAQ,EACR9e,KAAM,EACN8I,QAAS,GAIX,OAAOxI,IAASC,aACd,kBAACiJ,EAAA,EAAOC,IAAR,CACE3J,MAAK,6BAAO6f,GAAP,IAA8BhgB,gBAAiB,UACpDigB,SAAU,CAAEjgB,gBAAiB,QAASmJ,QAAS,IAE/C,uCAAKhJ,MAAO6f,GAA2BF,IAJzC,KAMA1mB,SAAS0H,cAAc,yBCnBZof,GAdA,SAAC,GAMI,IALlB/a,EAKiB,EALjBA,SAKiB,EAJjB2I,QAKA,OACE,yBAAK3N,MAAO,CAACjG,MAAO,QAASC,OAAQ,UAClCgL,I,UC6BQgb,GAjCG,SAAC,GAA0D,I9Cyf5CvnB,E8CzfZuM,EAAuD,EAAvDA,SACbib,EAASC,aAAQpf,EAAUC,UAAU,GAE3C,EAMIjK,IALFS,EADF,EACEA,QACAR,EAFF,EAEEA,cACAE,EAHF,EAGEA,cAEAG,GALF,EAIEF,gBAJF,EAKEE,kBAKF,GAF0BI,IAAlBU,c9CwTH,SACLioB,EACAlX,GAEA,IAAMmX,EAAgB5mB,iBAAO2mB,GACvBE,EAAc7mB,mBAiCpB,OA9BAe,2BAAgB,WACd6lB,EAActnB,QAAUqnB,IACvB,CAACA,IAGJznB,qBAAU,WAGR,GAAKuQ,GAAmB,IAAVA,EAAd,CAIA,IAAMnB,EAAK2F,aAAY,kBAAM2S,EAActnB,YAAWmQ,GAEtD,OADAoX,EAAYvnB,QAAUgP,EACf,kBAAM4F,cAAc5F,OAC1B,CAACmB,IAeG,CAAEqX,MAbKlmB,uBAAY,WACpBimB,EAAYvnB,SAAWmQ,IACzByE,cAAc2S,EAAYvnB,SAC1BunB,EAAYvnB,QAAU2U,YAAY2S,EAActnB,QAASmQ,MAE1D,CAACA,IAQYsX,KANHnmB,uBAAY,WACnBimB,EAAYvnB,SACd4U,cAAc2S,EAAYvnB,WAE3B,K8C1VqB0nB,EAAY,WAC9BjpB,IAAYpC,EAAQoL,SAAWtJ,GACjCG,EAAiB,KAGlB0J,EAAUa,mBALL2e,EAAR,EAAQA,MAAR,EAAeC,KAiBf,O9C2d+B9nB,E8Cred,WACf6nB,K9CqeFlnB,EAAiB,SAAS,SAACR,GACzBH,EAAQG,M8CneVF,qBAAU,WACJnB,IAAYpC,EAAQgL,MACtBpJ,MAED,CAACkpB,IAEGjb,GC0DMyb,GA/DH,WACV,I/C4P4BC,E+C5PpB3qB,EAAuBD,IAAvBC,mBAER,EACEyB,IADMS,EAAR,EAAQA,aAAcD,EAAtB,EAAsBA,gBAAiBP,EAAvC,EAAuCA,YAAaC,EAApD,EAAoDA,cAGpD,EAAqCZ,IAA7BS,EAAR,EAAQA,QAASL,EAAjB,EAAiBA,gB/CuPWwpB,E+CrPd,WACZ3qB,K/CsPF2C,oBAAUgoB,EAAQ,I+CnPlB,MAA0BlmB,IAAlBT,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAKf,OAHAtB,qBAAU,WACR8Q,QAAQC,IAAI/R,KACX,CAACA,IAEF,oCACE,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAQoX,QAAS5X,IACjB,kBAAC,GAAD,MACA,kBAAC,GAAD,KACE,kBAAC,IAAD,KACGe,GAAgBf,GACf,kBAAC,GAAD,CACEK,QAASA,EACT6Y,MAAK,YAAM3Y,GACX6T,KAAMxK,EAAUS,SAChBvH,OAAQA,EACRoS,YAAa7U,IAAYpC,EAAQgL,KACjCkM,YAAa9U,IAAYpC,EAAQgL,KACjC8P,OAAQhY,EAAagY,OACrBC,OAAQ,CAAC,GAAI,IACbC,eAAgB,SAACmC,GACf,IAAMF,EAAqB,CACzB7F,GAAI+F,EACJ9F,GAAI8F,EACJ7F,GAAI6F,EACJ5F,GAAI4F,EACJ3F,IAAK2F,GAEH/a,IAAYpC,EAAQgL,MACtBlI,EAAa0oB,cAAcvO,GAE7Bpa,EAAgBoa,IAElB/G,KAAMvK,EAAUQ,SAChB+O,QAAO,YAAM3Y,GACbqC,MAAOA,U,uCtBpFpByZ,K,6BAAAA,Q,cAIAC,K,+BAAAA,Q,SAuCUmN,G,WA/Bb,WAAYrd,GAAc,yBAH1BA,SAGyB,OAFzBsd,YAEyB,OADzBC,cACyB,EACvBC,KAAKF,OAAS,GACdE,KAAKD,SAAW,GAChBC,KAAKxd,IAAMA,E,4CAEb,SAAS3K,GAA8D,IAAD,EACpE4Q,QAAQC,IAAIsX,KAAKF,QACjB,IAAMG,EA4BV,SAAkB1L,GAChB,IAAI2L,EAAgB,GACJ,IAAIC,OAClB,wKAMA,KAEWC,KAAK7L,IAChB2L,EAAczV,KAAKiI,GAAkB2N,eAEvC,OAAOH,EA1C0BI,CAASN,KAAKxd,MAC7C,EAAAwd,KAAKD,UAAStV,KAAd,oBAAsBwV,IACtBxX,QAAQC,IAAIuX,K,qBAEd,WACE,OAA6B,GAAtBD,KAAKF,OAAO9kB,S,2BAErB,WAA2B,IAAD,OACpB8kB,EAAmB,GAYvB,OAXAE,KAAKF,OAAOnV,KAAI,SAAChH,GACf,GAAQA,IACD8O,GAAgB8N,aACnBT,EAAOrV,KAAP,sCACiC,EAAKjI,IADtC,gDAKAiG,QAAQC,IAAI,wCAGXoX,M,SuBnBUU,G,WAcnB,WAAYC,EAAiBtU,GAwD/B,IAAwB3J,EAxDuB,yBAbpCuE,QAamC,OAZnCjF,SAYmC,OAXnCyB,WAWmC,OAVnC6U,WAUmC,OARnCC,YAQmC,OAPnCC,iBAOmC,OANnCvW,iBAMmC,OALnC2e,cAKmC,OAJ5CC,eAI4C,OAH5C3K,cAG4C,OAF5C4K,YAE4C,EAE1CZ,KAAKjZ,GAAL,cAAiBoF,EAAjB,YAA0BsU,EAAIld,OAE9Byc,KAAKle,IAAM2e,EAAI3e,IACfke,KAAKzc,MAAQkd,EAAIld,MACjByc,KAAK5H,MAAQ,IAAI7d,KAAKkmB,EAAIrI,OAE1B4H,KAAK3H,OAASoI,EAAIpI,OAClB2H,KAAK1H,YACH/jB,EAAgBksB,EAAInI,aACtB0H,KAAKje,YAqDT,SAAmBS,GACjB,MAAmB,kBAARA,GACM,gCACD4d,KAAK5d,GAVjBqe,CADkBre,EA7Ccwd,KAAKle,KA8Cd,QAa7B,SAAiBU,GACf,MAAmB,kBAARA,GACM,uBACD4d,KAAK5d,GAfjBse,CAAQte,GAAa,QAmB3B,SAAiBA,GACf,MAAmB,kBAARA,GACJA,EAAI+U,SAAS,SApBhBwJ,CAAQve,GAAa,QAuB3B,SAAmBA,GACjB,MAAmB,kBAARA,GACJA,EAAI+U,SAAS,SAxBhByJ,CAAUxe,GAAa,UACpB,SAjDoB,WAArBwd,KAAKje,aAA4B0e,EAAIQ,YACvCjB,KAAKU,SAAW,CACdO,WAAYR,EAAIQ,YAElBjB,KAAKjZ,GAAK0Z,EAAIQ,aAEdjB,KAAKU,SAAW,CACd5e,IAAK2e,EAAI3e,IACTyB,MAAOkd,EAAIld,MACX6U,MAAO,IAAI7d,KAAKkmB,EAAIrI,OACpBpH,SAAUyP,EAAI3e,IACduW,OAAQoI,EAAIpI,QAEd2H,KAAKjZ,GAAK0Z,EAAI3e,KAGhBke,KAAKhK,UAAW,EAChBgK,KAAKW,UAAY,IAAId,GAAgBG,KAAKle,KAC1Cke,KAAKY,QAAS,E,6CAIhB,SAAU9kB,GACRkkB,KAAKhK,SAAWla,I,kBAGlB,WACE2M,QAAQC,IAAIsX,KAAKW,UAAUb,QAC3BE,KAAKY,QAAS,M,SCpEGM,G,WAQnB,WAAY5d,GAAmB,yBAPtByD,QAOqB,OANrBhF,iBAMqB,OALrB8I,OAKqB,OAJrBC,OAIqB,OAF9BkL,cAE8B,EAE5BgK,KAAKjZ,GAAKzD,EAAKyD,GACfiZ,KAAKnV,EAAIvH,EAAKuH,EACdmV,KAAKlV,EAAIxH,EAAKwH,EAEdkV,KAAKhK,UAAW,EAChBgK,KAAKje,YAAc,S,6CAErB,SAAUjG,GACRkkB,KAAKhK,SAAWla,M,KCJLwT,GALU,CACvB/R,MAdY,CAAEwJ,GAAI,QAAuB8D,EAAG,EAAGC,EAAG,GAelDqW,KAdW,CAAEpa,GAAI,OAAsB8D,EAAG,EAAGC,EAAG,ICiD5CpV,GAAyB,CAE7B6L,UAAU,EACVkV,eAAgB,GAChBuE,iBARuBoG,OAAOC,OAAO/R,IAAS3E,KAC9C,SAAC2W,GAAD,OAAgB,IAAIJ,GAAWI,MAQ/B3qB,cAAe,GACfD,YAAa,GACbjB,UAAW,GACXS,eAAe,EACfD,cAAe8J,EAAUa,iBACzBpK,QAASpC,EAAQoL,QAIjB+hB,qBAAsB/a,aAAM,SAACvR,EAASusB,GAEpC,OADAvsB,EAAQwsB,WAAWD,GACXA,GACN,KAAKptB,EAAQgL,KAEb,KAAKhL,EAAQoL,QAEb,KAAKpL,EAAQstB,WAMjB1rB,cAAewQ,aAAM,SAACvR,EAASwR,EAAV,GACnB,QAAQC,EADyC,EAAfA,YACflQ,SACjB,KAAKpC,EAAQgL,KACXnK,EAAQwsB,WAAWrtB,EAAQoL,SAC3B,MACF,KAAKpL,EAAQoL,QACXvK,EAAQwsB,WAAWrtB,EAAQgL,MAE7B,KAAKhL,EAAQstB,WAKjBC,kBAAmBle,aAAO,SAACrO,EAAOwsB,GAChCxsB,EAAMqhB,eAAiBmL,KAEzBC,eAAgBpe,aAAO,SAACrO,EAAOwsB,GAC7BxsB,EAAMsB,YAAckrB,KAEtBE,iBAAkBre,aAAO,SAACrO,EAAO2sB,GAC/B3sB,EAAMuB,cAAgBorB,KAExBN,WAAYhe,aAAO,SAACrO,EAAOosB,GACzBpsB,EAAMoB,QAAUgrB,KAElBprB,iBAAkBqN,aAAO,SAACrO,EAAO4sB,GAC/B5sB,EAAMa,cAAgB+rB,KAExB1rB,iBAAkBmN,aAAO,SAACrO,EAAO6sB,GAC/B7sB,EAAMc,cAAgB+rB,KAaxB1rB,YAAakN,aAAO,SAACrO,EAAOkT,GAC1B,IAAM4Z,EAAe9sB,EAAMK,UAAUkV,KACnC,SAACrC,GAAD,OAAW2Q,KAAKC,UAAU5Q,MAEtB6Z,EAAWlJ,KAAKC,UAAU5Q,GAE3B4Z,EAAa3K,SAAS4K,IACzB/sB,EAAMK,UAAUgV,KAAKnC,MAKzB8Z,uBAAwBC,aAEtB,SAACptB,EAASqtB,GAAV,OACEA,EAAaptB,kBAAkBqtB,wBAHJ,yCAK7B,WAAOttB,EAASgD,GAAhB,UAAAyf,EAAA,sDACEzf,EAAOuqB,QAAQC,aAAyB,SAASzI,MAAK,SAAC1P,GACrD,IAWM+E,EAXmB/E,EAAKK,KAAI,SAAC8V,GACjC,MAAO,CACL3e,IAAK2e,EAAI3e,IACTyB,MAAOkd,EAAIld,MACX6U,MAAOqI,EAAIrI,MACXsK,SAAUjC,EAAIiC,SACdrK,OAAQoI,EAAIpI,OACZC,YAAamI,EAAInI,gBAIU3N,KAC7B,SAACoB,EAAeI,GAAhB,OAA0B,IAAIqU,GAASzU,EAAGI,MAE5ClX,EAAQ0sB,kBAAkBtS,MAhB9B,2CAL6B,yDAyB/BsT,kBAAmBN,aACjB,SAACptB,EAASqtB,GAAV,OAA2BA,EAAa1sB,aAAayB,kBAD7B,yCAExB,WAAOpC,EAASia,EAAhB,6BAAAwI,EAAA,sDAA0BhR,EAA1B,EAA0BA,SAClBkc,EAAkB,IAAIC,IAAI3T,EAAOsT,QAAQ1H,WADjD,EAG+BpU,IAArBsU,EAHV,EAGUA,iBACR/lB,EAAQ6sB,iBACN9G,EAAiB1J,QAAO,SAACzG,GAAD,OAAOqE,EAAOsT,QAAQlT,UAAUiI,SAAS1M,EAAE9D,QAG/D+b,EAAwBpc,IAAW+P,eAAe9L,KAAI,SAAC7J,GAM3D,OALI8hB,EAAgBG,IAAIjiB,EAAKiG,IAC3BjG,EAAKO,WAAU,GAEfP,EAAKO,WAAU,GAEVP,KAEHpK,EAAcgQ,IAAW+P,eAAenF,QAAO,SAACxQ,GACpD,OAAO8hB,EAAgBG,IAAIjiB,EAAKiG,OAElC9R,EAAQ0sB,kBAAkBmB,GAC1B7tB,EAAQ4sB,eAAenrB,GApBzB,2CAFwB,2DA0B1BssB,kBAAmBX,aACjB,SAACptB,EAASqtB,GAAV,OAA2BA,EAAa1sB,aAAakB,kBAD7B,yCAExB,WAAO7B,EAASutB,EAAhB,qBAAA9K,EAAA,sDAA2BhR,EAA3B,EAA2BA,UACnBuc,EAAWvc,IAAWhQ,YAAYiU,KAAI,SAACoB,GAC3C,OAAOA,EAAEhF,KAAOyb,EAAQA,QAAQtR,SAC5BxK,IAAW+P,eAAeyM,MACxB,SAACnX,GAAD,OAAOA,EAAEhF,KAAOyb,EAAQA,QAAQxR,YAElCjF,OAGJ9W,EAAQ4sB,eAAeoB,GAT3B,2CAFwB,4DAiBbvtB,M,SCvLAytB,GAN4B,CACvCjU,OAXW,CAAE,GAAM,CAAC,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,QAAS,OAAS,EAAO,QAAU,GAAQ,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,yFAA0F,OAAS,EAAO,QAAU,GAAS,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,uFAAwF,OAAS,EAAO,QAAU,IAAU,GAAM,CAAC,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,QAAS,OAAS,EAAO,QAAU,GAAQ,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,yFAA0F,OAAS,EAAO,QAAU,GAAS,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,uFAAwF,OAAS,EAAO,QAAU,IAAU,GAAM,CAAC,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,QAAS,OAAS,EAAO,QAAU,GAAQ,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,yFAA0F,OAAS,EAAO,QAAU,GAAS,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,uFAAwF,OAAS,EAAO,QAAU,IAAU,GAAM,CAAC,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,QAAS,OAAS,EAAO,QAAU,GAAQ,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,yFAA0F,OAAS,EAAO,QAAU,GAAS,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,uFAAwF,OAAS,EAAO,QAAU,IAAU,IAAO,CAAC,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,QAAS,OAAS,EAAO,QAAU,GAAQ,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,yFAA0F,OAAS,EAAO,QAAU,GAAS,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,uFAAwF,OAAS,EAAO,QAAU,KAYpiEkU,eAPoC,CACpCnZ,aAJ+B,CAC/BoZ,uBAAwB,OAIxBC,aAAc,IAMdhU,QAAS,ICgBQiU,G,WASnB,WAAY9C,GAAoB,yBARvBld,WAQsB,OAPtB8U,YAOsB,OANtBD,WAMsB,OALtBrR,QAKsB,OAJtByc,kBAIsB,OAH/BtU,YAG+B,OAF/BuU,mBAE+B,EAC7B,MA2FJ,SAAuBhD,GACrB,IAAML,EAAOnH,KAAKyK,MAAMjD,EAAIvR,QAC5B,OAAOkR,EAAKlR,OAASkR,EAAO+C,GA7FPQ,CAAclD,GAAzBvR,EAAR,EAAQA,OACR8Q,KAAKjZ,GAAK0Z,EAAIld,MAAQ,IAAMkd,EAAImD,UAChC5D,KAAKzc,MAAQkd,EAAIld,MACjByc,KAAK3H,OAASoI,EAAIpI,OAClB2H,KAAK5H,MAAQ,IAAI7d,KAAKkmB,EAAImD,UAAUxT,MAAM,KAAK,IAC/C4P,KAAKwD,aAAevK,KAAKyK,MAAMjD,EAAIvR,QAAQA,OAE3C8Q,KAAKyD,cAAgBxK,KAAKyK,MAAMjD,EAAIvR,QAAQuU,cACxCxK,KAAKyK,MAAMjD,EAAIvR,QAAQuU,cACvB,GACJzD,KAAK9Q,OAASA,E,4CAGhB,SAAS2U,GACP,cAAqBzC,OAAO0C,QAAQ9D,KAAK9Q,QAAzC,eAAkD,CAA7C,IAA6C,EAA7C,sBAAO6U,EAAP,KAAUC,EAAV,KAA6C,eACbA,EAAEF,WADW,IAChD,2BAAgD,CAAC,IAAD,yBAApC3X,EAAoC,UAC9BpB,GAAK8Y,EAAS3S,WAC5B8S,EAAE7X,GAAOpB,EAAI8Y,EAAS7S,WAHsB,8BAMhDgP,KAAK9Q,OAAO6U,GAAKC,K,wBAIrB,SAAWC,GACT,cAAqB7C,OAAO0C,QAAQ9D,KAAK9Q,QAAzC,eAAkD,CAA7C,IAA6C,EAA7C,sBAAO6U,EAAP,KAAUC,EAAV,KAA6C,eACbA,EAAEF,WADW,IAChD,2BAAgD,CAAC,IAAD,mCAC9C9D,KAAK9Q,OAAO6U,GAAKC,EAAE1S,QAAO,SAACC,GAAD,OAAOA,EAAExG,IAAMkZ,MAFK,kC,wBAOpD,WACE,cAAqB7C,OAAO0C,QAAQ9D,KAAK9Q,QAAzC,eAAkD,CAA7C,IAA6C,EAA7C,sBAAO6U,EAAP,KAAUC,EAAV,KAA6C,eACbA,EAAEF,WADW,IAChD,2BAAgD,CAAC,IAAD,mCAC9C9D,KAAK9Q,OAAO6U,GAAK,IAF6B,kC,qBAOpD,SAAQG,EAA8BC,GACzB/C,OAAO0C,QAAQ9D,KAAK9Q,QAAQ,GAAG,GACnCvE,KAAI,SAAC4G,GAAD,OAAOA,EAAExG,KAAGwM,SAAS2M,EAAMnd,KACpC0B,QAAQC,IAAI,2CAEd,cAAqB0Y,OAAO0C,QAAQ9D,KAAK9Q,QAAzC,eAAkD,CAA7C,0BAAO6U,EAAP,KACGlU,GADH,KACqB,CACtB1S,EAAGgnB,EAAIhnB,EACPC,EAAG+mB,EAAI/mB,EACPyN,EAAG,EACHC,EAAG,EACHC,EAAGmZ,EAAMnd,KAEXiZ,KAAK9Q,OAAO6U,GAAGtZ,KAAKoF,M,uBAGxB,SAAUqU,EAAmBC,GAC3BnE,KAAKyD,cAAchZ,KAAKyZ,GACxB,cAAqB9C,OAAO0C,QAAQ9D,KAAK9Q,QAAzC,eAAkD,CAA7C,0BAAO6U,EAAP,KACGlU,GADH,KACqB,CACtB1S,EAAGgnB,EAAIhnB,EACPC,EAAG+mB,EAAI/mB,EACPyN,EAAG,EACHC,EAAG,EACHC,EAAGmZ,EAAMnd,KAEXiZ,KAAK9Q,OAAO6U,GAAGtZ,KAAKoF,M,yBAGxB,WACEmQ,KAAK9Q,OAAS+J,KAAKyK,MAAMzK,KAAKC,UAAU8G,KAAKwD,iB,2BAE/C,SAAcY,GACZ,cAAqBhD,OAAO0C,QAAQ9D,KAAK9Q,QAAzC,eAAkD,CAA7C,IAA6C,EAA7C,sBAAO6U,EAAP,KAAUC,EAAV,KAA6C,eACbA,EAAEF,WADW,IAChD,2BAAgD,CAAC,IAAD,mCAC9C9D,KAAK9Q,OAAO6U,GAAKK,EAAcL,IAFe,kC,qBAMpD,WAEE,OADW/D,KAAK9Q,OAAO1D,GACbb,KAAI,SAAC4G,GAAD,OAAeA,EAAExG,O,qBAEjC,WAKE,OAJWiV,KAAK9Q,OAAO1D,GACA8F,QAAO,SAACC,GAAD,OAC5B6P,OAAOiD,KAAK/U,IAASiI,SAAShG,EAAExG,MAEfJ,KAAI,SAAC4G,GAAD,OAAYA,EAAExG,S,SCwF1BnV,GA5KoB,CAEjCsB,kBAAckM,EACdxM,gBAAiB,GACjBjB,aAAc,GACdwjB,a,OACAN,cAAe1S,YAAS,CAAC,SAAC/Q,GAAD,OAAWA,EAAM+jB,gBAAe,SAACA,GACxD,OAAOF,KAAKC,UAAUC,MAKxBmL,wBAAyBjC,aACvB,SAACptB,EAASqtB,GAAV,OACEA,EAAaptB,kBAAkBqtB,yBACjC,SAACttB,EAASgD,EAAV,GAAoC,IAAhByO,EAAe,EAAfA,SAClBzO,EAAOuqB,QAAQC,aAA2B,WAAWzI,MAAK,SAAC1P,GACzD,IADkE,EAC5Dia,EAAgBja,EAChB0B,EAAwB,GACxBwY,EAAmB,IAAI3B,IAC3Bnc,IAAW9P,gBAAgB+T,KAAI,SAACuE,GAAD,OAAYA,EAAOnI,OAJc,eAOhDwd,GAPgD,IAOlE,2BAAiC,CAAC,IAAvB9D,EAAsB,QAC/B,IACE,IAAMlP,EAAI,IAAIgS,GAAW9C,GACpB+D,EAAiBzB,IAAIxR,EAAExK,KAC1BiF,EAAQvB,KAAK8G,GAEf,MAAOjJ,GAAQ,IAAD,IACdrT,EAAQwvB,eAAe,CACrBxb,UAAW,4BACXC,YAAY,6BAAD,iBACTuX,EAAIld,aADK,QACI,qBAEf4F,OAAM,UAAEsX,EAAIld,aAAN,QAAe,oBACrB6F,KAAM,WApBsD,8BAwBlE,GAAIrJ,EAAUW,qBAGP,CACL,IAAMgkB,EAAgB1Y,EAAQsF,QAC5B,SAACpC,GAAD,OAAYA,EAAO3L,QAAUxD,EAAUK,qBACvC,GACEskB,IACFzvB,EAAQoC,gBAAgBqtB,GACxBzvB,EAAQgC,gBAAgBytB,EAAcxV,SAG1Cja,EAAQ0vB,mBAAmB3Y,SAIjCyY,eAAgBhhB,aAAO,SAACrO,EAAOkT,GAC7B,IAAM4Z,EAAe9sB,EAAMO,aAAagV,KACtC,SAACrC,GAAD,OAAW2Q,KAAKC,UAAU5Q,MAEtB6Z,EAAWlJ,KAAKC,UAAU5Q,GAC3B4Z,EAAa3K,SAAS4K,IACzB/sB,EAAMO,aAAa8U,KAAKnC,MAG5Bsc,iBAAkBvC,aAEhB,SAACptB,EAASqtB,GAAV,OAA2BA,EAAa5sB,SAAS6rB,wBAEjD,SAACtsB,EAASgD,EAAV,GAAmD,IAA/ByO,EAA8B,EAA9BA,SAClB,GADgD,EAApBme,cACWne,KAA/BxP,EAAR,EAAQA,aAAR,EAAsBiiB,aACtB,GAAIjiB,EAAc,CAChB,IAAM4tB,EAAMpe,IAAWyS,aACvBjiB,EAAagY,OAAS4V,EACtB5tB,EAAa0oB,cAAckF,GAC3B7vB,EAAQoC,gBAAgBH,OAK9BG,gBAAiBoM,aAAO,SAACrO,EAAO2vB,GAC9B3vB,EAAM8B,aAAe6tB,EACrB3vB,EAAM+jB,aAAeF,KAAKyK,MAAMzK,KAAKC,UAAU6L,EAAgB7V,YAEjE9X,cAAeoP,aAAM,SAACvR,EAASwR,EAAV,GAA+B,IAClD,GAA0CC,EADO,EAAfA,YAC1B9P,EAAR,EAAQA,gBAAiBM,EAAzB,EAAyBA,aACzB,GAAIA,EAAc,CAChB,IAAM8tB,EAAepuB,EAClB+T,KAAI,SAAC4G,GAAD,OAAOA,EAAExK,MACbke,QAFkB,OAEV/tB,QAFU,IAEVA,OAFU,EAEVA,EAAc6P,IAEnBme,EAAiBtuB,GADJouB,EAAe,GAAKpuB,EAAgBoE,QAEvD/F,EAAQoC,gBAAgB6tB,OAG5BP,mBAAoBlhB,aAAO,SAACrO,EAAO+vB,GACjC/vB,EAAMwB,gBAAkBuuB,KAG1BruB,gBAAiB0P,aAAM,SAACvR,EAAS4uB,EAAV,GAAsC,IAAhBnd,EAAe,EAAfA,SACnCxP,EAAiBwP,IAAjBxP,aACR,GAAIA,EAAc,CAChB,IAAM4tB,EAAMpe,IAAWyS,aACvBjiB,EAAagY,OAAS4V,EACtB5tB,EAAaL,SAASgtB,GACtB5uB,EAAQoC,gBAAgBH,OAG5BH,WAAYyP,aAAM,SAACvR,EAASmwB,EAAV,GAA0C,IAAhB1e,EAAe,EAAfA,SAClCxP,EAAiBwP,IAAjBxP,aACR,GAAIA,EAAc,CAChB,IAAM4tB,EAAMpe,IAAWyS,aACvBjiB,EAAagY,OAAS4V,EACtB5tB,EAAamuB,WAAWD,GACxBnwB,EAAQoC,gBAAgBH,OAG5BI,WAAYkP,aAAM,SAACvR,EAASwR,EAAV,GAA+B,IACvCvP,GAAiBwP,EADqB,EAAfA,YACvBxP,aACJA,IACFA,EAAaI,aACbrC,EAAQgC,gBAAgBC,EAAagY,QACrCja,EAAQoC,gBAAgBH,OAG5BF,QAASwP,aAAM,SAACvR,EAASqwB,EAAV,GAAyD,IAA/B5e,EAA8B,EAA9BA,SACvC,GAA6Cme,EADwB,EAApBA,iBACYnvB,SAArD+gB,EAAR,EAAQA,eAAgBuE,EAAxB,EAAwBA,iBAChBhK,EAA6BsU,EAA7BtU,SAAUC,EAAmBqU,EAAnBrU,eACZsU,EAAY,sBAAI9O,GAAJ,YAAuBuE,IAAkBkI,MACzD,SAACnX,GAAD,OAAOA,EAAEhF,IAAMiK,KAET9Z,EAAiBwP,IAAjBxP,aACR,GAAIA,GAAgBquB,EAAW,CAC7B,IAAMT,EAAMpe,IAAWyS,aACvBjiB,EAAa0oB,cAAckF,GACf,OAAZ5tB,QAAY,IAAZA,KAAcF,QAAQuuB,EAAWtU,GACjChc,EAAQoC,gBAAgBH,OAG5BK,YAAaiP,aAAM,SAACvR,EAASwR,EAAV,GAA+B,IAAhBC,EAAe,EAAfA,SAEhC,GADyBA,IAAjBxP,aACU,CAChB,IAAM4tB,EAAMpe,IAAWxP,aACpB,OAAH4tB,QAAG,IAAHA,KAAKvtB,cACDutB,GACF7vB,EAAQoC,gBAAgBytB,OAI9B7tB,gBAAiBwM,aAAO,SAACrO,EAAO4W,GAC9B5W,EAAM+jB,aAAeF,KAAKyK,MAAMzK,KAAKC,UAAUlN,OAEjDwZ,aAAc/hB,aAAO,SAACrO,EAAOqwB,GAC3B,IAAMC,EAAMtwB,EAAM8B,aACdwuB,IACFA,EAAI7uB,SAAS4uB,GACbrwB,EAAM8B,aAAewuB,MAGzB/f,iBAAkB,EAClBggB,oBAAqBliB,aAAO,SAACrO,EAAO6E,GAClC7E,EAAMuQ,kBAAoB,KAG5BtP,iBAAkBmQ,aAAM,SAACvR,EAASonB,EAAV,GAAiC,IAAhB3V,EAAe,EAAfA,SACvCzR,EAAQ0wB,oBAAoBjf,IAAWf,iBAAmB,GAC1DmB,YAAW,WACT7R,EAAQmC,kBACP,S,qBCnNcwuB,G,WAInB,WACEriB,EACAsiB,GACC,yBANHtiB,WAME,OALFsiB,aAKE,OAJFC,YAIE,EACA9F,KAAKzc,MAAQA,EACbyc,KAAK6F,QAAUA,EACf7F,KAAK8F,OAAS,IAAIC,I,gDAEpB,SAAgBxiB,GAAiC,IAAD,OAE9C,OAAO,IAAIyiB,SAAa,SAACC,EAASC,GAChC,IAAMC,EAAW,EAAKL,OAAOM,IAAI7iB,GAC7B4iB,EACFF,EAAQE,EAASxb,KAAI,SAAA/O,GAAC,OAAEA,MAExBsqB,EAAO,oBAAD,OAAqB3iB,EAArB,wB,sBAIZ,SAASA,EAAmB+G,GAC1B0V,KAAK8F,OAAOO,IAAI9iB,EAAO+G,O,KCpBZgc,GAJmB,CAChCla,IAAK,+CACLma,IAAK,GCgDDrxB,GAAuC,CAE3CsxB,sBAAuB,KACvBC,oBAAqB,KACrBC,uBAAmBtjB,EAEnBjO,oBAAgBiO,EAChB7N,aAAS6N,EACT9N,oBAAgB8N,EAChB/N,kBAAc+N,EAEdvN,mBAAoB,GACpBM,gBAAiBgQ,YACf,CACE,SAAC/Q,GAAD,MAAW,CACTA,EAAMoxB,sBACNpxB,EAAMqxB,oBACNrxB,EAAMsxB,sBAGV,SAACZ,GACC,OAAOA,EAAOa,OAAM,SAAC1f,GAAD,OAAa,OAANA,QAG/BjS,mBAAoBwR,aAAM,SAACvR,GACzB,IACE2xB,GAAa,YAAazY,kJACvB6L,MAAK,SAACpe,GACL,IAAMirB,EAAWjrB,EAAE0O,KAAK,GACxBrV,EAAQ6xB,WAAWD,EAASE,YAC5B9xB,EAAQ+xB,mBAAmBH,EAASI,cACpChyB,EAAQiyB,gBAAgBL,EAASM,YACjClyB,EAAQmyB,kBAAkBjZ,kJAC1BlZ,EAAQoyB,WAAW,CACjB,CACEC,KAAM,UACN9kB,IAAK+kB,GAAuBV,EAASI,eAEvC,CACEK,KAAM,QACN9kB,IAAK+kB,GAAuBV,EAASM,kBAI1CjN,OAAM,SAAC5R,GACNrT,EAAQ+xB,mBACNO,GAAuB,GAAD,OACjBpZ,wBADiB,yBAIxBlZ,EAAQiyB,gBACNK,GAAuB,GAAD,OAAIpZ,wBAAJ,uBAExBlZ,EAAQoyB,WAAW,CACjB,CACEC,KAAM,UACN9kB,IAAI,GAAD,OAAK2L,wBAAL,wBAEL,CACEmZ,KAAM,QACN9kB,IAAI,GAAD,OAAK2L,wBAAL,2BAIX,MAAO7F,GAAQ,IAAD,IACdG,QAAQC,IAAI,gBACZzT,EAAQuyB,oBAAoB,CAC1Bve,UAAW,sCACXC,YACE,+DACFC,OAAM,UAAEgF,kJAAF,EAAqC,KAC3C/E,KAAI,UAAE+E,kJAAF,EAAqC,WAI/CkZ,WAAY7gB,YAAK,yCAAC,WAAOvR,EAAS6wB,EAAhB,qBAAApO,EAAA,sDAA0BhR,EAA1B,EAA0BA,SAC1C+B,QAAQC,IAAIhC,IAAWrR,aAAcqR,IAAWpR,gBAC1CmyB,EAAiB3B,EAAOnb,KAAI,SAAC1D,GAAD,OAAO2f,GAAa3f,EAAEqgB,KAAMrgB,EAAEzE,QAChEwjB,QAAQ0B,WAAWD,GAAgBzN,MAAK,SAAC2N,GACvC,IAAMC,EAAY,IAAIhC,GAAgB,UAAWU,GAAiBla,KAC5Dyb,EAAwD,GAE9DF,EAAQhT,SAAQ,SAACmT,EAAQC,GACvBtf,QAAQC,IAAIof,GACS,aAAjBA,EAAOE,SACTH,EAAWpd,KAAKqd,GAChBF,EAAUK,SAASH,EAAO7tB,MAAMiuB,WAAYJ,EAAO7tB,MAAMqQ,OAEtC,YAAjBwd,EAAOE,QACTvf,QAAQH,MAAM,cAGlBrT,EAAQstB,sBAAsBqF,GAC9BA,EAAUnF,aAAa,SAASzI,MAAK,SAACpe,GACpC3G,EAAQkzB,uBAAuBvsB,MAEjCgsB,EAAUnF,aAAa,WAAWzI,MAAK,SAACpe,GACtC3G,EAAQmzB,yBAAyBxsB,SAtBrB,2CAAD,2DA2BjBysB,oBAAqB7hB,YAAK,yCAAC,WAAOvR,EAASwR,EAAhB,uBAAAiR,EAAA,sDAAqBhR,EAArB,EAAqBA,SACxC4hB,EAAsB1B,GAC1B,QACAlgB,IAAWrR,cAEPkzB,EAAwB3B,GAC5B,UACAlgB,IAAWpR,gBAGb0wB,QAAQ0B,WAAW,CAACY,EAAqBC,IAAwBvO,MAC/D,SAAC2N,GACC,IAAMC,EAAY,IAAIhC,GAAgB,UAAWU,GAAiBla,KAC5Dyb,EAAwD,GAE9DF,EAAQhT,SAAQ,SAACmT,EAAQC,GACvBtf,QAAQC,IAAIof,GACS,aAAjBA,EAAOE,SACTH,EAAWpd,KAAKqd,GAChBF,EAAUK,SAASH,EAAO7tB,MAAMiuB,WAAYJ,EAAO7tB,MAAMqQ,OAEtC,YAAjBwd,EAAOE,SACT/yB,EAAQuyB,oBAAoB,CAC1Bve,UAAW,uCACXC,YAAa,kCACbC,OAAQ,eACRC,KAAM,OAERX,QAAQH,MAAM,eAGlBrT,EAAQstB,sBAAsBqF,GAC9BA,EAAUnF,aAAa,SAASzI,MAAK,SAACpe,GACpC3G,EAAQkzB,uBAAuBvsB,MAEjCgsB,EAAUnF,aAAa,WAAWzI,MAAK,SAACpe,GACtC3G,EAAQmzB,yBAAyBxsB,SApCd,2CAAD,2DAyC1B2mB,sBAAuB9e,aAAO,SAACrO,EAAOozB,GACpCpzB,EAAMsxB,kBAAoB8B,KAE5BL,uBAAwB1kB,aAAO,SAACrO,EAAOqzB,GACrCrzB,EAAMqxB,oBAAsBgC,KAE9BL,yBAA0B3kB,aAAO,SAACrO,EAAOqzB,GACvCrzB,EAAMoxB,sBAAwBiC,KAEhCrB,kBAAmB3jB,aAAO,SAACrO,EAAOD,GAChCC,EAAMD,eAAiBA,KAEzB2xB,WAAYrjB,aAAO,SAACrO,EAAOG,GACzBH,EAAMG,QAAUA,KAElB2xB,gBAAiBzjB,aAAO,SAACrO,EAAOC,GAC9BD,EAAMC,aAAeA,KAEvB2xB,mBAAoBvjB,aAAO,SAACrO,EAAOE,GACjCF,EAAME,eAAiBA,KAEzBkyB,oBAAqB/jB,aAAO,SAACrO,EAAOszB,GAClC,IAAMxG,EAAe9sB,EAAMS,mBAAmB8U,KAC5C,SAACrC,GAAD,OAAW2Q,KAAKC,UAAU5Q,MAEtB6Z,EAAWlJ,KAAKC,UAAUwP,GAC3BxG,EAAa3K,SAAS4K,IACzB/sB,EAAMS,mBAAmB4U,KAAKie,OAQpC,SAASnB,GAAuB/kB,GAC9B,IACMmmB,EADWnmB,EAAI4N,MAAM,KACD,GAEpBmW,EADc/jB,EAAI4N,MAAM,QACN,GAExB,MADY,iDAA6CuY,EAA7C,kCAA+EpC,GAI7F,SAASK,GACPsB,EACAU,GAEA,IAAItlB,EACJ,OAAO,IAAI0iB,SAAyB,SAACC,EAASC,GAC5C,IACE2C,KAAKnF,MAAMkF,EAAU,CACnBE,UAAU,EACVC,QAAQ,EACRC,UAAW,IACXC,eAAe,EACfC,SAAU,SAACvB,GACTrkB,EAAOqkB,EAAQrkB,KACfmF,QAAQC,IAAIpF,GACZ2iB,EAAQ,CAAE3b,KAAMhH,EAAM4kB,WAAYA,OAGtC,MAAO5f,GACP4d,EAAO,2BCvPb,IAMeiD,GANW,CACxBzzB,SAAU0zB,GACVxzB,aAAcA,GACdV,kBDqNaA,IE9NAm0B,GAFDC,YAAYH,GAAO,CAAE7B,KAAM,sBCGzC7nB,IAAS8pB,OACP,kBAAC,IAAD,CAAeF,MAAOA,IACpB,kBAAC,GAAD,OAEFnxB,SAAS0H,cAAc,W","file":"static/js/main.396fe6b8.chunk.js","sourcesContent":["export enum AppMode {\r\n  DISPLAY = \"DISPLAY\",\r\n  EDIT = \"EDIT\",\r\n  CYCLE = \"CYCLE\",\r\n}\r\n\r\nexport enum CardView {\r\n  GRID = \"GRID\",\r\n  PREVIEW = \"PREVIEW\",\r\n  FULL_SCREEN = \"FULL_SCREEN\",\r\n}\r\n\r\nexport enum DragType {\r\n  CARD_TABLE_DATA = \"CARD_TABLE_DATA\",\r\n  DISPLAY_CARD = \"DISPLAY_CARD\",\r\n}\r\n\r\nexport enum InteractionType {\r\n  ACTIVE = \"ACTIVE\",\r\n  STATIC = \"STATIC\",\r\n  FIXED = \"FIXED\",\r\n  IMAGE = \"IMAGE\",\r\n}\r\n\r\nexport enum DndTypes {\r\n  PLACEHOLDER = \"PLACEHOLDER\",\r\n  CLOCK = \"CLOCK\",\r\n  IFRAME = \"IFRAME\",\r\n  CARD_ROW = \"CARD_ROW\",\r\n  LAYOUT = \"LAYOUT\",\r\n  WIDGET = \"WIDGET\",\r\n}\r\n\r\nexport enum DragSource {\r\n  LAYOUT_TABLE = \"LAYOUT_TABLE\",\r\n  CARD_TABLE = \"CARD_TABLE\",\r\n  CARD_GRID = \"CARD_GRID\",\r\n  WIDGETS_TABLE = \"WIDGETS_TABLE\"\r\n}\r\n\r\nexport type SheetNames = \"CARDS\" | \"LAYOUTS\" | \"TOP_LEVEL\"","import { ActionCreator, createTypedHooks, ThunkCreator } from \"easy-peasy\";\r\nimport { StoreModel } from \"./model\";\r\nimport React, {\r\n  EffectCallback,\r\n  MouseEventHandler,\r\n  RefObject,\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { AppMode } from \"./enums\";\r\nimport LayoutData from \"./data_structs/LayoutData\";\r\nimport CardData from \"./data_structs/CardData\";\r\nimport WidgetData from \"./data_structs/WidgetData\";\r\nimport { CardAddEvent, CardSwapEvent } from \"./interfaces/CardEvents\";\r\nimport AppError from \"./interfaces/AppError\";\r\nimport { GoogleSheetsModel } from \"./model/googleSheetsModel\";\r\n\r\nconst appModelHooks = createTypedHooks<StoreModel>();\r\n\r\nexport const useStoreActions = appModelHooks.useStoreActions;\r\nexport const useStoreDispatch = appModelHooks.useStoreDispatch;\r\nexport const useStoreState = appModelHooks.useStoreState;\r\n\r\nexport function useToggle(initialValue: boolean): [boolean, () => void] {\r\n  const [value, setValue] = useState<boolean>(initialValue);\r\n\r\n  const toggleValue = () => setValue(!value);\r\n\r\n  return [value, toggleValue];\r\n}\r\n\r\ninterface UseSheetsProps {\r\n  fetchTopLevelSheet: ThunkCreator<void, any>;\r\n\r\n  parentSheetUrl: string | undefined;\r\n  cardSheetUrl: string | undefined;\r\n  layoutSheetUrl: string | undefined;\r\n  formUrl: string | undefined;\r\n}\r\n\r\nexport const useSheets = (): UseSheetsProps => {\r\n  const fetchTopLevelSheet = useStoreActions(\r\n    (actions) => actions.googleSheetsModel.fetchTopLevelSheet\r\n  );\r\n  const parentSheetUrl = useStoreState(\r\n    (state) => state.googleSheetsModel.cardSheetUrl\r\n  );\r\n\r\n  const cardSheetUrl = useStoreState(\r\n    (state) => state.googleSheetsModel.cardSheetUrl\r\n  );\r\n  const layoutSheetUrl = useStoreState(\r\n    (state) => state.googleSheetsModel.layoutSheetUrl\r\n  );\r\n  const formUrl = useStoreState((state) => state.googleSheetsModel.formUrl);\r\n\r\n  return {\r\n    fetchTopLevelSheet,\r\n    parentSheetUrl,\r\n    cardSheetUrl,\r\n    layoutSheetUrl,\r\n    formUrl,\r\n  };\r\n};\r\n\r\ninterface UseErrorProps {\r\n  appErrors: AppError[];\r\n  layoutErrors: AppError[];\r\n  googleSheetsErrors: AppError[];\r\n  allErrors: AppError[];\r\n}\r\n\r\nexport const useErrors = (): UseErrorProps => {\r\n  const appErrors = useStoreState((state) => state.appModel.appErrors);\r\n  const layoutErrors = useStoreState(\r\n    (state) => state.layoutsModel.layoutErrors\r\n  );\r\n  const googleSheetsErrors = useStoreState(\r\n    (state) => state.googleSheetsModel.googleSheetsErrors\r\n  );\r\n  const allErrors = [...appErrors, ...layoutErrors, ...googleSheetsErrors];\r\n  return {\r\n    appErrors,\r\n    layoutErrors,\r\n    googleSheetsErrors,\r\n    allErrors,\r\n  };\r\n};\r\n\r\ninterface UseAppProperties {\r\n  appMode: AppMode;\r\n  rotationSpeed: number;\r\n  setRotationSpeed: ActionCreator<number>;\r\n  transitionLayout: ThunkCreator<number, any>;\r\n  toggleAppMode: ThunkCreator<void, any>;\r\n  setRotateLayouts: ActionCreator<boolean>;\r\n  rotateLayouts: boolean;\r\n  addAppError: ActionCreator<AppError>;\r\n  sheetsAreLoaded: boolean;\r\n}\r\n\r\nexport const useApp = (): UseAppProperties => {\r\n  const toggleAppMode = useStoreActions(\r\n    (actions) => actions.appModel.toggleAppMode\r\n  );\r\n\r\n  const rotationSpeed = useStoreState((state) => state.appModel.rotationSpeed);\r\n  const rotateLayouts = useStoreState((state) => state.appModel.rotateLayouts);\r\n  const sheetsAreLoaded = useStoreState(\r\n    (state) => state.googleSheetsModel.sheetsAreLoaded\r\n  );\r\n\r\n  const setRotationSpeed = useStoreActions(\r\n    (actions) => actions.appModel.setRotationSpeed\r\n  );\r\n  const transitionLayout = useStoreActions(\r\n    (actions) => actions.layoutsModel.transitionLayout\r\n  );\r\n  const setRotateLayouts = useStoreActions(\r\n    (actions) => actions.appModel.setRotateLayouts\r\n  );\r\n  const addAppError = useStoreActions(\r\n    (actions) => actions.appModel.addAppError\r\n  );\r\n  const appMode = useStoreState((state) => state.appModel.appMode);\r\n\r\n  return {\r\n    appMode,\r\n    rotationSpeed,\r\n    setRotationSpeed,\r\n    toggleAppMode,\r\n    rotateLayouts,\r\n    setRotateLayouts,\r\n    addAppError,\r\n    sheetsAreLoaded,\r\n    transitionLayout,\r\n    // animationCounter,\r\n  };\r\n};\r\n\r\ninterface useLayoutProps {\r\n  activeCards: CardData[];\r\n  activeWidgets: WidgetData[];\r\n  setBufferLayout: ActionCreator<ReactGridLayout.Layouts>;\r\n  activeLayout: LayoutData | undefined;\r\n  deleteCard: ThunkCreator<string, any>;\r\n  addCard: ThunkCreator<CardAddEvent, any>;\r\n  swapCard: ThunkCreator<CardSwapEvent, any>;\r\n  // addWidget: ThunkCreator<CardAddEvent, any>;\r\n  setActiveLayout: ActionCreator<LayoutData>;\r\n  useNextLayout: ThunkCreator<void, any>;\r\n  clearCards: ThunkCreator<void, any>;\r\n  resetLayout: ThunkCreator<void, any>;\r\n  externalLayouts: LayoutData[];\r\n}\r\n\r\nexport const useLayout = (): useLayoutProps => {\r\n  const activeCards = useStoreState((state) => state.appModel.activeCards);\r\n  const activeWidgets = useStoreState((state) => state.appModel.activeWidgets);\r\n  const externalLayouts = useStoreState(\r\n    (state) => state.layoutsModel.externalLayouts\r\n  );\r\n  const swapCard = useStoreActions(\r\n    (actions) => actions.layoutsModel.swapCardContent\r\n  );\r\n\r\n  // const addWidget = useStoreActions(\r\n  //   (actions) => actions.layoutsModel.addWidget\r\n  // );\r\n\r\n  const deleteCard = useStoreActions(\r\n    (actions) => actions.layoutsModel.deleteCard\r\n  );\r\n  const addCard = useStoreActions((actions) => actions.layoutsModel.addCard);\r\n\r\n  const setBufferLayout = useStoreActions(\r\n    (actions) => actions.layoutsModel.setBufferLayout\r\n  );\r\n  // const set\r\n  const activeLayout = useStoreState(\r\n    (state) => state.layoutsModel.activeLayout\r\n  );\r\n\r\n  const useNextLayout = useStoreActions(\r\n    (actions) => actions.layoutsModel.setNextLayout\r\n  );\r\n\r\n  const setActiveLayout = useStoreActions(\r\n    (actions) => actions.layoutsModel.setActiveLayout\r\n  );\r\n  const clearCards = useStoreActions(\r\n    (actions) => actions.layoutsModel.clearCards\r\n  );\r\n\r\n  const resetLayout = useStoreActions(\r\n    (actions) => actions.layoutsModel.resetLayout\r\n  );\r\n\r\n  return {\r\n    activeCards,\r\n    activeWidgets,\r\n    setBufferLayout,\r\n    activeLayout,\r\n    deleteCard,\r\n    addCard,\r\n    swapCard,\r\n    // addWidget,\r\n    setActiveLayout,\r\n    useNextLayout,\r\n    clearCards,\r\n    resetLayout,\r\n    externalLayouts,\r\n  };\r\n};\r\nexport const useKeyboardShortcut = ({\r\n  keyCode,\r\n  action,\r\n  disabled,\r\n}: {\r\n  keyCode: number;\r\n  action: (event: KeyboardEvent) => void;\r\n  disabled: boolean;\r\n}): { enable: () => void; disable: () => void } => {\r\n  React.useEffect(() => {\r\n    if (!disabled) {\r\n      enable();\r\n    }\r\n    return () => {\r\n      disable();\r\n    };\r\n  });\r\n\r\n  const enable = () => {\r\n    document.addEventListener(\"keydown\", handleAction);\r\n  };\r\n\r\n  const disable = () => {\r\n    document.removeEventListener(\"keydown\", handleAction);\r\n  };\r\n\r\n  const handleAction = (e: KeyboardEvent) => {\r\n    if (e.keyCode === keyCode) {\r\n      e.preventDefault();\r\n      action(e);\r\n    }\r\n  };\r\n\r\n  return { enable, disable };\r\n};\r\n\r\ntype AnyEvent = MouseEvent | TouchEvent;\r\n\r\nexport function useOnClickOutside<T extends HTMLElement = HTMLElement>(\r\n  ref: RefObject<T>,\r\n  handler: (event: AnyEvent) => void\r\n): void {\r\n  useEffect(() => {\r\n    const listener = (event: AnyEvent) => {\r\n      const el = ref?.current;\r\n\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!el || el.contains(event.target as Node)) {\r\n        return;\r\n      }\r\n\r\n      handler(event);\r\n    };\r\n\r\n    document.addEventListener(`mousedown`, listener);\r\n    document.addEventListener(`touchstart`, listener);\r\n\r\n    return () => {\r\n      // \\\r\n\r\n      document.removeEventListener(`mousedown`, listener);\r\n      document.removeEventListener(`touchstart`, listener);\r\n    };\r\n\r\n    // Reload only if ref or handler changes\r\n  }, [ref, handler]);\r\n}\r\n\r\nexport function useEffectOnce(effect: EffectCallback) {\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(effect, []);\r\n}\r\n\r\nexport function useTimeout(\r\n  callback: () => void,\r\n  delay: number | null\r\n): { reset: () => void; stop: () => void } {\r\n  const savedCallback = useRef(callback);\r\n  const timeOutRef = useRef<NodeJS.Timeout>();\r\n\r\n  // Remember the latest callback if it changes.\r\n  useLayoutEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    // Don't schedule if no delay is specified.\r\n    // Note: 0 is a valid value for delay.\r\n    if (!delay && delay !== 0) {\r\n      return;\r\n    }\r\n\r\n    const id = setTimeout(() => savedCallback.current(), delay);\r\n    timeOutRef.current = id;\r\n    return () => clearTimeout(id);\r\n  }, [delay]);\r\n\r\n  const reset = useCallback(() => {\r\n    if (timeOutRef.current && delay) {\r\n      clearTimeout(timeOutRef.current);\r\n      timeOutRef.current = setTimeout(savedCallback.current, delay);\r\n    }\r\n  }, [delay]);\r\n\r\n  const stop = useCallback(() => {\r\n    if (timeOutRef.current) {\r\n      clearTimeout(timeOutRef.current);\r\n    }\r\n  }, []);\r\n\r\n  return { reset, stop };\r\n}\r\nexport function useInterval(\r\n  callback: () => void,\r\n  delay: number | null\r\n): { reset: () => void; stop: () => void } {\r\n  const savedCallback = useRef(callback);\r\n  const intervalRef = useRef<NodeJS.Timeout>();\r\n\r\n  // Remember the latest callback if it changes.\r\n  useLayoutEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    // Don't schedule if no delay is specified.\r\n    // Note: 0 is a valid value for delay.\r\n    if (!delay && delay !== 0) {\r\n      return;\r\n    }\r\n\r\n    const id = setInterval(() => savedCallback.current(), delay);\r\n    intervalRef.current = id;\r\n    return () => clearInterval(id);\r\n  }, [delay]);\r\n\r\n  const reset = useCallback(() => {\r\n    if (intervalRef.current && delay) {\r\n      clearInterval(intervalRef.current);\r\n      intervalRef.current = setInterval(savedCallback.current, delay);\r\n    }\r\n  }, [delay]);\r\n\r\n  const stop = useCallback(() => {\r\n    if (intervalRef.current) {\r\n      clearInterval(intervalRef.current);\r\n    }\r\n  }, []);\r\n\r\n  return { reset, stop };\r\n}\r\n\r\nfunction useEventListener<K extends keyof WindowEventMap>(\r\n  eventName: K,\r\n  handler: (event: WindowEventMap[K]) => void\r\n): void;\r\nfunction useEventListener<\r\n  K extends keyof HTMLElementEventMap,\r\n  T extends HTMLElement = HTMLDivElement\r\n>(\r\n  eventName: K,\r\n  handler: (event: HTMLElementEventMap[K]) => void,\r\n  element: RefObject<T>\r\n): void;\r\n\r\nfunction useEventListener<\r\n  KW extends keyof WindowEventMap,\r\n  KH extends keyof HTMLElementEventMap,\r\n  T extends HTMLElement | void = void\r\n>(\r\n  eventName: KW | KH,\r\n  handler: (\r\n    event: WindowEventMap[KW] | HTMLElementEventMap[KH] | Event\r\n  ) => void,\r\n  element?: RefObject<T>\r\n) {\r\n  // Create a ref that stores handler\r\n  const savedHandler = useRef<typeof handler>();\r\n\r\n  useEffect(() => {\r\n    // Define the listening target\r\n    const targetElement: T | Window = element?.current || window;\r\n    if (!(targetElement && targetElement.addEventListener)) {\r\n      return;\r\n    }\r\n\r\n    // Update saved handler if necessary\r\n    if (savedHandler.current !== handler) {\r\n      savedHandler.current = handler;\r\n    }\r\n\r\n    // Create event listener that calls handler function stored in ref\r\n    const eventListener: typeof handler = (event) => {\r\n      // eslint-disable-next-line no-extra-boolean-cast\r\n      if (!!savedHandler?.current) {\r\n        savedHandler.current(event);\r\n      }\r\n    };\r\n\r\n    targetElement.addEventListener(eventName, eventListener);\r\n\r\n    // Remove event listener on cleanup\r\n    return () => {\r\n      targetElement.removeEventListener(eventName, eventListener);\r\n    };\r\n  }, [eventName, element, handler]);\r\n}\r\n\r\n// See: https://usehooks-ts.com/react-hook/use-event-listener\r\n\r\ninterface Size {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport function useElementSize<T extends HTMLElement = HTMLDivElement>(): [\r\n  (node: T | null) => void,\r\n  Size\r\n] {\r\n  // Mutable values like 'ref.current' aren't valid dependencies\r\n  // because mutating them doesn't re-render the component.\r\n  // Instead, we use a state as a ref to be reactive.\r\n  const [ref, setRef] = useState<T | null>(null);\r\n  const [size, setSize] = useState<Size>({\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n\r\n  // Prevent too many rendering using useCallback\r\n  const handleSize = useCallback(() => {\r\n    setSize({\r\n      width: ref?.offsetWidth || 0,\r\n      height: ref?.offsetHeight || 0,\r\n    });\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [ref?.offsetHeight, ref?.offsetWidth]);\r\n\r\n  useEventListener(\"resize\", handleSize);\r\n\r\n  useLayoutEffect(() => {\r\n    handleSize();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [ref?.offsetHeight, ref?.offsetWidth]);\r\n\r\n  return [setRef, size];\r\n}\r\n\r\nexport function useHover<T extends HTMLElement = HTMLElement>(\r\n  elementRef: RefObject<T>\r\n): boolean {\r\n  const [value, setValue] = useState<boolean>(false);\r\n\r\n  const handleMouseEnter = () => setValue(true);\r\n  const handleMouseLeave = () => setValue(false);\r\n\r\n  useEventListener(\"mouseenter\", handleMouseEnter, elementRef);\r\n  useEventListener(\"mouseleave\", handleMouseLeave, elementRef);\r\n\r\n  return value;\r\n}\r\n\r\ninterface WindowSize {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport function useWindowSize(): WindowSize {\r\n  const [windowSize, setWindowSize] = useState<WindowSize>({\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n\r\n  const handleSize = () => {\r\n    setWindowSize({\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    });\r\n  };\r\n\r\n  useEventListener(\"resize\", handleSize);\r\n\r\n  // Set size at the first client-side load\r\n  useLayoutEffect(() => {\r\n    handleSize();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return windowSize;\r\n}\r\n\r\ntype Handler = (event: MouseEvent) => void;\r\n\r\nexport function useClickAnyWhere(handler: Handler) {\r\n  useEventListener(\"click\", (event) => {\r\n    handler(event);\r\n  });\r\n}\r\n","const TestShader1 = {\n    uniforms: {\n      time: { value: 0.0 }\n    },\n    vertexShader: `\n    vec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\n    vec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\n    vec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n  \n    float snoise(vec2 v) {\n        const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                            0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                            -0.577350269189626,  // -1.0 + 2.0 * C.x\n                            0.024390243902439); // 1.0 / 41.0\n        vec2 i  = floor(v + dot(v, C.yy) );\n        vec2 x0 = v -   i + dot(i, C.xx);\n        vec2 i1;\n        i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n        vec4 x12 = x0.xyxy + C.xxzz;\n        x12.xy -= i1;\n        i = mod289(i); // Avoid truncation effects in permutation\n        vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n            + i.x + vec3(0.0, i1.x, 1.0 ));\n  \n        vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n        m = m*m ;\n        m = m*m ;\n        vec3 x = 2.0 * fract(p * C.www) - 1.0;\n        vec3 h = abs(x) - 0.5;\n        vec3 ox = floor(x + 0.5);\n        vec3 a0 = x - ox;\n        m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n        vec3 g;\n        g.x  = a0.x  * x0.x  + h.x  * x0.y;\n        g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n        return 130.0 * dot(m, g);\n    }\n  \n  \n    \n  \n    uniform float u_time;\n    uniform vec2 u_randomisePosition;\n  \n    varying float vDistortion;\n    varying float xDistortion;\n    varying vec2 vUv;\n  \n    void main() {\n        vUv = uv;\n        vDistortion = snoise(vUv.xx * 3. - u_randomisePosition * 0.15);\n        xDistortion = snoise(vUv.yy * 1. - u_randomisePosition * 0.05);\n        vec3 pos = position;\n        pos.z += (vDistortion * 35.);\n        pos.x += (xDistortion * 25.);\n  \n        gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n    }\n    `,\n    fragmentShader: `\n    vec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\n    vec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\n    vec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n  \n    float snoise(vec2 v) {\n        const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                            0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                            -0.577350269189626,  // -1.0 + 2.0 * C.x\n                            0.024390243902439); // 1.0 / 41.0\n        vec2 i  = floor(v + dot(v, C.yy) );\n        vec2 x0 = v -   i + dot(i, C.xx);\n        vec2 i1;\n        i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n        vec4 x12 = x0.xyxy + C.xxzz;\n        x12.xy -= i1;\n        i = mod289(i); // Avoid truncation effects in permutation\n        vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n            + i.x + vec3(0.0, i1.x, 1.0 ));\n  \n        vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n        m = m*m ;\n        m = m*m ;\n        vec3 x = 2.0 * fract(p * C.www) - 1.0;\n        vec3 h = abs(x) - 0.5;\n        vec3 ox = floor(x + 0.5);\n        vec3 a0 = x - ox;\n        m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n        vec3 g;\n        g.x  = a0.x  * x0.x  + h.x  * x0.y;\n        g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n        return 130.0 * dot(m, g);\n    }\n  \n  \n  \n  \n  \n    vec3 rgb(float r, float g, float b) {\n      return vec3(r / 255., g / 255., b / 255.);\n  }\n  \n  vec3 rgb(float c) {\n      return vec3(c / 255., c / 255., c / 255.);\n  }\n  \n  uniform vec3 u_bg;\n  uniform vec3 u_bgMain;\n  uniform vec3 u_color1;\n  uniform vec3 u_color2;\n  uniform float u_time;\n  \n  varying vec2 vUv;\n  varying float vDistortion;\n  \n  void main() {\n      vec3 bg = rgb(u_bg.r, u_bg.g, u_bg.b);\n      vec3 c1 = rgb(u_color1.r, u_color1.g, u_color1.b);\n      vec3 c2 = rgb(u_color2.r, u_color2.g, u_color2.b);\n      vec3 bgMain = rgb(u_bgMain.r, u_bgMain.g, u_bgMain.b);\n  \n      float noise1 = snoise(vUv + u_time * 0.08);\n      float noise2 = snoise(vUv * 2. + u_time * 0.1);\n  \n      vec3 color = bg;\n      color = mix(color, c1, noise1 * 0.6);\n      color = mix(color, c2, noise2 * .4);\n  \n      color = mix(color, mix(c1, c2, vUv.x), vDistortion);\n  \n      float border = smoothstep(0.1, 0.6, vUv.x);\n  \n      color = mix(color, bgMain, 1. -border);\n  \n      gl_FragColor = vec4(color, 1.0);\n  }\n    `\n  }\n  \n  export default TestShader1","import type GoogleSheet from \"./interfaces/GoogleSheet\";\nimport type SheetId from \"./interfaces/SheetId\";\n\n// export function getSheet<T>(sheetId: SheetId): Promise<GoogleSheet<T>> {\n//   return new Promise<GoogleSheet<T>>(function (resolve, reject) {\n//     fetch(\n//       \"https://spreadsheets.google.com/feeds/list/1wQ1TGqnCTmaqqDak1rTRxPMSGSGLMilwrecf7TuqDGc/1/public/values?alt=json\"\n//     ).then((res) => {\n//       console.log(res);\n//       res.json();\n//     });\n//     // labeledCols(sheetId.key, sheetId.sheet_number)\n//     GetSheetDone.labeledCols(sheetId.key, sheetId.sheet_number)\n//       .then((sheet: GoogleSheet<T>) => {\n//         console.log(sheet);\n//         resolve(sheet);\n//       })\n//       .catch((error: unknown) => {\n//         console.error(\n//           `Error: ${error} fetching DOC_KEY ${sheetId.key}, sheet number ${sheetId.sheet_number}`\n//         );\n//       });\n//   });\n// }\n\nexport function formatDate(date: Date | undefined): string {\n  if (date) {\n    const d = new Date(date);\n    let month = \"\" + (d.getMonth() + 1);\n    let day = \"\" + d.getDate();\n    const year = d.getFullYear().toString().slice(2);\n\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n\n    return [month, day, year].join(\".\");\n  } else {\n    return \"faulty date\";\n  }\n}\n\n// String.prototype.toTitleCase = function () { return this.valueOf().toLowerCase().replace(this.valueOf()[0], this.valueOf()[0].toUpperCase()); }\nexport function toTitleCase(str: string) {\n  const words = str.split(\" \");\n  const title = words.map((w) => titleCapitilization(w)).join(\" \");\n  return title;\n}\nfunction titleCapitilization(str: string) {\n  const regex = /^[a-z]{0,1}|\\s\\w/gi;\n\n  str = str.toLowerCase();\n\n  str.match(regex)?.forEach((char) => {\n    str = str.replace(char, char.toUpperCase());\n  });\n\n  return str;\n}\n\nexport function randomIntFromInterval(min: number, max: number) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport function randomNumber(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\n// function\n\n// const toTitleCase = (str: string) => {\n//   const articles = ['a', 'an', 'the'];\n//   const conjunctions = ['for', 'and', 'nor', 'but', 'or', 'yet', 'so'];\n//   const prepositions = [\n//     'with', 'at', 'from', 'into','upon', 'of', 'to', 'in', 'for',\n//     'on', 'by', 'like', 'over', 'plus', 'but', 'up', 'down', 'off', 'near'\n//   ];\n\n//   // The list of spacial characters can be tweaked here\n//   const replaceCharsWithSpace = (str) => str.replace(/[^0-9a-z&/\\\\]/gi, ' ').replace(/(\\s\\s+)/gi, ' ');\n//   const capitalizeFirstLetter = (str) => str.charAt(0).toUpperCase() + str.substr(1);\n//   const normalizeStr = (str) => str.toLowerCase().trim();\n//   const shouldCapitalize = (word, fullWordList, posWithinStr) => {\n//     if ((posWithinStr == 0) || (posWithinStr == fullWordList.length - 1)) {\n//       return true;\n//     }\n\n//     return !(articles.includes(word) || conjunctions.includes(word) || prepositions.includes(word));\n//   }\n\n//   str = replaceCharsWithSpace(str);\n//   str = normalizeStr(str);\n\n//   let words = str.split(' ');\n//   if (words.length <= 2) { // Strings less than 3 words long should always have first words capitalized\n//     words = words.map(w => capitalizeFirstLetter(w));\n//   }\n//   else {\n//     for (let i = 0; i < words.length; i++) {\n//       words[i] = (shouldCapitalize(words[i], words, i) ? capitalizeFirstLetter(words[i], words, i) : words[i]);\n//     }\n//   }\n\n//   return words.join(' ');\n// }\n","import React, { useRef } from 'react'\nimport { Canvas, useFrame, } from '@react-three/fiber'\n\nimport TestShader1 from './TestShader1'\nimport { OrbitControls, PerspectiveCamera } from '@react-three/drei'\nimport * as THREE from 'three'\nimport {randomIntFromInterval} from \"../../utils\"\nvar randomisePosition = new THREE.Vector2(1, 2)\n\nfunction rgb(r, g, b) {\n  return new THREE.Vector3(r, g, b)\n}\n\nconst segmentsResolution = 45\n\nconst baseColors = {\n  pink: rgb(182, 9, 76),\n  brightPink: rgb(241, 3, 66),\n  darkPurple: rgb(42, 8, 56),\n  orange: rgb(244, 93, 31),\n  darkgrey: rgb(50,50,50),\n  lightgrey: rgb(150,150,150),\n  red: rgb(204, 0, 0)\n}\n\nconst uniforms = {\n  u_bg: { type: 'v3', value: baseColors.lightgrey },\n  u_bgMain: { type: 'v3', value: baseColors.lightgrey },\n  u_color1: { type: 'v3', value: baseColors.lightgrey },\n  u_color2: { type: 'v3', value: baseColors.lightgrey },\n  u_time: { type: 'f', value: 0 },\n  u_randomisePosition: { type: 'v2', value: randomisePosition }\n}\nconst R = function (x, y, t) {\n  return Math.floor(192 + 64 * Math.cos((x * x - y * y) / 300 + t))\n}\n\nconst G = function (x, y, t) {\n  return Math.floor(192 + 64 * Math.sin((x * x * Math.cos(t / 4) + y * y * Math.sin(t / 3)) / 300))\n}\n\nconst B = function (x, y, t) {\n  return Math.floor(192 + 64 * Math.sin(5 * Math.sin(t / 9) + ((x - 100) * (x - 100) + (y - 100) * (y - 100)) / 1100))\n}\n\nconst ShadedGeometry1 = ({ position }) => {\n  const shaderMaterialRef = useRef()\n  let t = 0\n  let j = 0\n  \n  let x = randomIntFromInterval(0,32)\n  let y = randomIntFromInterval(0, 32)\n  let vCheck = false\n\n  useFrame(({ clock }) => {\n    shaderMaterialRef.current.uniforms.u_randomisePosition.value = new THREE.Vector2(j, j)\n    shaderMaterialRef.current.uniforms.u_color1.value = new THREE.Vector3(R(x, y, t / 2), G(x, y, t / 2), B(x, y, t / 2))\n\n    shaderMaterialRef.current.uniforms.u_time.value = t\n    if (t % 0.1 === 0) {\n      if (vCheck === false) {\n        x -= 1\n        if (x <= 0) {\n          vCheck = true\n        }\n      } else {\n        x += 1\n        if (x >= 32) {\n          vCheck = false\n        }\n      }\n    }\n    // Increase t by a certain value every frame\n    j = j + 0.01\n    t = t + 0.01\n  })\n\n  return (\n    <mesh position={position} rotation={[THREE.MathUtils.degToRad(0), THREE.MathUtils.degToRad(0), THREE.MathUtils.degToRad(90)]}>\n      <planeGeometry attach=\"geometry\" args={[400, window.innerWidth / 2, segmentsResolution, segmentsResolution]} />\n      <shaderMaterial\n        attach=\"material\"\n        vertexShader={TestShader1.vertexShader}\n        fragmentShader={TestShader1.fragmentShader}\n        uniforms={uniforms}\n        ref={shaderMaterialRef}\n      />\n    </mesh>\n  )\n}\n\nconst BackgroundShader = () => {\n  const cam = useRef()\n  return (\n    <Canvas gl={{ antialias: false, alpha: false }}>\n      <PerspectiveCamera ref={cam} position={[0, 0, 0]} fov={75} aspect={window.innerWidth / window.innerHeight} near={0.1} far={1000} />\n      <ShadedGeometry1 position={[0, 0, -100]} faceResolution={100} />\n      <OrbitControls />\n    </Canvas>\n  )\n}\n\nexport default BackgroundShader\n","import \"../css/background.css\";\n\nimport classNames from \"classnames\";\nimport React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { AppMode } from \"../enums\";\nimport { useApp } from \"../hooks\";\nimport BackgroundShader from \"./Background/BackgroundShader\";\n\nconst Background = (): JSX.Element => {\n  const { appMode } = useApp();\n\n  const [backgroundStyle, setBackgroundStyle] = useState({\n    backgroundColor: \"gray\",\n  } as React.CSSProperties);\n  useEffect(() => {\n    const style = {\n      position: \"absolute\",\n      height: \"100vh\",\n      width: \"100vw\",\n      top: 0,\n      left: 0,\n      backgroundColor: appMode === AppMode.EDIT ? \"#2d2d2d\" : \"gray\",\n      transition: \"background-color 0.5s ease\",\n    } as React.CSSProperties;\n    setBackgroundStyle(style);\n  }, [appMode]);\n\n  const backgroundClass = classNames(\"background-container\", {\n    \"background-container-display-mode\": appMode == AppMode.DISPLAY,\n    \"background-container-edit-mode\": appMode == AppMode.EDIT,\n  });\n\n  const bgFillSolid = {\n    position: \"absolute\",\n    height: \"100vh\",\n    width: \"100vw\",\n    top: 0,\n    left: 0,\n    backgroundColor: \"lightgrey\",\n    transition: \"background-color 0.5s ease\",\n  } as React.CSSProperties;\n\n  return ReactDOM.createPortal(\n    <div className={backgroundClass} style={backgroundStyle}>\n      {appMode === AppMode.EDIT ? (\n        <div style={bgFillSolid}></div>\n      ) : (\n        <div className=\"background-container\">\n          <div className=\"shader-container\">\n            <BackgroundShader />\n          </div>\n          <div className=\"particle-container\"></div>\n        </div>\n      )}\n    </div>,\n    document.querySelector(\"#background\") as HTMLElement\n  );\n};\n\nexport default React.memo(Background);\n","interface AppConfig {\n  //time for the app to return to display mode after no interactions in edit mode\n  idleTime: number;\n  //link to the sheet containing the list of different card content\n  sheetLink: string;\n  //google sheets form link for saving new layouts\n  formLink: string;\n  gridRows: number;\n  gridCols: number;\n  gridBottomPadding: number;\n  //scale for regular web pages\n  defaultIframeScale: number;\n  //scale of content which meant for embedding, i.e. includes \"embed\" in the url\n  defaultEmbedScale: number;\n  //the default layout from your \"layouts\" google sheet to display\n  defaultLayoutName: string;\n  //\n  showModeSwitchButton: boolean;\n  widgetIds: string[];\n  useStaticLayout: boolean;\n  rotationDuration: number;\n}\n\nconst appConfig: AppConfig = {\n  idleTime: process.env.NODE_ENV === \"development\" ? 100000000 : 10000000,\n  sheetLink:\n    \"https://docs.google.com/spreadsheets/d/1BR1AQ5Zmt_o_0dOm9AvDht0G3Q6RXQUhX71Vi4H7tTU/edit#gid=0\",\n  defaultIframeScale: 0.5,\n  defaultEmbedScale: 1.0,\n  // defaultLayoutName: \"PostersV3\",\n  defaultLayoutName: \"Data Vis Types Chart 1\",\n  formLink: \"https://forms.gle/nc3UQFtFUtSaF5mu6\",\n  widgetIds: [\"clock\", \"group label\", \"info\"],\n  gridRows: 6,\n  gridCols: 4,\n  showModeSwitchButton: false,\n  useStaticLayout: false,\n  gridBottomPadding: 50,\n  rotationDuration: 100000, //ms\n};\n\nexport default appConfig;\n","import \"../css/iframeView.css\";\r\n\r\nimport classNames from \"classnames\";\r\nimport React, {\r\n  FC,\r\n  PropsWithChildren,\r\n  SyntheticEvent,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport ReactPlayer from \"react-player\";\r\n// import { TransformComponent, TransformWrapper } from \"react-zoom-pan-pinch\";\r\n\r\nimport CardData from \"../data_structs/CardData\";\r\nimport { CardView } from \"../enums\";\r\nimport {\r\n  CardErrorHandler,\r\n  CardLoadHandler,\r\n} from \"./CardLayout/ViewCard/ViewCard\";\r\n\r\ninterface IFrameViewProperties {\r\n  card: CardData;\r\n  scale: number;\r\n  cardView: CardView;\r\n  onError: CardErrorHandler;\r\n  onLoad: CardLoadHandler;\r\n  objectFit?: string;\r\n}\r\n/**\r\n * Minimal warpper for an <iframe>. Can be toggled between a full screen, active view, and a regular card view.\r\n * @component\r\n * @example\r\n * const my_url = \"https://www.youtube.com/embed/tgbNymZ7vqY\";\r\n * return(\r\n *  <IFrameView src = {my_url}/>\r\n * )\r\n */\r\nconst IFrameView: FC<IFrameViewProperties> = ({\r\n  card,\r\n  scale,\r\n  cardView,\r\n  onError,\r\n  onLoad,\r\n  objectFit,\r\n}) => {\r\n  const [active, setActive] = useState(false);\r\n  const [valid, setIsValid] = useState(true);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  const iframeOverlayClass = classNames(\"iframe-view-overlay\", {\r\n    \"iframe-view-overlay-hidden\": isLoaded,\r\n    \"iframe-view-overlay-loading\": !isLoaded,\r\n  });\r\n\r\n  const indexFrameContainerClass = classNames(\"iframe-container\", {\r\n    \"iframe-container-hidden\": !valid,\r\n  });\r\n\r\n  useEffect(() => {\r\n    // console.log(cardView);\r\n  }, [cardView]);\r\n\r\n  const iframeStyle = {\r\n    border: \"none\",\r\n    transform: `scale(${scale})`,\r\n    width: `${100 * (1 / scale)}%`,\r\n    height: `${100 * (1 / scale)}%`,\r\n    transformOrigin: \"top left\",\r\n  } as React.CSSProperties;\r\n\r\n  const iframeActive = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    border: \"5px blue\",\r\n  } as React.CSSProperties;\r\n\r\n  const qrContainerStyle = {\r\n    width: \"100%\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    zIndex: 10,\r\n  } as React.CSSProperties;\r\n\r\n  const { src, contentType } = card;\r\n\r\n  return (\r\n    <div\r\n      className={indexFrameContainerClass}\r\n      onDoubleClick={() => {\r\n        setActive(!active);\r\n      }}\r\n    >\r\n      {contentType === \"video\" ? (\r\n        <ResponsivePlayer\r\n          onReady={(event) => {\r\n            setIsLoaded(true);\r\n          }}\r\n          src={card.src}\r\n        />\r\n      ) : contentType === \"image\" ? (\r\n        <img\r\n          onLoad={(event) => {\r\n            // setIsLoaded(true);\r\n            onLoad(event, card);\r\n          }}\r\n          onError={(event) => {\r\n            onError(event, card);\r\n          }}\r\n          // src={\"blablahblah\"}\r\n          src={src}\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            objectFit:\r\n              objectFit ?? cardView === CardView.PREVIEW ? \"contain\" : \"cover\",\r\n            objectPosition:\r\n              cardView === CardView.PREVIEW ? \"contain\" : \"center\",\r\n          }}\r\n        />\r\n      ) : (\r\n        <iframe\r\n          onLoad={(event) => {\r\n            setIsLoaded(true);\r\n          }}\r\n          src={src}\r\n          style={active ? iframeActive : iframeStyle}\r\n        ></iframe>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(IFrameView);\r\n\r\n// function propertiesAreEqual(\r\n//   previousProperties: Readonly<PropsWithChildren<IFrameViewProperties>>,\r\n//   nextProperties: Readonly<PropsWithChildren<IFrameViewProperties>>\r\n// ): boolean {\r\n//   if (previousProperties.src == nextProperties.src) {\r\n//     console.log(previousProperties.src);\r\n//     console.log(nextProperties.src);\r\n//     return false;\r\n//   }\r\n//   console.log(previousProperties.src);\r\n//   console.log(nextProperties.src);\r\n//   return true;\r\n// }\r\n\r\nconst ResponsivePlayer = ({\r\n  src,\r\n  onReady,\r\n}: {\r\n  src: string;\r\n  onReady: (e: ReactPlayer) => void;\r\n}): JSX.Element => {\r\n  return (\r\n    <div className=\"player-wrapper\">\r\n      <ReactPlayer\r\n        className=\"react-player\"\r\n        controls\r\n        height=\"100%\"\r\n        muted\r\n        onReady={onReady}\r\n        playing\r\n        url={src}\r\n        width=\"100%\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nclass Content extends React.PureComponent<{ src: string }> {\r\n  renderCount = 0;\r\n  render() {\r\n    this.renderCount++;\r\n    return (\r\n      <div\r\n        style={{\r\n          background: \"#afa\",\r\n          padding: 8,\r\n          borderRadius: 8,\r\n          display: \"inline-block\",\r\n        }}\r\n      >\r\n        {this.props.src}\r\n        Hello from{\" \"}\r\n        <span style={{ fontFamily: \"monospace\" }}>{\"<Content />\"}</span> ! I've\r\n        rendered {this.renderCount} times.\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import {\r\n  Button as EverGreenButton,\r\n  ButtonAppearance,\r\n  IntentTypes,\r\n} from \"evergreen-ui\";\r\nimport React from \"react\";\r\n\r\n/**\r\n * Wraps an Evergreen UI Button, providing it with an onClick property.\r\n */\r\n\r\ninterface ButtonProperties {\r\n  onClick: React.MouseEventHandler<HTMLDivElement>;\r\n  text?: string;\r\n  appearance?: ButtonAppearance;\r\n  className?: string;\r\n  iconBefore?: JSX.Element;\r\n  width?: number | string;\r\n  height?: number | string;\r\n  containerClass?: string;\r\n  style?: React.CSSProperties;\r\n  fontSize?: string;\r\n  intent?: IntentTypes;\r\n}\r\nconst Button = ({\r\n  onClick,\r\n  text,\r\n  appearance,\r\n  className,\r\n  iconBefore,\r\n  width,\r\n  height,\r\n  style,\r\n  containerClass,\r\n  fontSize,\r\n  intent,\r\n}: ButtonProperties): JSX.Element => {\r\n  return (\r\n    <div\r\n      className={containerClass}\r\n      onMouseUp={onClick}\r\n      style={{ width: width, height: \"100%\" }}\r\n    >\r\n      <EverGreenButton\r\n        appearance={appearance ?? \"default\"}\r\n        //use evergreen's default button with if no width is provided\r\n        className={className}\r\n        cursor=\"pointer\"\r\n        fontSize={fontSize}\r\n        height={height ?? undefined}\r\n        iconBefore={iconBefore ?? undefined}\r\n        intent={intent ?? \"none\"}\r\n        style={style}\r\n        width={width ?? undefined}\r\n      >\r\n        {text}\r\n      </EverGreenButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState } from \"react\";\r\nimport CardData from \"../../../data_structs/CardData\";\r\nimport \"../../../css/cardInfo.css\"\r\n/**\r\n * Formats text from a CardData object, including it's title and source url.\r\n * @component\r\n */\r\nconst CardInfo = ({\r\n  data,\r\n  className,\r\n}: {\r\n  data: CardData;\r\n  className: string;\r\n}): JSX.Element => {\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  const titleStyle = {\r\n    // fontSize: \"large\",\r\n  };\r\n  return (\r\n    <>\r\n      <div className={\"card-footer\"}>\r\n        <h2 style={titleStyle}>{data.title}</h2>\r\n        {/* <a>{data.src}</a> */}\r\n        <p>\r\n          Lorem Ipsum is simply dummy text of the printing and typesetting\r\n          industry. Lorem Ipsum has been the industry&apos standard dummy text\r\n          ever since the 1500s, when an unknown printer took a galley of type\r\n          and scrambled it to make a type specimen book{\" \"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardInfo;\r\n","import \"../../../css/deleteButton.css\";\n\nimport { DeleteIcon } from \"evergreen-ui\";\nimport React from \"react\";\n\ninterface DeleteButtonProperties {\n    action: ()=>void;\n    onClick: React.MouseEventHandler<HTMLDivElement>;\n  }\n  \n\nconst DeleteButton = ({ onClick, action }: DeleteButtonProperties): JSX.Element => {\n    return (\n      <div\n        className=\"delete-button-container\"\n        onMouseUp={onClick}\n        onClick={onClick}\n        onTouchEnd={(e)=>{action}}\n      >\n        <div\n          // onClick={onClick}\n        style={{display: \"flex\"}}\n        >\n          <DeleteIcon size={30} />\n        </div>\n      </div>\n    );\n  };\n  \n\n  export default DeleteButton","import React, { useRef } from \"react\";\nimport \"../../../css/card/settingsButton.css\";\nimport { CogIcon, Popover } from \"evergreen-ui\";\nimport SettingsMenu from \"./SettingsMenu\";\n\nconst SettingsButton = ({\n  onClick,\n}: {\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\n}): JSX.Element => {\n  const target = useRef();\n  return (\n    <div className=\"settings-button-container\" onMouseUp={onClick}>\n      <div\n        //   onClick={onClick}\n        style={{ display: \"flex\" }}\n      >\n        <CogIcon size={15} />\n      </div>\n    </div>\n  );\n};\n\nexport default SettingsButton;\n","import '../../../css/card/settingsMenu.css';\n\nimport { ActionCreator, Actions } from 'easy-peasy';\nimport {\n  ChevronLeftIcon,\n  ChevronRightIcon,\n} from \"evergreen-ui\";\nimport React, { useRef } from 'react';\n\nimport {useOnClickOutside} from \"../../../hooks\"\nimport Button from '../../Shared/Button';\nimport SettingsButton from './SettingsButton';\nimport { CardModel } from './ViewCard';\n\ninterface SettingsMenuProperties extends Pick<Actions<CardModel>, \"setScale\" | \"setBackgroundColor\" | \"setShowMenu\"> {\n  isShown: boolean;\n  scale: number;\n}\n\nconst SettingsMenu = ({\n  isShown,\n  setScale,\n  setBackgroundColor,\n  setShowMenu,\n  scale,\n  \n}: SettingsMenuProperties): JSX.Element => {\n  const onOutside = () =>{console.log(\"got click outisde\");}\n  const menuReference = useRef(null)\n  const handleClickOutside = useOnClickOutside(menuReference, ()=>{setShowMenu(false)})\n  const menuStyle = {\n    display: isShown ? \"flex\" : \"none\",\n  } as React.CSSProperties;\n\n  return (\n    <div className =\"menu-container\" ref = {menuReference} style={menuStyle} {...handleClickOutside}>\n        <InputRow title = \"Background Color:\">\n       <input\n        className=\"nodrag\"\n        defaultValue=\"rbga(0,0,0,0)\"\n        onChange={(e)=>{setBackgroundColor(e.target.value)}}\n        type=\"color\"\n       />\n        </InputRow>\n        <InputRow title = \"Scale: \">\n        <ScaleControls scale={scale} setScale={setScale} />\n        </InputRow>\n    </div>\n  );\n};\n\nconst InputRow = ({title, children}:{title: string, children: JSX.Element | JSX.Element[]}): JSX.Element=>{\n    return (\n        <div className=\"menu-input-row\">\n            {title}\n            {children}\n        </div>\n    )\n}\n\nconst ScaleControls = ({\n  setScale,\n  scale,\n}: {\n  setScale: ActionCreator<number>;\n  scale: number;\n}): JSX.Element => {\n  return (\n    <div className=\"scale-controls-grid\">\n      <Button\n        containerClass=\"scale-controls-left\"\n        height = {20}\n        iconBefore={<ChevronLeftIcon size={30} />}\n        // className={\"scale-controls-left\"}\n        onClick={() => {\n          setScale(-0.1);\n        }}\n        width={20}\n        // style={{ width: \"fill-available\" }}\n      />\n\n      <input onChange = {(e)=>{setScale(parseInt(e.target.value))}} style ={{width: 30}} defaultValue = {0.5} type=\"text\" value = {scale.toString().slice(0, 3)}/>\n      <Button\n        containerClass=\"scale-controls-right\"\n        height = {20}\n        iconBefore={<ChevronRightIcon size={30} />}\n        // className={\"scale-controls-right\"}\n        onClick={() => {\n          setScale(0.1);\n        }}\n        // style={{ width: \"-webkit-fill-available\" }}\n        width={20}\n      />\n    </div>\n  );\n};\n\nexport default SettingsMenu;\n","import \"../../../css/viewCard.css\";\r\n\r\nimport classNames from \"classnames\";\r\nimport type { Action, Computed, Thunk } from \"easy-peasy\";\r\nimport { action, computed, thunk, useLocalStore } from \"easy-peasy\";\r\nimport { InlineAlert } from \"evergreen-ui\";\r\nimport { motion } from \"framer-motion\";\r\nimport React, {\r\n  FC,\r\n  MouseEventHandler,\r\n  PropsWithChildren,\r\n  ReactNode,\r\n  RefObject,\r\n  SyntheticEvent,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { Layouts } from \"react-grid-layout\";\r\nimport QRCode from \"react-qr-code\";\r\n\r\nimport CardData from \"../../../data_structs/CardData\";\r\nimport WidgetData from \"../../../data_structs/WidgetData\";\r\nimport { AppMode, CardView, DndTypes } from \"../../../enums\";\r\nimport {\r\n  useApp,\r\n  useKeyboardShortcut,\r\n  useLayout,\r\n  useOnClickOutside,\r\n  useStoreState,\r\n} from \"../../../hooks\";\r\nimport appConfig from \"../../../static/appConfig\";\r\nimport { randomNumber } from \"../../../utils\";\r\nimport Button from \"../../Shared/Button\";\r\nimport CardInfo from \"./CardInfo\";\r\nimport DeleteButton from \"./DeleteButton\";\r\nimport SettingsButton from \"./SettingsButton\";\r\nimport SettingsMenu from \"./SettingsMenu\";\r\n/**\r\n * Wraps each of the cards in the card layouts.\r\n * Click/Touch => Change the cards view mode\r\n * @component\r\n */\r\nexport interface CardModel {\r\n  cardBackgroundColor: string;\r\n  cardClass: Computed<CardModel, string>;\r\n  cardInfoClass: Computed<CardModel, string>;\r\n  cardType: DndTypes;\r\n  cardView: CardView;\r\n  handleCardPress: Thunk<CardModel>;\r\n  scale: number;\r\n  setBackgroundColor: Action<CardModel, string>;\r\n  setCardView: Action<CardModel, CardView>;\r\n  setScale: Action<CardModel, number>;\r\n  setShowMenu: Action<CardModel, boolean>;\r\n  showMenu: boolean;\r\n  toggleMenu: Action<CardModel>;\r\n}\r\n\r\nexport type CardErrorHandler = (\r\n  e: SyntheticEvent<HTMLDivElement | HTMLIFrameElement | HTMLImageElement>,\r\n  card: CardData\r\n) => void;\r\nexport type CardLoadHandler = (\r\n  e: SyntheticEvent<HTMLDivElement | HTMLIFrameElement | HTMLImageElement>,\r\n  card: CardData\r\n) => void;\r\n\r\ninterface ViewCardProperties {\r\n  cardId?: string;\r\n  cardType: DndTypes;\r\n  useAnimation: boolean;\r\n  //pass a set of information to all child components\r\n  children?: (\r\n    scale: number,\r\n    cardView: CardView,\r\n    onError: CardErrorHandler,\r\n    onLoad: CardLoadHandler\r\n  ) => ReactNode;\r\n  data?: CardData | WidgetData;\r\n  dataGrid?: Layouts;\r\n  layoutRef?: React.MutableRefObject<Layouts | null>;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst ViewCard: FC<ViewCardProperties> = ({\r\n  cardType,\r\n  children,\r\n  cardId,\r\n  data,\r\n  onClick,\r\n  useAnimation,\r\n}: ViewCardProperties) => {\r\n  const cardContainerReference = useRef<HTMLDivElement>(null);\r\n  const { appMode, addAppError } = useApp();\r\n  const { deleteCard } = useLayout();\r\n  const [oldCardView, setCardView] = useState(CardView.GRID);\r\n  const [isError, setIsError] = useState(false);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  const [animationVariant, setAnimationVariant] = useState(\r\n    data?.contentType === \"widget\" ? \"loaded\" : \"\"\r\n  );\r\n\r\n  const animationCounter = useStoreState(\r\n    (state) => state.layoutsModel.animationCounter\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (appMode === AppMode.DISPLAY) {\r\n      setAnimationVariant(\"out\");\r\n    }\r\n    if (data?.contentType === \"widget\") {\r\n      setAnimationVariant(\"loaded\");\r\n    }\r\n  }, [animationCounter]);\r\n\r\n  const [state, actions] = useLocalStore<CardModel>(\r\n    () => ({\r\n      cardView: CardView.GRID,\r\n      setCardView: action((state, cardView) => {\r\n        state.cardView = cardView;\r\n      }),\r\n      scale:\r\n        data?.contentType === \"embed\"\r\n          ? appConfig.defaultEmbedScale\r\n          : appConfig.defaultIframeScale,\r\n      setScale: action((state, scale) => {\r\n        state.scale += scale;\r\n      }),\r\n      cardBackgroundColor: \"\",\r\n      setBackgroundColor: action((state, color) => {\r\n        state.cardBackgroundColor = color;\r\n      }),\r\n      setShowMenu: action((state, show) => {\r\n        state.showMenu = show;\r\n      }),\r\n      toggleMenu: action((state) => {\r\n        state.showMenu = !state.showMenu;\r\n      }),\r\n      showMenu: false,\r\n      cardType: cardType,\r\n      cardClass: computed([(state) => state.cardView], (cardView) => {\r\n        const test = classNames(\"card\", {\r\n          \"card-edit\": appMode === AppMode.EDIT,\r\n          \"card-display\":\r\n            appMode === AppMode.DISPLAY && cardView == CardView.GRID,\r\n          \"card-preview\": cardView === CardView.PREVIEW,\r\n          \"card-fullscreen\": cardView === CardView.FULL_SCREEN,\r\n          \"card-empty\": appMode === AppMode.EDIT && !children,\r\n          \"card-empty-hidden\": !children && appMode == AppMode.DISPLAY,\r\n          \"card-locked\":\r\n            state.cardType === DndTypes.CLOCK && appMode === AppMode.EDIT,\r\n          // \"card-error\": data?.failed,\r\n        });\r\n        return test;\r\n      }),\r\n      cardInfoClass: computed((state) => {\r\n        return classNames(\"info\", {\r\n          \"info-hidden\": appMode === AppMode.EDIT,\r\n          \"info-display\": appMode === AppMode.DISPLAY,\r\n          \"info-preview\": state.cardView === CardView.PREVIEW,\r\n        });\r\n      }),\r\n      handleCardPress: thunk((actions, _, { getState }) => {\r\n        // console.log(\"HANDLED PRESS\");\r\n        // console.log(getState().cardClass);\r\n        // console.log(appMode);\r\n        const rootel = document.getElementById(\"root\") as HTMLDivElement;\r\n        if ((rootel.style.pointerEvents = \"all\")) {\r\n          rootel.style.pointerEvents = \"none\";\r\n        }\r\n\r\n        setTimeout(() => {\r\n          rootel.style.pointerEvents = \"all\";\r\n        }, 1000);\r\n        if (appMode === AppMode.DISPLAY && cardId != undefined) {\r\n          switch (getState().cardView) {\r\n            case CardView.GRID:\r\n              // if (data?.contentType !== \"widget\") {\r\n              //   actions.setCardView(CardView.PREVIEW);\r\n              //   const el = document.getElementById(\r\n              //     data?.id ?? \"view_card\"\r\n              //   ) as HTMLDivElement;\r\n              //   el.style.zIndex = \"1000\";\r\n              // }\r\n              // console.log(data);\r\n\r\n              break;\r\n            case CardView.PREVIEW:\r\n              actions.setCardView(CardView.GRID);\r\n              const el = document.getElementById(\r\n                data?.id ?? \"view_card\"\r\n              ) as HTMLDivElement;\r\n              el.style.zIndex = \"0\";\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n      }),\r\n    }),\r\n    [appMode],\r\n    (s) => {\r\n      return { devTools: false };\r\n    }\r\n  );\r\n\r\n  const settingsMenuProperties = {\r\n    scale: state.scale,\r\n    setScale: actions.setScale,\r\n    setBackgroundColor: actions.setBackgroundColor,\r\n    setShowMenu: actions.setShowMenu,\r\n  };\r\n\r\n  const cardModalBackdrop = classNames(\"card-modal-backdrop\", {\r\n    \"card-modal-backdrop-active\":\r\n      oldCardView === CardView.PREVIEW || oldCardView === CardView.FULL_SCREEN,\r\n    \"card-modal-backdrop-inactive\": oldCardView === CardView.GRID,\r\n  });\r\n\r\n  const cardChildContainer = classNames(\"card-child-container\", {\r\n    \"card-child-container-preview\": state.cardView === CardView.PREVIEW,\r\n    \"card-child-container-fullscreen\": state.cardView === CardView.FULL_SCREEN,\r\n    \"card-child-container-grid\": state.cardView === CardView.GRID,\r\n  });\r\n\r\n  const { enable, disable } = useKeyboardShortcut({\r\n    keyCode: 27, //escape\r\n    action: () => {\r\n      if (\r\n        oldCardView === CardView.FULL_SCREEN ||\r\n        oldCardView === CardView.PREVIEW\r\n      ) {\r\n        setCardView(CardView.GRID);\r\n      }\r\n    },\r\n    disabled: false,\r\n  });\r\n\r\n  const showDeleteButton = (): JSX.Element | undefined => {\r\n    if (appMode == AppMode.EDIT && data) {\r\n      return (\r\n        <>\r\n          <DeleteButton\r\n            onClick={() => {\r\n              deleteCard(data.id);\r\n            }}\r\n            action={() => {\r\n              deleteCard(data.id);\r\n            }}\r\n          />\r\n          <SettingsButton\r\n            onClick={(e) => {\r\n              actions.toggleMenu();\r\n            }}\r\n          />\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderCardInfo = (): JSX.Element | undefined => {\r\n    if (\r\n      oldCardView === CardView.PREVIEW &&\r\n      data &&\r\n      data.contentType !== \"widget\"\r\n    ) {\r\n      return (\r\n        <CardInfo className={state.cardInfoClass} data={data as CardData} />\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderInternals = () => {\r\n    if (data?.contentType !== \"widget\") {\r\n      return [showDeleteButton(), renderCardInfo()];\r\n    } else {\r\n      return [showDeleteButton()];\r\n    }\r\n  };\r\n\r\n  const renderReturnButton = (): JSX.Element | undefined => {\r\n    if (oldCardView === CardView.FULL_SCREEN) {\r\n      return (\r\n        <ReturnButton\r\n          onClick={() => {\r\n            setCardView(CardView.GRID);\r\n          }}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  const containerReference = useRef(null);\r\n  useOnClickOutside(containerReference, (e) => {\r\n    e.preventDefault();\r\n    if (state.cardView == CardView.PREVIEW) {\r\n      actions.setCardView(CardView.GRID);\r\n    }\r\n  });\r\n\r\n  const qrContainerStyle = {\r\n    width: \"fit-content\",\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    zIndex: 1,\r\n    right: 0,\r\n    transform: \"translate(50%, 50%)\",\r\n  } as React.CSSProperties;\r\n\r\n  const renderQrCode = (): JSX.Element | undefined => {\r\n    if (state.cardView === CardView.PREVIEW && data?.contentType !== \"widget\") {\r\n      const cd = data as CardData;\r\n      return (\r\n        <div style={qrContainerStyle}>\r\n          <QRCode size={128} value={cd?.src ?? \"\"} />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const onError: CardErrorHandler = (event, card) => {\r\n    const { title, src } = card;\r\n    addAppError({\r\n      errorType: \"failed to load content\",\r\n      description: \"description\",\r\n      source: `Card: ${title}`,\r\n      link: src,\r\n    });\r\n    setIsError(true);\r\n  };\r\n\r\n  const onLoad: CardLoadHandler = (event, card) => {\r\n    if (appMode === AppMode.DISPLAY) {\r\n      setAnimationVariant(\"loaded\");\r\n    }\r\n    setIsLoaded(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (state.cardView === CardView.PREVIEW) {\r\n      // setAnimationVariant(\"preview\");\r\n    }\r\n    if (state.cardView === CardView.GRID) {\r\n      // setAnimationVariant(\"none\");\r\n    }\r\n    // if (state.)\r\n  }, [state.cardView]);\r\n\r\n  const variants = {\r\n    active: {\r\n      opacity: 1,\r\n      transition: {\r\n        delay: randomNumber(0.4, 0.5),\r\n        duration: 0.5,\r\n      },\r\n    },\r\n    preview: {\r\n      opacity: 1,\r\n      transition: {\r\n        duration: 0.2,\r\n      },\r\n    },\r\n    none: {\r\n      opacity: 1,\r\n      x: 0,\r\n      y: 0,\r\n    },\r\n    error: {\r\n      // opacity: [1, 0],\r\n      backgroundColor: \"red\",\r\n    },\r\n    loaded: {\r\n      // opacity: [0, 1],\r\n      // y: [randomNumber(-50, -75), 0],\r\n      opacity: 1,\r\n      transition: {\r\n        delay: randomNumber(0.4, 0.5),\r\n        duration: 0.5,\r\n      },\r\n      x: 0,\r\n    },\r\n    out: {\r\n      y: randomNumber(-50, -75),\r\n      opacity: 0,\r\n      transition: {\r\n        delay: randomNumber(0.1, 0.5),\r\n        duration: 0.5,\r\n      },\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(animationVariant);\r\n  }, [animationVariant]);\r\n\r\n  return (\r\n    <motion.div\r\n      animate={animationVariant}\r\n      className={state.cardClass}\r\n      initial={data?.contentType === \"widget\" ? \"loaded\" : \"\"}\r\n      layoutId=\"viewcard\"\r\n      ref={cardContainerReference}\r\n      style={{\r\n        transformOrigin: \"center\",\r\n        willChange: \"transform\",\r\n        height: \"100%\",\r\n        backgroundColor: state.cardBackgroundColor,\r\n        opacity: appMode === AppMode.DISPLAY ? 0 : 1,\r\n        y: 0,\r\n      }}\r\n      variants={variants}\r\n    >\r\n      {children && (\r\n        <div className={cardModalBackdrop}>\r\n          <div\r\n            className={cardChildContainer}\r\n            onMouseUp={() => {\r\n              actions.handleCardPress();\r\n              if (onClick) {\r\n                onClick();\r\n              }\r\n            }}\r\n            ref={containerReference}\r\n          >\r\n            {/* {renderQrCode()} */}\r\n            {renderInternals()}\r\n            {children(state.scale, state.cardView, onError, onLoad)}\r\n            <SettingsMenu\r\n              {...settingsMenuProperties}\r\n              isShown={state.showMenu}\r\n            />\r\n          </div>\r\n          {renderReturnButton()}\r\n        </div>\r\n      )}\r\n    </motion.div>\r\n  );\r\n};\r\n// class App extends React.Component<{ message: string }, { count: number }> {\r\n\r\nconst calculateTransform2 = (boundingBox: DOMRect): [number, number] => {\r\n  const windowWidth = window.innerWidth;\r\n  const windowHeight = window.innerHeight;\r\n  const vw = window.innerWidth / 100;\r\n  const vh = window.innerWidth / 100;\r\n  // const futureWidth = vw * 60;\r\n  // const futureHeight = vh * 40;\r\n  const futureWidth = boundingBox.width * 1.5;\r\n  const futureHeight = boundingBox.height * 1.5;\r\n\r\n  const centeredX = windowWidth / 2 - futureWidth / 2;\r\n  const centeredY = windowHeight / 2 - futureHeight / 2;\r\n\r\n  const currentX = boundingBox.x;\r\n  const currentY = boundingBox.y;\r\n  let differenceX = centeredX - currentX;\r\n  let differenceY = centeredY - currentY;\r\n\r\n  if (centeredX < currentX) {\r\n    differenceX = currentX - centeredX;\r\n    differenceX *= -1;\r\n  }\r\n  if (centeredY < currentY) {\r\n    differenceY = currentY - centeredY;\r\n    differenceY *= -1;\r\n  }\r\n  return [differenceX, differenceY];\r\n  // return `translate(${differenceX}px, ${differenceY}px)`;\r\n};\r\n\r\nconst setGpZindex = (\r\n  refdiv: RefObject<HTMLDivElement> | null,\r\n  index: number\r\n): void => {\r\n  if (refdiv) {\r\n    const cardGrandParent = refdiv.current?.parentElement?.parentElement;\r\n    // console.log(cardGrandParent);\r\n    if (cardGrandParent) {\r\n      cardGrandParent.style.zIndex = index.toString();\r\n    }\r\n  }\r\n};\r\n// const setGpZindex1 = (\r\n//   refdiv: HTMLDivElement,\r\n//   zIndex: number\r\n// ): void => {\r\n//   if (refdiv) {\r\n//       cardGrandParent.style.zIndex = zIndex.toString();\r\n//   }\r\n// };\r\n//depending on the view state of the card, change its html output node\r\n\r\nconst FailureNotice = ({ errors }: { errors: string[] }): JSX.Element => {\r\n  return (\r\n    <div className=\"failure-notice-container\">\r\n      {errors.map((error, index) => (\r\n        <div className=\"failure-message\" key={index}>\r\n          <InlineAlert intent=\"danger\" key={index}>\r\n            {error}\r\n          </InlineAlert>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ReturnButton = ({\r\n  onClick,\r\n}: {\r\n  onClick: MouseEventHandler<HTMLDivElement>;\r\n}): JSX.Element => {\r\n  return (\r\n    <div className=\"return-button-container\">\r\n      <Button onClick={onClick} text=\"Return\" width={300} />\r\n    </div>\r\n  );\r\n};\r\nfunction propertiesAreEqual(\r\n  previousProperties: Readonly<PropsWithChildren<ViewCardProperties>>,\r\n  nextProperties: Readonly<PropsWithChildren<ViewCardProperties>>\r\n): boolean {\r\n  return true;\r\n}\r\n\r\nexport default React.memo(ViewCard);\r\n","import React from \"react\";\r\nimport \"../../css/pulsar.css\";\r\nimport { AddIcon } from \"evergreen-ui\";\r\ninterface PulsarProperties {}\r\n\r\nconst Pulsar = () => {\r\n  return (\r\n    <div className=\"pulsar\">\r\n      <AddIcon size={150}></AddIcon>\r\n      {/* <div className={\"ring\"}></div> */}\r\n      {/* <div className={\"ring\"}></div>\r\n      <div className={\"ring\"}></div>\r\n      <div className={\"ring\"}></div>\r\n      <div className={\"ring\"}></div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pulsar;\r\n","import React, { FC, ReactNode, useEffect } from \"react\";\nimport { Droppable, DroppableProps } from \"react-beautiful-dnd\";\nimport { AddIcon } from \"evergreen-ui\";\nimport \"../../css/droppable.css\";\nimport Pulsar from \"../Shared/Pulsar\";\nimport { DndTypes } from \"../../enums\";\ninterface IXDrop extends Omit<DroppableProps, \"children\"> {\n  children: ReactNode;\n  cardType: DndTypes;\n  className?: string;\n}\n\n/**A droppable container. Wraps child widgets in a react-beautiful-dnd Droppable component, and renders a \"+\" if a draggable is dragging over the container */\nconst IXDrop: FC<IXDrop> = ({\n  children,\n  className,\n  cardType,\n  ...properties\n}) => {\n  // const droppableContainert className = {\"droppable \" + className}\n  return (\n    <Droppable {...properties} type={\"DEFAULT\"}>\n      {(provided, snapshot) => {\n        return (\n          <div\n            {...provided.innerRef}\n            ref={provided.innerRef}\n            className={\n              snapshot.isDraggingOver\n                ? \"droppable-hovered\" + \" \" + className\n                : \"droppable\" + \" \" + className\n            }\n          >\n            <div\n              className={\n                snapshot.isDraggingOver\n                  ? \"droppable-overlay droppable-overlay-visible\"\n                  : \"droppable-overlay droppable-overlay-hidden\"\n              }\n            >\n              <Pulsar />\n            </div>\n            {children}\n            {provided.placeholder}\n          </div>\n        );\n      }}\n    </Droppable>\n  );\n};\n\nexport default IXDrop;\n","// eslint-disable-next-line simple-import-sort/imports\nimport React, { useState } from \"react\";\nimport ViewCard from \"./ViewCard/ViewCard\";\nimport { DndTypes } from \"../../enums\";\nimport { Layout, Layouts, Responsive, WidthProvider } from \"react-grid-layout\";\nimport \"../../css/cardLayout.css\";\nimport appConfig from \"../../static/appConfig\";\nimport { GridPosition } from \"../../interfaces/GridPosition\";\nimport IXDrop from \"../DragAndDrop/IXDrop\";\n\ntype GuideGridSettings = Partial<ReactGridLayout.ResponsiveProps>;\n\nexport const GuideGrid = ({\n  gridSettings,\n}: {\n  gridSettings: GuideGridSettings;\n}): JSX.Element => {\n  const ResponsiveGridLayout = WidthProvider(Responsive);\n  const guideCards = generateFilledLayout(\n    appConfig.gridRows,\n    appConfig.gridCols\n  );\n  const justCardNames = guideCards.lg.map((c) => c.i);\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        zIndex: 0,\n      }}\n    >\n      <ResponsiveGridLayout\n        {...gridSettings}\n        className=\"card-layout\"\n        layouts={guideCards}\n        resizeHandles={[]}\n        preventCollision={true}\n        isDraggable={false}\n        isResizable={false}\n      >\n        {justCardNames.map((p, index) => {\n          return (\n            <div key={p}>\n              <IXDrop\n                cardType={DndTypes.PLACEHOLDER}\n                className={\"droppable-guide\"}\n                droppableId={p}\n                key={index}\n              >\n                <ViewCard\n                  key={p}\n                  // eslint-disable-next-line react/jsx-sort-props\n                  cardId={p}\n                  cardType={DndTypes.PLACEHOLDER}\n                  useAnimation={false}\n                ></ViewCard>\n              </IXDrop>\n            </div>\n          );\n        })}\n      </ResponsiveGridLayout>\n    </div>\n  );\n};\nexport default React.memo(GuideGrid);\n\nfunction generateFilledLayout(rows: number, cols: number): Layouts {\n  const allGridSpots: GridPosition[] = [];\n  for (let y = 0; y < rows; y++) {\n    for (let x = 0; x < cols; x++) {\n      allGridSpots.push({ x: x, y: y });\n    }\n  }\n\n  const emptyCards = allGridSpots.map((rr) => {\n    return {\n      x: rr.x,\n      y: rr.y,\n      w: 1,\n      h: 1,\n      i: `empty_card_[${rr.x}, ${rr.y}]`,\n      minW: 1,\n      maxW: 1,\n      minH: 1,\n      maxH: 1,\n      static: false,\n      // static: true,\n      isDraggable: false,\n      isResizable: false,\n      resizeHandles: [],\n    } as Layout;\n  });\n\n  //TODO: MORE FUNCTIONAL SOLUTION\n  // const filled = layout.concat(emptyCards);\n  //pop off the first two positions where the clock is\n  // emptyCards.shift();\n  // emptyCards.shift();\n  return {\n    lg: emptyCards,\n    md: emptyCards,\n    sm: emptyCards,\n    xs: emptyCards,\n    xxs: emptyCards,\n  };\n}\n","import \"../../css/clock.css\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Heading } from \"evergreen-ui\";\r\n\r\n/**\r\n * Simple clock widget for displaying the current time.\r\n * @component\r\n */\r\nconst Clock = (): JSX.Element => {\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  const containerStyle = {\r\n    height: \"100%\",\r\n    padding: \".25em\",\r\n    overflow: \"hidden\",\r\n    width: \"100%\",\r\n    fontWeight: 600,\r\n    color: \"white\",\r\n    boxSizing: \"border-box\",\r\n  } as React.CSSProperties;\r\n\r\n  useEffect(() => {\r\n    const timerID = setInterval(() => tick(), 1000);\r\n    return function cleanup() {\r\n      clearInterval(timerID);\r\n    };\r\n  });\r\n\r\n  function tick(): void {\r\n    setDate(new Date());\r\n  }\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <div style={{ color: \"white\", fontSize: \"9vmin\" }}>\r\n        Data Experience Lab\r\n      </div>\r\n      <div style={{ color: \"white\", fontSize: \"9vmin\" }}>\r\n        {date.toLocaleTimeString(\"en-IT\", { hour12: true, timeStyle: \"short\" })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Clock;\r\n","import { motion } from \"framer-motion\";\nimport React, { useState, useRef, useEffect } from \"react\";\n//TODO: UNIFY MODAL CSS\nimport \"../../css/howToUse.css\";\nimport \"../../css/popup.css\";\n\nconst Modal = ({\n  children,\n  active,\n  containerClassName,\n  onClose,\n  backdropOpacity,\n}: {\n  active: boolean;\n  children: JSX.Element | JSX.Element[];\n\n  onClose: () => void;\n  backdropOpacity?: number;\n  containerClassName?: string;\n}): JSX.Element => {\n  return (\n    <motion.div\n      className={\"modal-container\"}\n      style={{\n        display: active ? \"flex\" : \"none\",\n        width: \"100vw\",\n        height: \"100vh\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        // y: -200,\n      }}\n      animate={{ y: 0 }}\n    >\n      <MyBackdrop onClose={onClose} backdropOpacity={backdropOpacity ?? 0} />\n      <div style={{ zIndex: 1000 }} className={containerClassName}>\n        {children}\n      </div>\n    </motion.div>\n  );\n};\n\nexport default Modal;\n\ninterface BackdropProperties {\n  backdropOpacity: number;\n  onClose: () => void;\n}\nconst MyBackdrop = ({ onClose, backdropOpacity }: BackdropProperties) => {\n  return (\n    <div\n      onMouseUp={onClose}\n      style={{ opacity: backdropOpacity, zIndex: 200 }}\n      className={\"pop-up-background\"}\n    ></div>\n  );\n};\n","import React from \"react\";\nimport \"../../css/panel.css\";\nimport { AddIcon } from \"evergreen-ui\";\n\ninterface PanelProperties{\n    children: JSX.Element | JSX.Element[]\n    padding?: string;\n    flexDirection?: \"column\" | \"row\"; \n    className?: string;\n\n}\n\nconst Panel = ({children, className, padding, flexDirection}:PanelProperties): JSX.Element => {\n  const panelStyle = {\n      padding: padding??\"0em\",\n      flexDirection: flexDirection??\"column\"\n  } as React.CSSProperties\n\n  return (\n    <div style = {panelStyle} className={\"panel\"+ \" \" + className??\"\"}>\n        {children}\n    </div>\n  );\n};\n\nexport default Panel;\n","import \"../../css/howToUse.css\";\n\nimport { Heading, Text } from \"evergreen-ui\";\nimport { motion } from \"framer-motion\";\nimport React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Modal from \"../Shared/Modal\";\nimport Panel from \"../Shared/Panel\";\n\nconst HowToUsePopUp = ({\n  active,\n  onClose,\n}: {\n  active: boolean;\n  onClose: () => void;\n}): JSX.Element => {\n  const variants = {\n    hidden: {\n      y: 100,\n      opacity: 0,\n    },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        duration: 0.5,\n      },\n    },\n  };\n\n  useEffect(() => {\n    console.log(active);\n  }, [active]);\n  return ReactDOM.createPortal(\n    <Modal\n      active={active}\n      // containerClassName=\"how-to-use-popup\"\n      onClose={onClose}\n      backdropOpacity={0}\n    >\n      <motion.div\n        variants={variants}\n        style={{\n          width: \"30vw\",\n          height: \"80vh\",\n          backgroundColor: \"white\",\n          borderRadius: 10,\n          padding: \"1em\",\n        }}\n        animate={active ? \"visible\" : \"hidden\"}\n      >\n        <Panel>\n          <Heading>Connect Labtop</Heading>\n          <hr></hr>\n          <Text>Connect your labtop to use this screen as a display.</Text>\n          <img\n            className=\"how-to-image\"\n            src={process.env.PUBLIC_URL + \"/labtopdiagram.png\"}\n          />\n          <Heading>Explore Content</Heading>\n          <hr></hr>\n          <Text>Click on a card to explore data related content.</Text>\n          <img\n            className=\"how-to-image\"\n            src={process.env.PUBLIC_URL + \"/masonary.png\"}\n          />\n        </Panel>\n      </motion.div>\n    </Modal>,\n    document.getElementById(\"popup-container\") as HTMLDivElement\n  );\n};\n\nexport default HowToUsePopUp;\n","import \"../../css/clock.css\";\n\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"../Shared/Button\";\nimport { HandUpIcon } from \"evergreen-ui\";\nimport { useApp, useToggle } from \"../../hooks\";\nimport { AppMode } from \"../../enums\";\nimport HowToUsePopUp from \"../HowToUse/HowToUsePopUp\";\n\n/**\n * Simple clock widget for displaying the current time.\n * @component\n */\nconst HowToUse = (): JSX.Element => {\n  const [date, setDate] = useState(new Date());\n\n  const containerStyle = {\n    height: \"100%\",\n    // padding: \".25em\",\n    width: \"100%\",\n    fontSize: \"9vmin\",\n    fontWeight: 600,\n    color: \"white\",\n    boxSizing: \"border-box\",\n    backgroundColor: \"blue\",\n  } as React.CSSProperties;\n\n  const [visible, toggleVisible] = useToggle(false);\n\n  useEffect(() => {\n    const timerID = setInterval(() => tick(), 1000);\n    return function cleanup() {\n      clearInterval(timerID);\n    };\n  });\n\n  function tick(): void {\n    setDate(new Date());\n  }\n\n  const { appMode } = useApp();\n\n  return (\n    <div style={containerStyle} id=\"how-to-use-button-widget\">\n      {/* {appMode === AppMode.DISPLAY && ( */}\n      <HowToUsePopUp active={visible} onClose={toggleVisible} />\n      {/* )} */}\n      {/* {appMode === AppMode.DISPLAY && ( */}\n      <Button\n        appearance=\"primary\"\n        className=\"how-to-use-button\"\n        fontSize=\"xx-large\"\n        // height=\"4vh\"\n        iconBefore={<HandUpIcon />}\n        onClick={toggleVisible}\n        text=\"Learn how to use this display\"\n        // width=\"35vw\"\n        width=\"100%\"\n        height=\"100%\"\n      />\n      {/* )} */}\n    </div>\n  );\n};\n\nexport default HowToUse;\n","import React from \"react\";\r\n\r\nimport WidgetData, { WidgetType } from \"../../data_structs/WidgetData\";\r\nimport Clock from \"./Clock\";\r\nimport HowToUse from \"./HowToUse\";\r\n\r\nconst WidgetRenderer = ({\r\n  widget,\r\n  scale,\r\n  colWidth,\r\n  rowHeight,\r\n}: {\r\n  widget: WidgetData;\r\n  scale?: number;\r\n  colWidth?: number;\r\n  rowHeight?: number;\r\n}): JSX.Element => {\r\n  const renderWidget = (widgetId: WidgetType) => {\r\n    let widg = <div></div>;\r\n    switch (widgetId) {\r\n      case \"clock\":\r\n        widg = <Clock />;\r\n        break;\r\n      case \"info\":\r\n        widg = <HowToUse />;\r\n        break;\r\n      default:\r\n        widg = <div></div>;\r\n    }\r\n\r\n    return widg;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"card-display\"\r\n      style={{\r\n        width: colWidth ? widget.w * colWidth : \"100%\",\r\n        height: rowHeight ? widget.h * rowHeight : \"100%\",\r\n        transform: `scale(${scale})`,\r\n        transformOrigin: \"top left\",\r\n        borderRadius: \".5em\",\r\n        overflow: \"hidden\",\r\n      }}\r\n    >\r\n      {renderWidget(widget.id)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WidgetRenderer;\r\n","import \"../../css/cardLayout.css\";\nimport \"../../css/libs/reactDraggable.css\";\n\nimport { AnimatePresence, motion, Variants } from \"framer-motion\";\nimport React, { useEffect } from \"react\";\nimport { Layout, Layouts, Responsive, WidthProvider } from \"react-grid-layout\";\n\nimport CardData from \"../../data_structs/CardData\";\nimport LayoutData from \"../../data_structs/LayoutData\";\nimport WidgetData from \"../../data_structs/WidgetData\";\nimport { AppMode, DndTypes } from \"../../enums\";\nimport appConfig from \"../../static/appConfig\";\nimport IFrameView from \"../IFrameView\";\nimport GuideGrid from \"./GuideGrid\";\nimport ViewCard from \"./ViewCard/ViewCard\";\nimport WidgetWrapper from \"./ViewCard/WidgetWrapper\";\nimport IXDrop from \"../DragAndDrop/IXDrop\";\nimport WidgetRenderer from \"../Widgets/WidgetRenderer\";\n\nexport const CardLayout = ({\n  layout,\n  appMode,\n  width,\n  height,\n  margin,\n  onLayoutChange,\n  cards,\n  widgets,\n  cols,\n  rows,\n  isDraggable,\n  isResizable,\n  useControls,\n}: {\n  layout: Layouts | undefined;\n  // layout: LayoutData;\n  appMode: AppMode;\n  width: number;\n  height: number;\n  margin: [number, number];\n  cols: number;\n  rows: number;\n  onLayoutChange?: (l: Layout[]) => void;\n  cards: CardData[];\n  widgets: WidgetData[];\n  isDraggable?: boolean;\n  isResizable?: boolean;\n  useControls?: boolean;\n}): JSX.Element => {\n  const activeLayout = layout;\n\n  useEffect(() => {\n    console.log(activeLayout?.id);\n  }, [activeLayout?.id]);\n\n  console.log(activeLayout);\n\n  const ResponsiveGridLayout = WidthProvider(Responsive);\n\n  const sharedGridSettings = {\n    breakpoints: { lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 },\n    cols: {\n      lg: cols,\n      md: cols,\n      sm: cols,\n      xs: cols,\n      xxs: cols,\n    },\n    rowHeight: height / appConfig.gridRows,\n    // rowHeight: (height - appConfig.gridBottomPadding) / appConfig.gridRows,\n    margin: margin,\n    preventCollision: true,\n    compactType: null,\n  };\n\n  console.log(widgets);\n  return (\n    <div>\n      <div className=\"card-grid-container\">\n        <ResponsiveGridLayout\n          {...sharedGridSettings}\n          className=\"card-layout\"\n          isDraggable={isDraggable ?? false}\n          isResizable={isResizable ?? false}\n          layouts={layout ?? { lg: [] }}\n          onDragStart={(layout, oldItem, newItem, placeholder, e, element) => {\n            const previousStyle = element.style;\n            previousStyle.border = \"2px solid cyan\";\n            element.style.border = \"4px solid cyan\";\n          }}\n          onLayoutChange={onLayoutChange}\n          preventCollision\n          resizeHandles={[\"se\"]}\n          verticalCompact\n        >\n          {[...cards, ...widgets].map(\n            (card: CardData | WidgetData, index: number) => {\n              return (\n                <motion.div\n                  key={card.id}\n                  className=\"card-container\"\n                  style={{ width: \"100%\" }}\n                  exit={{ y: -100 }}\n                >\n                  <IXDrop\n                    cardType={DndTypes.IFRAME}\n                    className=\"droppable-card\"\n                    droppableId={card.id}\n                    key={index}\n                  >\n                    <ViewCard\n                      cardId={index.toString()}\n                      cardType={DndTypes.IFRAME}\n                      data={card}\n                      useAnimation={card.contentType !== \"widget\"}\n                    >\n                      {card.contentType !== \"widget\"\n                        ? (scale, cardView, onError, onLoad) => {\n                            const contentCard = card as CardData;\n                            return (\n                              <IFrameView\n                                card={contentCard}\n                                scale={scale}\n                                cardView={cardView}\n                                onError={onError}\n                                onLoad={onLoad}\n                              />\n                            );\n                          }\n                        : (scale) => {\n                            return (\n                              <WidgetRenderer\n                                widget={card as WidgetData}\n                                scale={1}\n                              />\n                            );\n                          }}\n                      {}\n                    </ViewCard>\n                  </IXDrop>\n                </motion.div>\n              );\n            }\n          )}\n        </ResponsiveGridLayout>\n      </div>\n      <GuideGrid gridSettings={sharedGridSettings} />\n    </div>\n  );\n};\nexport default CardLayout;\n","import React from \"react\";\nimport { DragDropContext, DropResult } from \"react-beautiful-dnd\";\n\nimport { DragSource } from \"../../enums\";\nimport { useLayout, useStoreState } from \"../../hooks\";\nimport { CardAddEvent, CardSwapEvent } from \"../../interfaces/CardEvents\";\nimport { GridPosition } from \"../../interfaces/GridPosition\";\n\n/**\n * Handles all functionality for dragging and dropping content into the layout\n */\n\nconst stringToGridPos = (cardId: string): GridPosition => {\n  //card id's of empty cards is of \"empty_card_[x, y]\" format\n\n  const posString = cardId.split(\"[\")[1];\n  //x,y]\n  const x = Number.parseInt(posString.charAt(0));\n  //x\n  const y = Number.parseInt(posString.charAt(3));\n  //y\n  return {\n    x: x,\n    y: y,\n  } as GridPosition;\n};\n\nconst cardIsEmpty = (cardId: string): boolean => {\n  return cardId.startsWith(\"empty\");\n};\n\nconst AppDragContext = ({\n  children,\n}: {\n  children: JSX.Element | JSX.Element[];\n}): JSX.Element => {\n  const { addCard, swapCard, setActiveLayout } = useLayout();\n\n  const externalLayoutsState = useStoreState(\n    (state) => state.layoutsModel.externalLayouts\n  );\n\n  const onDragEnd = (response: DropResult) => {\n    if (response.destination?.droppableId == response.source?.droppableId)\n      return;\n    const { source, destination, draggableId } = response;\n    console.log(\n      `dragged from ${draggableId} to ${\n        destination?.droppableId\n      } current title: ${\"yes\"}`\n    );\n\n    if (!destination) return;\n    switch (source.droppableId) {\n      case DragSource.CARD_TABLE:\n        if (destination.droppableId) {\n          if (cardIsEmpty(destination.droppableId)) {\n            const cardPos = stringToGridPos(destination.droppableId);\n            const addEvent = {\n              sourceId: draggableId,\n              targetPosition: cardPos,\n            } as CardAddEvent;\n            addCard(addEvent);\n            console.log(\"dropped onto an empty card, adding card\");\n          } else {\n            swapCard({\n              sourceId: draggableId,\n              targetId: destination.droppableId,\n            } as CardSwapEvent);\n          }\n        }\n        break;\n      case DragSource.WIDGETS_TABLE:\n        const cardPos = stringToGridPos(destination.droppableId);\n        const addEvent = {\n          sourceId: draggableId,\n          targetPosition: cardPos,\n        } as CardAddEvent;\n        addCard(addEvent);\n        break;\n      case DragSource.LAYOUT_TABLE:\n        const newLayout = externalLayoutsState.filter(\n          (l) => l.id === draggableId\n        )[0];\n        setActiveLayout(newLayout);\n        break;\n      default:\n        console.log(\"got unkown drag source\");\n    }\n  };\n\n  return <DragDropContext onDragEnd={onDragEnd}>{children}</DragDropContext>;\n};\n\nexport default AppDragContext;\n","import React, { FC, ReactElement, ReactNode, useEffect, useRef } from \"react\";\nimport {\n  Draggable,\n  DraggableProps,\n  DraggableProvided,\n  DraggingStyle,\n} from \"react-beautiful-dnd\";\nimport { createPortal } from \"react-dom\";\nimport CardData from \"../../data_structs/CardData\";\nimport { CardView, DndTypes } from \"../../enums\";\nimport IFrameView from \"../IFrameView\";\n\ninterface DraggableRowProperties extends Omit<DraggableProps, \"children\"> {\n  dndType: DndTypes;\n  className?: string;\n  children: ReactNode;\n  dragAll?: boolean;\n  card: CardData;\n}\n\nconst useDraggableInPortal = () => {\n  const element = useRef<HTMLDivElement>(document.createElement(\"div\")).current;\n\n  useEffect(() => {\n    if (element) {\n      element.style.pointerEvents = \"none\";\n      element.style.position = \"absolute\";\n      element.style.height = \"100%\";\n      element.style.width = \"100%\";\n      element.style.top = \"0\";\n      // element.style.border = \"5px solid red\";\n\n      document.body.appendChild(element);\n\n      return () => {\n        document.body.removeChild(element);\n      };\n    }\n  }, [element]);\n\n  return (render: (provided: DraggableProvided) => ReactElement) =>\n    (provided: DraggableProvided) => {\n      const result = render(provided);\n      const style = provided.draggableProps.style as DraggingStyle;\n      if (style.position === \"fixed\") {\n        return createPortal(result, element);\n      }\n      return result;\n    };\n};\n\n/**\n * A draggable table row. Used for dragging card content or layouts into the grid.\n */\nconst DraggableRow = ({\n  dndType,\n  className,\n  children,\n  dragAll,\n  card,\n  ...properties\n}: DraggableRowProperties): JSX.Element => {\n  if (!React.isValidElement(children)) return <div />;\n\n  const renderDraggable = useDraggableInPortal();\n\n  return (\n    <Draggable {...properties}>\n      {(provided, snapshot) => {\n        const dragHandleProperties = dragAll ? provided.dragHandleProps : {};\n        if (\n          snapshot.isDragging &&\n          provided &&\n          provided.draggableProps &&\n          provided.draggableProps.style\n        ) {\n          //@ts-ignore\n          provided.draggableProps.style.left =\n            //@ts-ignore\n            provided.draggableProps.style.offsetLeft;\n          //@ts-ignore\n          provided.draggableProps.style.top =\n            //@ts-ignore\n            provided.draggableProps.style.offsetTop;\n        }\n        return (\n          <>\n            <tr\n              className={className}\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...dragHandleProperties}\n            >\n              {React.cloneElement(children, { provided })}\n            </tr>\n            <tr\n              style={{\n                display: snapshot.isDragging ? \"table-row\" : \"none\",\n                backgroundColor: snapshot.isDragging ? \"green\" : \"none\",\n              }}\n            >\n              {React.cloneElement(children, { provided })}\n            </tr>\n\n            {/* {\n              //@ts-ignore\n              renderDraggable((provided, snapshot) => {\n                <IFrameView card={card} scale={1} cardView={CardView.GRID} />;\n              })\n            } */}\n          </>\n        );\n      }}\n    </Draggable>\n  );\n};\n\nDraggableRow.defaultProps = {\n  dragAll: true,\n};\n\nexport default React.memo(DraggableRow);\n","enum IFrameLoadError {\n  CROSS_ORIGIN = \"CROSS_ORIGIN\",\n}\n\nenum IFrameLoadWarning {\n  MALFORMED_URL = \"MALFORMED_URL\",\n}\n\nclass IFrameValidator {\n  url!: string;\n  errors!: IFrameLoadError[];\n  warnings!: IFrameLoadWarning[];\n  constructor(url: string) {\n    this.errors = [];\n    this.warnings = [];\n    this.url = url;\n  }\n  validate(event: React.SyntheticEvent<HTMLIFrameElement, Event>): void {\n    console.log(this.errors);\n    const malformedUrlCheckArray = validURL(this.url);\n    this.warnings.push(...malformedUrlCheckArray);\n    console.log(malformedUrlCheckArray);\n  }\n  isValid(): boolean {\n    return this.errors.length == 0;\n  }\n  errorMessages(): string[] {\n    let errors: string[] = [];\n    this.errors.map((e) => {\n      switch (e) {\n        case IFrameLoadError.CROSS_ORIGIN:\n          errors.push(\n            `Blocked a frame with origin ${this.url}; from accessing a cross-origin frame.`\n          );\n          break;\n        default:\n          console.log(\"error did not match an error enum\");\n      }\n    });\n    return errors;\n  }\n}\n\nexport default IFrameValidator;\n\n\n\nfunction validURL(str: string): IFrameLoadWarning[] {\n  let warningsArray = [];\n  const pattern = new RegExp(\n    \"^(https?:\\\\/\\\\/)?\" + // protocol\n      \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|\" + // domain name\n      \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\n      \"(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*\" + // port and path\n      \"(\\\\?[;&a-z\\\\d%_.~+=-]*)?\" + // query string\n      \"(\\\\#[-a-z\\\\d_]*)?$\",\n    \"i\"\n  ); // fragment locator\n  if (!pattern.test(str)) {\n    warningsArray.push(IFrameLoadWarning.MALFORMED_URL);\n  }\n  return warningsArray;\n}\n","import React, { FunctionComponent, ReactElement } from \"react\";\r\n\r\n// https://github.com/mhnpd/react-loader-spinner/blob/master/src/type.ts\r\n\r\nexport type Style = {\r\n  [key: string]: string;\r\n};\r\n\r\nexport interface BaseProps {\r\n  height?: string | number;\r\n  width?: string | number;\r\n  color?: string;\r\n  ariaLabel?: string;\r\n  wrapperStyle?: Style;\r\n  wrapperClass?: string;\r\n  visible?: boolean;\r\n}\r\n\r\ninterface CirclesProps extends BaseProps {}\r\n\r\nconst getDefaultStyle = (visible: boolean): Style => ({\r\n  display: visible ? \"flex\" : \"none\",\r\n});\r\n\r\nconst Loader: FunctionComponent<CirclesProps> = ({\r\n  height = 80,\r\n  width = 80,\r\n  color = \"green\",\r\n  ariaLabel = \"circles-loading\",\r\n  wrapperStyle,\r\n  wrapperClass,\r\n  visible = true,\r\n}): ReactElement => (\r\n  <div\r\n    style={{ ...getDefaultStyle(visible), ...wrapperStyle }}\r\n    className={wrapperClass}\r\n    data-testid=\"circles-loading\"\r\n  >\r\n    <svg\r\n      width={width}\r\n      height={height}\r\n      viewBox=\"0 0 135 135\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      fill={color}\r\n      aria-label={ariaLabel}\r\n      data-testid=\"circles-svg\"\r\n    >\r\n      <path d=\"M67.447 58c5.523 0 10-4.477 10-10s-4.477-10-10-10-10 4.477-10 10 4.477 10 10 10zm9.448 9.447c0 5.523 4.477 10 10 10 5.522 0 10-4.477 10-10s-4.478-10-10-10c-5.523 0-10 4.477-10 10zm-9.448 9.448c-5.523 0-10 4.477-10 10 0 5.522 4.477 10 10 10s10-4.478 10-10c0-5.523-4.477-10-10-10zM58 67.447c0-5.523-4.477-10-10-10s-10 4.477-10 10 4.477 10 10 10 10-4.477 10-10z\">\r\n        <animateTransform\r\n          attributeName=\"transform\"\r\n          type=\"rotate\"\r\n          from=\"0 67 67\"\r\n          to=\"-360 67 67\"\r\n          dur=\"2.5s\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n      </path>\r\n      <path d=\"M28.19 40.31c6.627 0 12-5.374 12-12 0-6.628-5.373-12-12-12-6.628 0-12 5.372-12 12 0 6.626 5.372 12 12 12zm30.72-19.825c4.686 4.687 12.284 4.687 16.97 0 4.686-4.686 4.686-12.284 0-16.97-4.686-4.687-12.284-4.687-16.97 0-4.687 4.686-4.687 12.284 0 16.97zm35.74 7.705c0 6.627 5.37 12 12 12 6.626 0 12-5.373 12-12 0-6.628-5.374-12-12-12-6.63 0-12 5.372-12 12zm19.822 30.72c-4.686 4.686-4.686 12.284 0 16.97 4.687 4.686 12.285 4.686 16.97 0 4.687-4.686 4.687-12.284 0-16.97-4.685-4.687-12.283-4.687-16.97 0zm-7.704 35.74c-6.627 0-12 5.37-12 12 0 6.626 5.373 12 12 12s12-5.374 12-12c0-6.63-5.373-12-12-12zm-30.72 19.822c-4.686-4.686-12.284-4.686-16.97 0-4.686 4.687-4.686 12.285 0 16.97 4.686 4.687 12.284 4.687 16.97 0 4.687-4.685 4.687-12.283 0-16.97zm-35.74-7.704c0-6.627-5.372-12-12-12-6.626 0-12 5.373-12 12s5.374 12 12 12c6.628 0 12-5.373 12-12zm-19.823-30.72c4.687-4.686 4.687-12.284 0-16.97-4.686-4.686-12.284-4.686-16.97 0-4.687 4.686-4.687 12.284 0 16.97 4.686 4.687 12.284 4.687 16.97 0z\">\r\n        <animateTransform\r\n          attributeName=\"transform\"\r\n          type=\"rotate\"\r\n          from=\"0 67 67\"\r\n          to=\"360 67 67\"\r\n          dur=\"8s\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n      </path>\r\n    </svg>\r\n  </div>\r\n);\r\n\r\nexport default Loader;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\ninterface FlexRowProps\r\n  extends Omit<React.HTMLProps<HTMLDivElement>, \"as\" | \"ref\"> {}\r\n\r\nconst FlexRow = (props: FlexRowProps): JSX.Element => {\r\n  return (\r\n    <div\r\n      {...props}\r\n      style={{\r\n        ...(props.style || {}),\r\n        display: \"flex\",\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\nexport default FlexRow;\r\n","import { AnimatePresence, motion } from \"framer-motion\";\nimport React from \"react\";\nimport { createPortal } from \"react-dom\";\n\nimport { useWindowSize } from \"../../hooks\";\n\nconst PopOver = ({\n  x,\n  y,\n  children,\n  visible,\n  width,\n  height,\n}: {\n  x: number;\n  y: number;\n  children: JSX.Element | JSX.Element[];\n  visible: boolean;\n  width?: number;\n  height?: number;\n}): JSX.Element => {\n  // console.log(x, y);\n  const windowSize = useWindowSize();\n  const scale = 0.4;\n  return createPortal(\n    <>\n      <AnimatePresence>\n        {visible && (\n          <motion.div\n            animate={{\n              opacity: 1,\n              transition: {\n                delay: 0.1,\n                duration: 0.2,\n                ease: \"circIn\",\n              },\n            }}\n            exit={{ opacity: 0 }}\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"0 8px 32px 0 rgba(49, 49, 49, 0.37)\",\n              width: width ?? windowSize.width * scale,\n              height: height ?? windowSize.height * scale,\n              position: \"absolute\",\n              x: x,\n              y: y,\n              transformBox: \"view-box\",\n              transformOrigin: \"top left\",\n              borderRadius: \".5em\",\n              overflow: \"hidden\",\n            }}\n          >\n            {children}\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </>,\n\n    document.querySelector(\"#popup-container\") as HTMLDivElement\n  );\n};\n\nexport default React.memo(PopOver);\n","import React, { useState } from \"react\";\nimport { toTitleCase } from \"../../utils\";\n/**\n * <th> component with a arrow indicating the filter direction\n */\nconst TableHeader = ({\n  headerTitle,\n  setFilter,\n  setFilterDirection,\n  className,\n  activeFilter,\n}: {\n  headerTitle: string;\n  setFilterDirection: (direction: boolean) => void;\n  setFilter: (filter: string) => void;\n  className?: string;\n  activeFilter: string | undefined;\n}): JSX.Element => {\n\n  const [sortDirection, setSortDirection] = useState(true);\n\n  const showSortArrow =  headerTitle === activeFilter\n\n  return (\n    <th\n      className={className ?? \"editor-panel-table-header\"}\n      onClick={() => {\n        setFilter(headerTitle);\n        setSortDirection(!sortDirection);\n        setFilterDirection(sortDirection);\n      }}\n    >\n      {toTitleCase(headerTitle)}\n      {showSortArrow && sortDirection\n        ? \"▲\"\n        : showSortArrow && !sortDirection\n        ? \"▼\"\n        : \"\"}\n    </th>\n  );\n};\n\nexport default TableHeader;\n\n","import \"../../../../css/table.css\";\n\nimport { SearchInput } from \"evergreen-ui\";\nimport fuzzysort from \"fuzzysort\";\nimport React, { useEffect, useState } from \"react\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport ReactImageFallback from \"react-image-fallback\";\n\nimport CardData from \"../../../../data_structs/CardData\";\nimport { CardView, DndTypes, DragSource } from \"../../../../enums\";\nimport { useLayout, useStoreState } from \"../../../../hooks\";\nimport { formatDate } from \"../../../../utils\";\nimport DraggableRow from \"../../../DragAndDrop/DraggableRow\";\nimport IXDrop from \"../../../DragAndDrop/IXDrop\";\nimport IFrameView from \"../../../IFrameView\";\nimport Loader from \"../../../Loader\";\nimport Button from \"../../../Shared/Button\";\nimport FlexRow from \"../../../Shared/FlexRow\";\nimport PopOver from \"../../PopOver\";\nimport TableHeader from \"../../TableHeader\";\n\n/**\n * Content tab display a list of the availalbe cards, and search bar for quickly finding cards by their title.\n */\n\nconst ContentsTab = (): JSX.Element => {\n  const availableCards = useStoreState(\n    (state) => state.appModel.availableCards\n  );\n\n  const { clearCards, resetLayout } = useLayout();\n\n  const [filterKey, setFilterKey] = useState<string | undefined>();\n  const [filterDirection, setFilterDirection] = useState(true);\n  const [cardItems, setCardItems] = useState(availableCards);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [filteredCards, setFilteredCards] =\n    useState<CardData[]>(availableCards);\n\n  //use search input to filter cards\n  useEffect(() => {\n    if (0 < searchTerm.length) {\n      const sortResult = fuzzysort.go(\n        searchTerm,\n        cardItems.map((c) => c.title)\n      );\n      const aboveThreshholdCardTitles: string[] = sortResult.map(\n        (s) => s.target\n      );\n      const filtered = cardItems.filter((c) =>\n        aboveThreshholdCardTitles.includes(c.title)\n      );\n      setFilteredCards(filtered);\n    } else {\n      setFilteredCards(cardItems);\n    }\n  }, [searchTerm, cardItems]);\n\n  //sort values by column attribute, if filterDirection is true, sort descending, else sort ascending\n  useEffect(() => {\n    const key = filterKey as keyof CardData;\n    const clone = [...availableCards];\n\n    const sortedItems = clone.sort((a, b) => {\n      const aText = a[key];\n      const bText = b[key];\n      if (aText && bText) {\n        if (aText < bText) {\n          return -1;\n        }\n        if (bText < aText) {\n          return 1;\n        }\n      }\n      return 0;\n    });\n    !filterDirection ? sortedItems.reverse() : null;\n    setCardItems(sortedItems);\n  }, [filterKey, availableCards, filterDirection]);\n\n  const contentTabHeader = \"contents-table-header\";\n  return (\n    <div className=\"contents-tab-container\">\n      <FlexRow style={{ padding: \"0.5em\" }}>\n        <SearchInput\n          onChange={(event: React.FormEvent<HTMLInputElement>) =>\n            setSearchTerm(event.currentTarget.value)\n          }\n          placeholder=\"search title\"\n          width=\"80%\"\n        />\n        <Button\n          appearance=\"default\"\n          intent=\"danger\"\n          onClick={(_event) => {\n            resetLayout();\n          }}\n          text=\"Reset Layout\"\n        />\n        <Button\n          appearance=\"minimal\"\n          intent=\"danger\"\n          onClick={(_event) => {\n            clearCards();\n          }}\n          // width={\"10%\"}\n          text=\"Clear All\"\n        />\n      </FlexRow>\n      <IXDrop\n        cardType={DndTypes.CLOCK}\n        className=\"table-container\"\n        droppableId={DragSource.CARD_TABLE}\n        isDropDisabled\n      >\n        <table className=\"contents-tab-table\">\n          <tbody>\n            <tr>\n              {[\"title\", \"author\", \"added\"].map((s, index) => {\n                return (\n                  <TableHeader\n                    activeFilter={filterKey}\n                    className={contentTabHeader}\n                    headerTitle={s}\n                    key={index}\n                    setFilter={setFilterKey}\n                    setFilterDirection={setFilterDirection}\n                  ></TableHeader>\n                );\n              })}\n            </tr>\n          </tbody>\n        </table>\n        <Scrollbars autoHeight autoHeightMax={319} autoHeightMin={100}>\n          <table style={{ padding: \"2em\" }}>\n            <tbody>\n              {filteredCards.map((card, index) => {\n                const { added, id, author, interaction, isActive } = card;\n                return (\n                  <DraggableRow\n                    className={\n                      isActive ? \"content-row-active\" : \"content-row-inactive\"\n                    }\n                    card={card}\n                    dndType={DndTypes.CARD_ROW}\n                    draggableId={id}\n                    index={index}\n                    isDragDisabled={isActive}\n                    key={index.toString()}\n                  >\n                    <>\n                      <td>\n                        <TitleWithIcon card={card} />\n                      </td>\n                      <td>{author}</td>\n                      <td>{formatDate(added)}</td>\n                    </>\n                  </DraggableRow>\n                );\n              })}\n            </tbody>\n          </table>\n        </Scrollbars>\n      </IXDrop>\n    </div>\n  );\n};\n\n/**\n * Fetches a favicon for a card and displays the cards title\n */\nconst TitleWithIcon = ({ card }: { card: CardData }): JSX.Element => {\n  const { src, id, title } = card;\n\n  const iconId = id + \"_icon\";\n\n  const [position, setPosition] = useState([0, 0]);\n  const [hovered, setHovered] = useState(false);\n\n  const [preivewLoaded, setPreviewLoaded] = useState(false);\n  const [delayHandler, setDelayHandler] = useState<NodeJS.Timeout>();\n\n  const handleMouseEnter = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ): void => {\n    setDelayHandler(\n      setTimeout(() => {\n        const { pageY } = event;\n        const el = document.getElementById(iconId)\n          ?.parentElement as HTMLDivElement;\n        const { x } = el.getBoundingClientRect();\n        setPosition([x + 100, pageY]);\n        setHovered(true);\n      }, 250)\n    );\n  };\n\n  const handleMouseLeave = (\n    _event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ): void => {\n    if (delayHandler) {\n      clearTimeout(delayHandler);\n      setHovered(false);\n    }\n  };\n\n  return (\n    <div\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      style={{ display: \"flex\" }}\n    >\n      <div id={iconId} style={{ display: \"flex\", width: 20 }}>\n        <ReactImageFallback\n          className={\n            card.isActive ? \"row-favicon-active\" : \"row-favicon-inactive\"\n          }\n          fallbackImage={`${process.env.PUBLIC_URL}/question_mark.svg`}\n          src={\n            card.contentType === \"image\"\n              ? src\n              : `https://s2.googleusercontent.com/s2/favicons?domain_url=${card.src}`\n          }\n          style={{ width: \"100%\", maxWidth: 20 }}\n        />\n      </div>\n      <PopOver visible={hovered} x={position[0]} y={position[1]}>\n        <IFrameView\n          card={card}\n          cardView={CardView.GRID}\n          objectFit={\"contain\"}\n          onError={(_c) => {}}\n          onLoad={(_c) => {\n            setPreviewLoaded(true);\n          }}\n          scale={1}\n        />\n      </PopOver>\n      <div\n        style={{\n          marginTop: \"auto\",\n          marginBottom: \"auto\",\n          textAlign: \"left\",\n          paddingLeft: \"1em\",\n        }}\n      >\n        {title}\n      </div>\n    </div>\n  );\n};\n\nexport default ContentsTab;\n\nconst LoaderOverlay = ({ visible }: { visible: boolean }): JSX.Element => {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: \"red\",\n        position: \"absolute\",\n        display: \"flex\",\n        alignItems: \"center\",\n      }}\n    >\n      <Loader visible={true} />\n    </div>\n  );\n};\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\ninterface TabPaneProps\r\n  extends Omit<React.HTMLProps<HTMLDivElement>, \"as\" | \"ref\"> {}\r\n\r\nconst TabPane = (\r\n  properties: TabPaneProps\r\n  //   children: JSX.Element | JSX.Element[]\r\n): JSX.Element => {\r\n  return (\r\n    <div\r\n      {...properties}\r\n      style={{\r\n        ...(properties.style || {}),\r\n        width: \"inherit\",\r\n        padding: \".5em\",\r\n      }}\r\n    >\r\n      {properties.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabPane;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\ninterface FlexColumnProps\r\n  extends Omit<React.HTMLProps<HTMLDivElement>, \"as\" | \"ref\"> {}\r\n\r\nconst FlexColumn = (props: FlexColumnProps): JSX.Element => {\r\n  return (\r\n    <div\r\n      {...props}\r\n      style={{\r\n        ...(props.style || {}),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\nexport default FlexColumn;\r\n","import React, { useState, useEffect, useRef } from \"react\";\nimport ReactDom from \"react-dom\";\nimport \"../../../../css/googleFormPopup.css\";\nimport { Pane, Dialog } from \"evergreen-ui\";\nimport Modal from \"../../../Shared/Modal\";\nimport formEmbedUrl from \"../../../../static/formEmbedUrl\";\nimport { useLayout, useStoreState } from \"../../../../hooks\";\nimport classNames from \"classnames\";\nimport Button from \"../../../Shared/Button\";\nimport {\n  ClipboardIcon,\n  InlineAlert,\n  CrossIcon,\n  Heading,\n  ArrowRightIcon,\n} from \"evergreen-ui\";\nimport \"../../../../css/copyField.css\";\nimport Scrollbars from \"react-custom-scrollbars\";\nimport FlexRow from \"../../../Shared/FlexRow\";\nimport { motion } from \"framer-motion\";\nimport DeleteButton from \"../../../CardLayout/ViewCard/DeleteButton\";\nimport FlexColumn from \"../../../Shared/FlexColumn\";\n\n/**\n * Modal popup for displaying cards when in preview mode. Displays on top of the CardLayout, and renders\n * to <div id=\"google-form-popup\"></div> in index.html.\n * @component\n */\n\ninterface GoogleFormPopupProperties {\n  visible: boolean;\n  onCloseComplete: () => void;\n}\n\nconst GoogleFormPopup = ({\n  visible,\n  onCloseComplete,\n}: GoogleFormPopupProperties): JSX.Element => {\n  const layoutState = useStoreState((state) => state.layoutsModel.activeLayout);\n  const ls = useStoreState((state) => state.layoutsModel.layoutsString);\n  const layoutSheetUrl = useStoreState(\n    (state) => state.googleSheetsModel.layoutSheetUrl\n  );\n  // console.log(layoutState?.extendedLayout);\n  // console.log(layoutState?.extendedLayout.layoutSettings);\n\n  const [isShown, setIsShown] = useState(visible);\n  const [isCopiedJSON, setIsCopiedJson] = useState(false);\n  console.log(\"HELLO IM HERE\");\n  const { activeLayout } = useLayout();\n  const layoutString = useStoreState((state) =>\n    JSON.stringify(state.layoutsModel.activeLayout)\n  );\n  const bufferLayout = useStoreState((state) =>\n    JSON.stringify(state.layoutsModel.bufferLayout)\n  );\n  useEffect(() => {\n    // console.log(state.layoutsModel.activeLayout);\n    // activeLayout?.layout;\n    // bufferLayout;\n    console.log(bufferLayout);\n  }, [bufferLayout]);\n  useEffect(() => {\n    // console.log(state.layoutsModel.activeLayout);\n    // activeLayout?.layout;\n    // bufferLayout;\n    console.log(layoutString);\n  }, [layoutString]);\n  // useEffect(() => {\n  //   // console.log(state.layoutsModel.activeLayout);\n  //   activeLayout?.layout;\n  // }, [activeLayout?.layout]);\n  console.log(layoutString);\n\n  return ReactDom.createPortal(\n    <Modal\n      onClose={onCloseComplete}\n      active={isShown}\n      containerClassName=\"google-form-popup\"\n      backdropOpacity={0.5}\n    >\n      <div className={\"google-form-popup-inner-container\"}>\n        <DeleteButton\n          onClick={onCloseComplete}\n          action={() => {\n            onCloseComplete;\n          }}\n        />\n        <FlexColumn>\n          <div style={{ borderBottom: \"1px solid white\", padding: \"1vmin\" }}>\n            <Heading color=\"white\" size={900}>\n              Add a new layout\n            </Heading>\n            <Heading color=\"white\" size={400}>\n              {`The layout will be stored in `}{\" \"}\n              <a\n                style={{ color: \"lightblue\" }}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href={layoutSheetUrl}\n              >\n                {layoutSheetUrl}\n              </a>\n            </Heading>\n          </div>\n          <FlexRow\n            style={{\n              height: \"50vh\",\n              padding: \"4vmin\",\n              // alignItems: \"center\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <div\n              // className={copyFieldContainerClass}\n              style={{ width: \"min-content\" }}\n            >\n              <CopyField\n                onCopy={(e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n                  setIsCopiedJson(true);\n                }}\n                onCloseComplete={onCloseComplete}\n                text={layoutString}\n              />\n            </div>\n            <GoogleFormIframe src={formEmbedUrl} active={isCopiedJSON} />\n          </FlexRow>\n        </FlexColumn>\n      </div>\n    </Modal>,\n    document.querySelector(\"#google-form-popup\") as HTMLElement\n  );\n};\nexport default GoogleFormPopup;\n//TODO: IMPROVE INHERITANCE OF BUTTONS\nconst CopyField = ({\n  text,\n  onCloseComplete,\n  onCopy,\n  isCurrentClipBoardContent,\n}: {\n  text: string;\n  isCurrentClipBoardContent?: boolean;\n  onCloseComplete: () => void;\n  onCopy: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n}): JSX.Element => {\n  const [isClipBoardCorrect, setIsClipBoardCorrect] = useState(false);\n  const [isCopied, setIsCopied] = useState(false);\n\n  useEffect(() => {\n    navigator.clipboard\n      .readText()\n      .then((clipboardText) => {\n        if (text === clipboardText) {\n          setIsClipBoardCorrect(true);\n          setIsCopied(true);\n        } else {\n          setIsCopied(false);\n          setIsClipBoardCorrect(false);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Failed to read clipboard contents:\", error);\n      });\n  }, [text]);\n  return (\n    <>\n      <Button\n        iconBefore={<ClipboardIcon />}\n        text={\"Copy Layout To Clip Board\"}\n        onClick={(e) => {\n          navigator.clipboard.writeText(text);\n          setIsCopied(true);\n          onCopy(e);\n        }}\n        width={250}\n        height={100}\n        intent={\"success\"}\n        appearance={\"primary\"}\n      />\n      {/* <div>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            paddingTop: \"1em\",\n          }}\n        ></div>\n      </div> */}\n    </>\n  );\n};\n\nconst GoogleFormIframe = ({\n  src,\n  active,\n}: {\n  src: string;\n  active: boolean;\n}): JSX.Element => {\n  return (\n    <div\n      style={{\n        width: 500,\n        height: \"100%\",\n        overflow: \"hidden\",\n        position: \"relative\",\n      }}\n    >\n      <motion.div\n        style={{\n          position: \"absolute\",\n          width: \"100%\",\n          height: \"100%\",\n          backgroundColor: \"red\",\n          zIndex: 1,\n          top: 0,\n          left: 0,\n          opacity: 0.5,\n          display: \"flex\",\n          alignItems: \"center\",\n          pointerEvents: active ? \"none\" : \"all\",\n        }}\n        animate={active ? { opacity: 0 } : {}}\n      >\n        <div\n          style={{\n            width: \"50%\",\n            margin: \"auto\",\n            fontWeight: \"bold\",\n            border: \"1px solid white\",\n            padding: \"1em\",\n            backgroundColor: \"white\",\n            opacity: 1,\n          }}\n        >\n          Press the Copy Layout Button before Submitting New Layout\n        </div>\n      </motion.div>\n      <iframe\n        src={src}\n        // className={\"google-form-iframe\"}\n        // width={\"100%\"}\n        frameBorder={0}\n        marginHeight={0}\n        marginWidth={0}\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: \"100%\",\n        }}\n      ></iframe>\n    </div>\n  );\n};\n\nconst SideButton = (): JSX.Element => {\n  return (\n    <div\n      style={{\n        // position: \"absolute\",\n        left: \"-100%\",\n        height: 300,\n        width: 300,\n        backgroundColor: \"red\",\n      }}\n    >\n      hello\n    </div>\n  );\n};\n\n{\n  /* <Heading color={isCopiedJSON ? \"green\" : \"\"}>\n            1. Press the Copy Button\n          </Heading> */\n}\n{\n  /* <Heading>\n            {isCopiedJSON\n              ? \"2. Fill out the form, and paste the copied text into the Content field, then submit\"\n              : \"\"}\n          </Heading> */\n}\n","const formEmbedUrl =\n  \"https://docs.google.com/forms/d/e/1FAIpQLSeKP2imQv_UCj4qrGNk7mT6Rzz83F30IvEl8ZFdERIdzSnvig/viewform?usp=sf_link\";\n\nexport default formEmbedUrl;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  useStoreState,\n  useStoreActions,\n  useWindowSize,\n  useApp,\n  useLayout,\n} from \"../../../../hooks\";\nimport { AppMode, DndTypes, DragSource } from \"../../../../enums\";\nimport { StatusIndicator } from \"evergreen-ui\";\nimport { formatDate } from \"../../../../utils\";\nimport \"../../../../css/table.css\";\nimport PopOver from \"../../PopOver\";\nimport CardLayout from \"../../../CardLayout/CardLayout\";\nimport LayoutData from \"../../../../data_structs/LayoutData\";\nimport IXDrop from \"../../../DragAndDrop/IXDrop\";\nimport appConfig from \"../../../../static/appConfig\";\n/**\n * Displays the available layouts.\n */\n\nconst LayoutTable = (): JSX.Element => {\n  const externalLayoutsState = useStoreState(\n    (state) => state.layoutsModel.externalLayouts\n  );\n  const activeLayoutState = useStoreState(\n    (state) => state.layoutsModel.activeLayout\n  );\n\n  const { setActiveLayout } = useLayout();\n\n  return (\n    <div>\n      <IXDrop\n        className={\"table-container\"}\n        droppableId={DragSource.LAYOUT_TABLE}\n        isDropDisabled={false}\n        cardType={DndTypes.CLOCK}\n      >\n        <table>\n          <tbody>\n            <tr>\n              <th>Title</th>\n              <th>Date Added</th>\n              <th>Author</th>\n            </tr>\n          </tbody>\n        </table>\n        <table>\n          <tbody>\n            {externalLayoutsState.map((l, index) => {\n              const { id, title, author, added } = l;\n              return (\n                <tr key={index} onClick={(e) => setActiveLayout(l)}>\n                  <td\n                    key={index}\n                    style={{ display: \"flex\", justifyContent: \"center\" }}\n                  >\n                    {id === activeLayoutState?.id && (\n                      <StatusIndicator color=\"success\" />\n                    )}\n                    <LayoutTitle layout={l} />\n                  </td>\n                  <td>{formatDate(added)}</td>\n                  <td>{author}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </IXDrop>\n    </div>\n  );\n};\n\nexport default LayoutTable;\n\nconst LayoutTitle = ({ layout }: { layout: LayoutData }): JSX.Element => {\n  const [hovered, setHovered] = useState(false);\n\n  const [position, setPosition] = useState([0, 0]);\n  const { title } = layout;\n  const { width, height } = useWindowSize();\n  const scale = 0.5;\n  const { appMode } = useApp();\n\n  const layoutCardIds = layout.sources();\n  const layoutWidgetsIds = layout.widgets();\n\n  const cards = useStoreState((state) =>\n    state.appModel.availableCards.filter((c) => layoutCardIds.includes(c.src))\n  );\n\n  const widgets = useStoreState((state) =>\n    state.appModel.availableWidgets.filter((c) =>\n      layoutWidgetsIds.includes(c.id)\n    )\n  );\n\n  // const appMod\n  return (\n    <div>\n      <div\n        onMouseEnter={(e) => {\n          const { pageX, pageY } = e;\n          setPosition([pageX, pageY]);\n          setHovered(true);\n        }}\n        onMouseLeave={(e) => {\n          setHovered(false);\n        }}\n        style={{\n          textDecoration: hovered ? \"underline\" : \"\",\n        }}\n      >\n        {title}\n      </div>\n\n      {appMode === AppMode.EDIT && hovered && (\n        <PopOver\n          width={width * scale}\n          height={height * scale}\n          x={position[0]}\n          y={position[1]}\n          visible={hovered}\n        >\n          <div\n            style={{\n              transform: `scale(${scale})`,\n              transformOrigin: \"inherit\",\n              height,\n              width,\n            }}\n          >\n            <CardLayout\n              cols={appConfig.gridCols}\n              rows={appConfig.gridRows}\n              width={width}\n              height={height}\n              layout={layout.layout}\n              margin={[20, 20]}\n              appMode={AppMode.DISPLAY}\n              onLayoutChange={(l) => {}}\n              cards={cards}\n              widgets={widgets}\n            />\n          </div>\n        </PopOver>\n      )}\n    </div>\n  );\n};\n","import { AddIcon } from \"evergreen-ui\";\nimport React, { FC, useEffect, useState } from \"react\";\n\nimport {\n  useLayout,\n  useSheets,\n  useStoreActions,\n  useStoreState,\n} from \"../../../../hooks\";\nimport formEmbedUrl from \"../../../../static/formEmbedUrl\";\nimport Button from \"../../../Shared/Button\";\nimport Panel from \"../../../Shared/Panel\";\nimport TabPane from \"../TabPane\";\nimport GoogleFormPopup from \"./GoogleFormPopup\";\nimport LayoutTable from \"./LayoutTable\";\n\nconst LayoutTab = (): JSX.Element => {\n  const bufferState = useStoreState((state) => state.layoutsModel.bufferLayout);\n  const { activeLayout } = useLayout();\n  const { fetchTopLevelSheet } = useSheets();\n\n  const [showNewLayoutPopup, setShowNewLayoutPopup] = useState(false);\n\n  const [layoutString, setLayoutString] = useState(\n    JSON.stringify(activeLayout)\n  );\n\n  useEffect(() => {\n    setLayoutString(JSON.stringify(bufferState));\n  }, [activeLayout, bufferState]);\n\n  return (\n    <div>\n      <TabPane\n        style={{\n          display: \"flex\",\n          width: \"100%\",\n          justifyContent: \"flex-start\",\n        }}\n      >\n        <Button\n          iconBefore={<AddIcon />}\n          onClick={(e) => {\n            setShowNewLayoutPopup(true);\n          }}\n          text=\"Add New Layout\"\n          width=\"55%\"\n          intent=\"success\"\n          appearance=\"primary\"\n        />\n      </TabPane>\n      {showNewLayoutPopup && (\n        <GoogleFormPopup\n          onCloseComplete={() => {\n            fetchTopLevelSheet();\n            setShowNewLayoutPopup(false);\n          }}\n          visible={showNewLayoutPopup}\n        />\n      )}\n      <div>\n        <LayoutTable />\n      </div>\n    </div>\n  );\n};\n\nexport default LayoutTab;\n","import React, { ReactElement, ReactNode, useEffect, useRef } from \"react\";\nimport {\n  Draggable,\n  DraggableProps,\n  DraggableProvided,\n  DraggingStyle,\n} from \"react-beautiful-dnd\";\nimport { createPortal } from \"react-dom\";\n\nimport { DndTypes } from \"../../enums\";\nimport { useStoreState } from \"../../hooks\";\n\ninterface DraggableDiv extends Omit<DraggableProps, \"children\"> {\n  dndType: DndTypes;\n  className?: string;\n  children: ReactNode;\n  dragAll?: boolean;\n  height?: number;\n  id?: string;\n}\n\n/**\n * A draggable div for wrapping draggable widgets in the editor panel.\n */\nconst DraggableWidget = ({\n  dndType,\n  className,\n  children,\n  dragAll,\n  draggableId,\n  index,\n  height,\n  id,\n}: DraggableDiv): JSX.Element => {\n  const currentLayoutState = useStoreState(\n    (state) => state.layoutsModel.activeLayout\n  );\n\n  let isInLayout = currentLayoutState?.layout.lg\n    .map((l) => l.i)\n    .includes(draggableId);\n\n  useEffect(() => {\n    isInLayout = currentLayoutState?.layout.lg\n      .map((l) => l.i)\n      .includes(draggableId);\n  }, [currentLayoutState]);\n  const getItemStyle = () => ({\n    display: isInLayout ? \"none\" : \"block\",\n  });\n\n  // const renderDraggable = useDraggableInPortal();\n\n  if (!React.isValidElement(children)) return <div />;\n  return (\n    <div\n      style={{\n        display: isInLayout ? \"block\" : \"block\",\n        height: height ?? \"\",\n      }}\n    >\n      {/* <div style={{ display: isInLayout ? \"none\" : \"block\" }}> */}\n      <Draggable draggableId={draggableId} index={index}>\n        {\n          //@ts-ignore\n          (provided, snapshot) => {\n            // renderDraggable((provided, snapshot) => {\n            console.log(isInLayout);\n            if (\n              snapshot.isDragging &&\n              provided &&\n              provided.draggableProps &&\n              provided.draggableProps.style\n            ) {\n              //@ts-ignore\n              provided.draggableProps.style.left =\n                //@ts-ignore\n                provided.draggableProps.style.offsetLeft;\n              //@ts-ignore\n              provided.draggableProps.style.top =\n                //@ts-ignore\n                provided.draggableProps.style.offsetTop;\n            }\n            return (\n              <div\n                id={id}\n                className={className}\n                ref={provided.innerRef}\n                // style={getItemStyle()}\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n              >\n                {React.cloneElement(children, { provided })}\n              </div>\n            );\n          }\n        }\n      </Draggable>\n    </div>\n  );\n};\n\nexport default DraggableWidget;\n","import \"../../../../css/table.css\";\nimport \"../../../../css/viewCard.css\";\nimport \"../../../../css/widgetsTab.css\";\n\nimport { Heading } from \"evergreen-ui\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Layout, Layouts } from \"react-grid-layout\";\n\nimport WidgetData, { WidgetType } from \"../../../../data_structs/WidgetData\";\nimport { DndTypes, DragSource } from \"../../../../enums\";\nimport {\n  useApp,\n  useLayout,\n  useStoreState,\n  useWindowSize,\n} from \"../../../../hooks\";\nimport appConfig from \"../../../../static/appConfig\";\nimport DraggableWidget from \"../../../DragAndDrop/DraggableWidget\";\nimport IXDrop from \"../../../DragAndDrop/IXDrop\";\nimport Clock from \"../../../Widgets/Clock\";\nimport HowToUse from \"../../../Widgets/HowToUse\";\nimport WidgetRenderer from \"../../../Widgets/WidgetRenderer\";\nimport TabPane from \"../TabPane\";\n\n/**\n * Table for displaying the available card layouts\n */\nconst WidgetsTab = (): JSX.Element => {\n  const { activeLayout, activeWidgets } = useLayout();\n  const availableWidgets = useStoreState(\n    (state) => state.appModel.availableWidgets\n  );\n  //\n  // const {  } = useApp();\n\n  const [widgetsToRender, setWidgetsToRender] =\n    useState<WidgetData[]>(availableWidgets);\n\n  useEffect(() => {\n    setWidgetsToRender(\n      availableWidgets.filter((w) => !activeLayout?.widgets().includes(w.id))\n    );\n  }, [availableWidgets, activeLayout, activeWidgets.length]);\n\n  return (\n    <TabPane>\n      <div\n        style={{\n          backgroundColor: \"#1f1f1f\",\n          borderRadius: \".5em\",\n          overflow: \"hidden\",\n          padding: \"1em\",\n        }}\n      >\n        {widgetsToRender.length == 0 ? (\n          <div>All Widgets in Use</div>\n        ) : (\n          <IXDrop\n            cardType={DndTypes.CLOCK}\n            className=\"widgets-container\"\n            droppableId={DragSource.WIDGETS_TABLE}\n            isDropDisabled={false}\n          >\n            <WidgetWrapper>\n              {(scale, colWidth, rowHeight) => {\n                return widgetsToRender\n                  .filter((w) => !activeLayout?.widgets().includes(w.id))\n                  .map((w, i) => {\n                    return (\n                      <DraggableWidget\n                        className=\"draggable-widget\"\n                        dndType={DndTypes.WIDGET}\n                        draggableId={w.id}\n                        height={scale * w.h * rowHeight}\n                        index={i}\n                        isDragDisabled={false}\n                        key={i}\n                        id={`widgets-tab-draggable-${w.id}`}\n                      >\n                        <WidgetRenderer\n                          widget={w}\n                          scale={scale}\n                          colWidth={colWidth}\n                          rowHeight={rowHeight}\n                        />\n                      </DraggableWidget>\n                    );\n                  });\n              }}\n            </WidgetWrapper>\n          </IXDrop>\n        )}\n      </div>\n    </TabPane>\n  );\n};\n\nexport default WidgetsTab;\n\nconst WidgetWrapper = ({\n  children,\n}: {\n  children: (\n    scale: number,\n    colWidth: number,\n    rowHeight: number\n  ) => JSX.Element | JSX.Element[];\n}): JSX.Element => {\n  const editorPanelRef = useRef<HTMLDivElement>();\n  const [scalar, setScalar] = useState(1);\n  const { width, height } = useWindowSize();\n\n  const colWidth = width / appConfig.gridCols;\n  const rowHeight = height / appConfig.gridRows;\n\n  useEffect(() => {\n    editorPanelRef.current = document.getElementById(\n      \"editor-panel\"\n    ) as HTMLDivElement;\n    console.log(editorPanelRef.current.getBoundingClientRect().width);\n    setScalar(editorPanelRef.current.getBoundingClientRect().width / width);\n  }, [width]);\n\n  return <div>{children(scalar * 1.5, colWidth, rowHeight)}</div>;\n};\n","import { Heading, Switch, TextInputField } from \"evergreen-ui\";\r\nimport React, { useState, useEffect, useRef, ChangeEvent } from \"react\";\r\nimport {\r\n  useApp,\r\n  useElementSize,\r\n  useSheets,\r\n  useStoreState,\r\n} from \"../../../../hooks\";\r\nimport appConfig from \"../../../../static/appConfig\";\r\nimport IssuesTable from \"../IssuesTab/IssuesTable\";\r\nimport { AutoSizer } from \"react-virtualized\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport FlexRow from \"../../../Shared/FlexRow\";\r\nimport FlexColumn from \"../../../Shared/FlexColumn\";\r\n\r\nconst AppTab = (): JSX.Element => {\r\n  const { rotationSpeed, setRotationSpeed, setRotateLayouts } = useApp();\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRotationSpeed(parseInt(e.target.value));\r\n  };\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) =>\r\n    //@ts-ignore\r\n    console.log(e.target.value);\r\n  // setval(e.target.value);\r\n  const [val, setval] = useState(\"\");\r\n  const [checked, setChecked] = React.useState(true);\r\n\r\n  useEffect(() => {\r\n    console.log(checked);\r\n    setRotateLayouts(checked);\r\n    if (checked) {\r\n      //   setRotationSpeed(4000);\r\n      //   setRotationSpeed(appConfig.rotationDuration);\r\n    } else {\r\n      setRotationSpeed(appConfig.rotationDuration);\r\n    }\r\n  }, [checked]);\r\n\r\n  useEffect(() => {\r\n    console.log(val);\r\n  }, [val]);\r\n\r\n  const [squareRef, { width, height }] = useElementSize();\r\n\r\n  return (\r\n    <div style={{ height: \"100%\", pointerEvents: \"all\", padding: \"1vmin\" }}>\r\n      <Heading size={600} style={{ color: \"white\" }}>\r\n        General\r\n      </Heading>\r\n      <div style={{ margin: \".5em\" }}>\r\n        <FlexRow style={{ alignItems: \"center\" }}>\r\n          <Label>Rotate Layouts</Label>\r\n          <div style={{ paddingLeft: \".5em\" }}>\r\n            <Switch\r\n              style={{ margin: \"auto\" }}\r\n              checked={checked}\r\n              onChange={(e) => setChecked(e.target.checked)}\r\n            />\r\n          </div>\r\n        </FlexRow>\r\n      </div>\r\n      {/* </div> */}\r\n      <SheetLinks />\r\n      {/* <input\r\n        // label={<Label>Layout Duration</Label>}\r\n        // description=\"Duration that layout is displayed\"\r\n        // placeholder={rotationSpeed.toString()}\r\n        // type=\"text\"\r\n        required\r\n        // value={rotationSpeed.toString()}\r\n        // validationMessage=\"This field is required\"\r\n        // pattern=\"[0-9]*\"\r\n        // disabled={false}\r\n        // onChange={onChange}\r\n        // defaul\r\n        value={val}\r\n        type=\"text\"\r\n        defaultValue={\"hello\"}\r\n        //@ts-ignore\r\n        // onChange={(e) => setRotationSpeed(parseInt(e.target.value))}\r\n        onChange={(e) => setval(e.target.value)}\r\n        //   // e()\r\n        // }}\r\n      /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Label = ({ children }: { children: string }) => {\r\n  return <div style={{ color: \"white\" }}>{children}</div>;\r\n};\r\n\r\nexport default AppTab;\r\n\r\nconst SheetLinks = (): JSX.Element => {\r\n  const { cardSheetUrl, layoutSheetUrl, formUrl, parentSheetUrl } = useSheets();\r\n  const links = [parentSheetUrl, cardSheetUrl, layoutSheetUrl, formUrl];\r\n  const titles = [\"Parent Sheet\", \"Content\", \"Layouts\", \"Google Form\"];\r\n\r\n  return (\r\n    <FlexColumn>\r\n      <Heading size={600} style={{ color: \"white\" }}>\r\n        Google Sheets\r\n      </Heading>\r\n      <FlexColumn\r\n        style={{\r\n          padding: \".5em\",\r\n          backgroundColor: \"#1f1f1f\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      >\r\n        {links.map((link, i) => (\r\n          <SheetLink title={titles[i]} link={link ?? \"not provided\"} />\r\n        ))}\r\n      </FlexColumn>\r\n    </FlexColumn>\r\n  );\r\n};\r\n\r\nconst SheetLink = ({\r\n  title,\r\n  link,\r\n}: {\r\n  title: string;\r\n  link: string;\r\n}): JSX.Element => {\r\n  return (\r\n    <FlexRow\r\n      style={{\r\n        padding: \".5em\",\r\n        backgroundColor: \"#1f1f1f\",\r\n        overflow: \"hidden\",\r\n        justifyContent: \"space-between\",\r\n      }}\r\n    >\r\n      <Heading style={{ color: \"white\" }}>{title + \":  \"}</Heading>\r\n      <a\r\n        href={link}\r\n        style={{\r\n          color: \"white\",\r\n          overflow: \"hidden\",\r\n          textOverflow: \"ellipsis\",\r\n          maxWidth: \"80%\",\r\n        }}\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n      >\r\n        {link}\r\n      </a>\r\n    </FlexRow>\r\n  );\r\n};\r\n","import \"../../../../css/table.css\";\nimport \"../../../../css/editorPanel.css\";\n\nimport React from \"react\";\nimport Scrollbars from \"react-custom-scrollbars\";\n\nimport { useElementSize, useErrors } from \"../../../../hooks\";\nimport AppError from \"../../../../interfaces/AppError\";\n\n/**\n * Table for displaying app errors from the apps store model\n */\n\nconst IssuesTable = (): JSX.Element => {\n  const { appErrors, layoutErrors, googleSheetsErrors } = useErrors();\n  const [squareReference, { height }] = useElementSize();\n  return (\n    <div\n      className=\"table-container\"\n      style={{ height: 400, width: 500, overflowY: \"scroll\" }}\n      // style={{ height: 400, width: \"100%\", overflowY: \"scroll\" }}\n    >\n      <div ref={squareReference} style={{ width: \"100%\" }}>\n        {[...appErrors, ...layoutErrors, ...googleSheetsErrors].map(\n          (error, index) => {\n            return <ErrorMessage error={error} key={index} />;\n          }\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst ErrorMessage = ({ error }: { error: AppError }): JSX.Element => {\n  const { errorType, link, source } = error;\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        padding: \"1vmin\",\n        flexDirection: \"column\",\n        // height: 300,\n        width: \"100%\",\n        marginRight: \"10vmin\",\n        backgroundColor: \"#421717\",\n        borderBottom: \"1px solid white\",\n        boxSizing: \"border-box\",\n      }}\n    >\n      <div\n        style={{\n          color: \"#D14343\",\n          textTransform: \"uppercase\",\n          fontWeight: \"bold\",\n        }}\n      >{`⚠ ${errorType}`}</div>\n      <div>{source}</div>\n      <div>\n        <a\n          href={link}\n          rel=\"noreferrer\"\n          style={{ color: \"lightblue\" }}\n          target=\"_blank\"\n        >\n          {link}\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default IssuesTable;\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport FlexRow from \"../../../Shared/FlexRow\";\r\nimport IssuesTable from \"./IssuesTable\";\r\n\r\nconst IssuesTab = (): JSX.Element => {\r\n  return (\r\n    <div style={{ height: \"100%\", pointerEvents: \"all\" }}>\r\n      <IssuesTable />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IssuesTab;\r\n","import React from \"react\";\nimport { Heading } from \"evergreen-ui\";\nimport \"../../css/editorPanel.css\";\nimport ContentTab from \"./EditorTabs/ContentsTab/ContentsTab\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\nimport LayoutTab from \"./EditorTabs/LayoutTab/LayoutTab\";\nimport WidgetsTab from \"./EditorTabs/WidgetsTab/WidgetsTab\";\nimport AppTab from \"./EditorTabs/AppTab/AppTab\";\nimport IssuesTab from \"./EditorTabs/IssuesTab/IssuesTab\";\nimport { useErrors } from \"../../hooks\";\n// https://github.com/goodoldneon/react-drag-and-dock#api\n\n/**Contains all the tab components for the editor panel */\nconst Editor = (): JSX.Element => {\n  return (\n    <Tabs>\n      <TabList>\n        <Tab>Content</Tab>\n        <Tab>Widgets</Tab>\n        <Tab>Layouts</Tab>\n        <Tab>App Settings</Tab>\n        <Tab>\n          Issues <ErrorsNofictions />\n        </Tab>\n      </TabList>\n      <TabPanel>\n        <ContentTab />\n      </TabPanel>\n      <TabPanel>\n        <WidgetsTab />\n      </TabPanel>\n      <TabPanel>\n        <LayoutTab />\n      </TabPanel>\n      <TabPanel>\n        <AppTab />\n      </TabPanel>\n      <TabPanel>\n        <IssuesTab />\n      </TabPanel>\n    </Tabs>\n  );\n};\n\nexport default Editor;\n\nconst ErrorsNofictions = (): JSX.Element => {\n  const { allErrors } = useErrors();\n  return (\n    <div\n      style={{\n        backgroundColor: allErrors.length > 0 ? \"#D14343\" : \"#52BD95\",\n        opacity: 0.5,\n        borderRadius: \"50%\",\n        width: 20,\n        height: 20,\n        aspectRatio: \"1/1\",\n        fontSize: \"70%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginLeft: \"1em\",\n      }}\n    >\n      {allErrors.length > 50 ? \"50+\" : allErrors.length}\n    </div>\n  );\n};\n","import \"../../css/editorPanel.css\";\n\nimport classNames from \"classnames\";\nimport { MinusIcon, PlusIcon } from \"evergreen-ui\";\nimport React, { useState } from \"react\";\nimport ReactDom from \"react-dom\";\nimport Draggable from \"react-draggable\";\n\nimport { AppMode } from \"../../enums\";\nimport { useStoreState } from \"../../hooks\";\nimport Editor from \"./Editor\";\n\n/**Draggable panel which contains the editor body, as well as a header bar with a min/max button for resizing the panel. Renders to \"editor-panel-container\" div in index.html*/\n\nconst EditorPanel = (): JSX.Element => {\n  const viewModeState = useStoreState((state) => state.appModel.appMode);\n\n  const [minimized, setMinimized] = useState(false);\n\n  const editorPanelClass = classNames(\"editor-panel\", {\n    \"editor-panel-full\": !minimized,\n    hidden: viewModeState === AppMode.DISPLAY,\n    \"editor-panel-minimized\": minimized,\n  });\n  const editorClass = classNames(\"editor\", {\n    \"editor-visible\": viewModeState === AppMode.EDIT,\n  });\n\n  return ReactDom.createPortal(\n    <Draggable\n      bounds={{\n        left: 0,\n        top: 0,\n        right: window.innerWidth - 50,\n        bottom: window.innerHeight - 50,\n      }}\n      defaultClassName={editorPanelClass}\n      defaultPosition={{ x: 100, y: 100 }}\n      handle=\".editor-panel-handle\"\n    >\n      <div className={editorClass} id=\"editor-panel\">\n        <PanelHeader>\n          <BarButton\n            icon={<PlusIcon />}\n            onMouseUp={() => {\n              setMinimized(false);\n            }}\n          />\n          <BarButton\n            icon={<MinusIcon />}\n            onMouseUp={() => {\n              setMinimized(true);\n            }}\n          />\n        </PanelHeader>\n        <Editor />\n      </div>\n    </Draggable>,\n    document.querySelector(\"#editor-panel-container\") as HTMLDivElement\n  );\n};\n\nexport default React.memo(EditorPanel);\n\ninterface PanelHeaderProperties {\n  children: JSX.Element | JSX.Element[];\n}\nconst PanelHeader = ({ children }: PanelHeaderProperties): JSX.Element => {\n  return <div className=\"editor-panel-handle panel-header\">{children}</div>;\n};\n\nconst BarButton = ({\n  icon,\n  onMouseUp,\n}: {\n  icon: JSX.Element;\n  onMouseUp: React.MouseEventHandler<HTMLDivElement>;\n}): JSX.Element => {\n  return (\n    <div className=\"window-button\" onMouseUp={onMouseUp}>\n      {icon}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useStoreActions } from \"../hooks\";\nimport { useLongPress } from \"react-use\";\nimport appConfig from \"../static/appConfig\";\nimport { motion } from \"framer-motion\";\n\n/**Invisible button in the bottom left corner of the screen. Hold touch/click to toggle app mode */\nconst ModeChangeButton = (): JSX.Element => {\n  const toggleModeAction = useStoreActions(\n    (actions) => actions.appModel.toggleAppMode\n  );\n\n  const longPressEvent = useLongPress(() => {\n    toggleModeAction();\n  });\n\n  const modeChangeButtonStyle = {\n    position: \"absolute\",\n    width: 50,\n    height: 50,\n    border: appConfig.showModeSwitchButton ? \"1px solid red\" : \"none\",\n    bottom: 0,\n    left: 0,\n    opacity: 0,\n  } as React.CSSProperties;\n\n  // const [mosued, setmosue] = useState(initialState)\n  return ReactDOM.createPortal(\n    <motion.div\n      style={{ ...modeChangeButtonStyle, backgroundColor: \"white\" }}\n      whileTap={{ backgroundColor: \"green\", opacity: 1 }}\n    >\n      <div style={modeChangeButtonStyle} {...longPressEvent}></div>,\n    </motion.div>,\n    document.querySelector(\"#mode-change-button\") as HTMLElement\n  );\n};\n\nexport default ModeChangeButton;\n","import React, { useState, useEffect } from \"react\";\n\nconst Screen = ({\n  children,\n  padding,\n}: {\n  children: JSX.Element | JSX.Element[];\n  padding?: string;\n}): JSX.Element => {\n  return (\n    <div style={{width: \"100vw\", height: \"100vh\"}}>\n      {children}\n    </div>\n  );\n};\n\nexport default Screen;\n","// eslint-disable-next-line simple-import-sort/imports\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { useApp, useClickAnyWhere, useInterval, useLayout } from \"../../hooks\";\r\nimport { AppMode } from \"../../enums\";\r\nimport appConfig from \"../../static/appConfig\";\r\nimport { useIdle } from \"react-use\";\r\n\r\nconst AppTimers = ({ children }: { children: JSX.Element }): JSX.Element => {\r\n  const isIdle = useIdle(appConfig.idleTime, false);\r\n\r\n  const {\r\n    appMode,\r\n    toggleAppMode,\r\n    rotateLayouts,\r\n    sheetsAreLoaded,\r\n    transitionLayout,\r\n  } = useApp();\r\n\r\n  const { useNextLayout } = useLayout();\r\n\r\n  const { reset, stop } = useInterval(() => {\r\n    if (appMode === AppMode.DISPLAY && rotateLayouts) {\r\n      transitionLayout(1);\r\n      // useNextLayout();\r\n    }\r\n  }, appConfig.rotationDuration);\r\n\r\n  useClickAnyWhere(() => {\r\n    reset();\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (appMode === AppMode.EDIT) {\r\n      toggleAppMode();\r\n    }\r\n  }, [isIdle]);\r\n\r\n  return children;\r\n};\r\n\r\nexport default AppTimers;\r\n","import \"./App.global.css\";\nimport \"./css/global.css\";\n\nimport { DndContext } from \"@dnd-kit/core\";\nimport React, { useEffect } from \"react\";\nimport { useIdle, useInterval } from \"react-use\";\n\nimport Background from \"./components/Background\";\nimport CardLayout from \"./components/CardLayout/CardLayout\";\nimport AppDragContext from \"./components/AppWrappers/AppDragContext\";\nimport EditorPanel from \"./components/EditorPanel/EditorPanel\";\nimport HowToUse from \"./components/HowToUse/HowToUse\";\nimport ModeChangeButton from \"./components/ModeChangeButton\";\nimport Screen from \"./components/Shared/Screen\";\nimport { AppMode } from \"./enums\";\nimport {\n  useApp,\n  useEffectOnce,\n  useLayout,\n  useSheets,\n  useStoreActions,\n  useWindowSize,\n} from \"./hooks\";\nimport appConfig from \"./static/appConfig\";\nimport { Layouts } from \"react-grid-layout\";\nimport Loader from \"./components/Loader\";\nimport AppTimers from \"./components/AppWrappers/AppTimers\";\n\n/**\n * High level container, the root component. Initial fetch requests to spreadsheets are made here via a useEffect hook.\n */\n\nconst App = (): JSX.Element => {\n  const { fetchTopLevelSheet } = useSheets();\n\n  const { activeLayout, setBufferLayout, activeCards, activeWidgets } =\n    useLayout();\n\n  const { appMode, sheetsAreLoaded } = useApp();\n\n  useEffectOnce(() => {\n    fetchTopLevelSheet();\n  });\n\n  const { width, height } = useWindowSize();\n\n  useEffect(() => {\n    console.log(activeWidgets);\n  }, [activeWidgets]);\n  return (\n    <>\n      <Background />\n      <ModeChangeButton />\n      <AppTimers>\n        <AppDragContext>\n          <Loader visible={sheetsAreLoaded} />\n          <EditorPanel />\n          <Screen>\n            <DndContext>\n              {activeLayout && sheetsAreLoaded && (\n                <CardLayout\n                  appMode={appMode}\n                  cards={[...activeCards]}\n                  cols={appConfig.gridCols}\n                  height={height}\n                  isDraggable={appMode === AppMode.EDIT}\n                  isResizable={appMode === AppMode.EDIT}\n                  layout={activeLayout.layout}\n                  margin={[20, 20]}\n                  onLayoutChange={(l) => {\n                    const newLayout: Layouts = {\n                      lg: l,\n                      md: l,\n                      sm: l,\n                      xs: l,\n                      xxs: l,\n                    };\n                    if (appMode === AppMode.EDIT) {\n                      activeLayout.setGridLayout(newLayout);\n                    }\n                    setBufferLayout(newLayout);\n                  }}\n                  rows={appConfig.gridRows}\n                  widgets={[...activeWidgets]}\n                  width={width}\n                />\n              )}\n            </DndContext>\n          </Screen>\n        </AppDragContext>\n      </AppTimers>\n    </>\n  );\n};\n\nexport default App;\n","import { InteractionType } from \"../enums\";\nimport IFrameValidator from \"../IFrameValidator\";\nimport type RawCardRow from \"../interfaces/RawCardRow\";\nimport { WidgetType } from \"./WidgetData\";\nimport imageThumbnail from \"image-thumbnail\";\n\nexport type ContentType = \"video\" | \"image\" | \"website\" | \"embed\" | \"widget\";\n\ninterface ContentCardData {\n  src: string;\n  title: string;\n  added: Date;\n  sourceId: string;\n  author: string;\n}\n\ninterface WidgetCardData {\n  widgetType: WidgetType;\n}\n/**Contains all the information needed to create a display card */\nexport default class CardData {\n  readonly id: string;\n  readonly src: string;\n  readonly title: string;\n  readonly added?: Date;\n  // readonly sourceId: string;\n  readonly author: string;\n  readonly interaction: InteractionType;\n  readonly contentType: ContentType;\n  readonly metaData: ContentCardData | WidgetCardData;\n  validator!: IFrameValidator;\n  isActive!: boolean;\n  failed!: boolean;\n\n  constructor(row: RawCardRow, index: number) {\n    // console.log(`GOT IMAGE CARD ROW: ${isImgLink(row.src)}`);\n    this.id = `row_${index}_${row.title}`;\n    // this.id = row.src;\n    this.src = row.src;\n    this.title = row.title;\n    this.added = new Date(row.added);\n    // this.sourceId = row.src;\n    this.author = row.author;\n    this.interaction =\n      InteractionType[row.interaction as keyof typeof InteractionType];\n    this.contentType = getContentType(this.src);\n    if (this.contentType === \"widget\" && row.widgetType) {\n      this.metaData = {\n        widgetType: row.widgetType,\n      };\n      this.id = row.widgetType;\n    } else {\n      this.metaData = {\n        src: row.src,\n        title: row.title,\n        added: new Date(row.added),\n        sourceId: row.src,\n        author: row.author,\n      };\n      this.id = row.src;\n    }\n\n    this.isActive = false;\n    this.validator = new IFrameValidator(this.src);\n    this.failed = false;\n\n    // if ()\n  }\n  setActive(b: boolean): void {\n    this.isActive = b;\n  }\n\n  fail(): void {\n    console.log(this.validator.errors);\n    this.failed = true;\n    // this.error =\n  }\n  // generateThumbnail(): void {\n  //   imageThumbnail('resources/images/dog.jpg')\n  //   .then(thumbnail => { console.log(thumbnail) })\n  //   .catch(err => console.error(err));\n  //   // try {\n  //   //   const thumbnail = await imageThumbnail();\n  //   //   console.log(thumbnail);\n  //   // } catch (err) {\n  //   //   console.error(err);\n  //   // }\n  // }\n}\n\nfunction getContentType(url: string): ContentType {\n  if (isImgLink(url)) return \"image\";\n  if (isVideo(url)) return \"video\";\n  if (isEmbed(url)) return \"embed\";\n  if (isWebsite(url)) return \"website\";\n  return \"widget\";\n}\n\nfunction isImgLink(url: string) {\n  if (typeof url !== \"string\") return false;\n  const imageReg = /[./](gif|jpg|jpeg|tiff|png)$/i;\n  return imageReg.test(url);\n}\n\nfunction isVideo(url: string) {\n  if (typeof url !== \"string\") return false;\n  const videoReg = /[./](mp4|webm|mov)$/i;\n  return videoReg.test(url);\n  // url.match(/^http[^\\?]*.(jpg|jpeg|gif|png|tiff|bmp)(\\?(.*))?$/gim) != null\n}\n\nfunction isEmbed(url: string) {\n  if (typeof url !== \"string\") return false;\n  return url.includes(\"embed\");\n}\n\nfunction isWebsite(url: string) {\n  if (typeof url !== \"string\") return false;\n  return url.includes(\"https\");\n}\n","import { WidgetInfo } from \"../static/widgets\";\nimport { ContentType } from \"./CardData\";\n\nexport type WidgetType = \"clock\" | \"info\";\n\n/**Contains all the information needed to create a display card */\nexport default class WidgetData {\n  readonly id: WidgetType;\n  readonly contentType: ContentType;\n  readonly w: number;\n  readonly h: number;\n\n  isActive: boolean;\n\n  constructor(data: WidgetInfo) {\n    // constructor(name: WidgetType) {\n    this.id = data.id;\n    this.w = data.w;\n    this.h = data.h;\n    // this.id = name as string;\n    this.isActive = false;\n    this.contentType = \"widget\";\n  }\n  setActive(b: boolean): void {\n    this.isActive = b;\n  }\n}\n","import { WidgetType } from \"../data_structs/WidgetData\";\n\nconst clock = { id: \"clock\" as WidgetType, w: 2, h: 2 };\nconst info = { id: \"info\" as WidgetType, w: 1, h: 1 };\n\nexport interface WidgetInfo {\n  id: WidgetType;\n  w: number;\n  h: number;\n}\n\ntype Widgets = {\n  [k in WidgetType]: { id: WidgetType; w: number; h: number };\n};\n\nconst widgets: Widgets = {\n  clock,\n  info,\n};\n\nexport default widgets;\n","import type { Action, Thunk, ThunkOn } from \"easy-peasy\";\r\nimport { action, thunk, thunkOn } from \"easy-peasy\";\r\nimport _ from \"lodash\";\r\n\r\nimport CardData from \"../data_structs/CardData\";\r\nimport WidgetData from \"../data_structs/WidgetData\";\r\nimport { AppMode } from \"../enums\";\r\nimport AppError from \"../interfaces/AppError\";\r\nimport type RawCardRow from \"../interfaces/RawCardRow\";\r\nimport appConfig from \"../static/appConfig\";\r\nimport widgets from \"../static/widgets\";\r\nimport { StoreModel } from \"./index\";\r\n/**\r\n * Core app model\r\n * @param\r\n */\r\n\r\nexport interface AppDataModel {\r\n  //state\r\n  isLoaded: boolean;\r\n  availableCards: CardData[];\r\n  availableWidgets: WidgetData[];\r\n  activeWidgets: WidgetData[];\r\n  activeCards: CardData[];\r\n  rotationSpeed: number;\r\n  rotateLayouts: boolean;\r\n  appMode: AppMode;\r\n  appErrors: AppError[];\r\n  // animationCounter: number;\r\n  //listeners\r\n  onCardSheetLoadSuccess: ThunkOn<AppDataModel, never, StoreModel>;\r\n  onSwapCardContent: ThunkOn<AppDataModel, never, StoreModel>;\r\n  onSetActiveLayout: ThunkOn<AppDataModel, never, StoreModel>;\r\n  //managers\r\n  manageViewModeChange: Thunk<AppDataModel, AppMode>;\r\n  toggleAppMode: Thunk<AppDataModel, never>;\r\n  //simple setters\r\n  addAppError: Action<AppDataModel, AppError>;\r\n  setRotationSpeed: Action<AppDataModel, number>;\r\n  setRotateLayouts: Action<AppDataModel, boolean>;\r\n  setAppMode: Action<AppDataModel, AppMode>;\r\n  // setAnimationCounter: Action<AppDataModel, number>;\r\n  setActiveCards: Action<AppDataModel, CardData[]>;\r\n  setActiveWidgets: Action<AppDataModel, WidgetData[]>;\r\n  setAvailableCards: Action<AppDataModel, CardData[]>;\r\n  // transitionLayout: Thunk<AppDataModel, number>;\r\n}\r\n\r\nconst availableWidgets = Object.values(widgets).map(\r\n  (widgetInfo) => new WidgetData(widgetInfo)\r\n);\r\n\r\nconst appModel: AppDataModel = {\r\n  //state\r\n  isLoaded: false,\r\n  availableCards: [],\r\n  availableWidgets: availableWidgets,\r\n  activeWidgets: [],\r\n  activeCards: [],\r\n  appErrors: [],\r\n  rotateLayouts: true,\r\n  rotationSpeed: appConfig.rotationDuration,\r\n  appMode: AppMode.DISPLAY,\r\n  // animationCounter: 0,\r\n  //managers\r\n  /**Control side effects for altering the view state of the app, and dispatch a setter for the state */\r\n  manageViewModeChange: thunk((actions, viewModeEnum) => {\r\n    actions.setAppMode(viewModeEnum);\r\n    switch (viewModeEnum) {\r\n      case AppMode.EDIT:\r\n        break;\r\n      case AppMode.DISPLAY:\r\n        break;\r\n      case AppMode.CYCLE:\r\n        break;\r\n      default:\r\n        undefined;\r\n    }\r\n  }),\r\n  toggleAppMode: thunk((actions, _, { getState }) => {\r\n    switch (getState().appMode) {\r\n      case AppMode.EDIT:\r\n        actions.setAppMode(AppMode.DISPLAY);\r\n        break;\r\n      case AppMode.DISPLAY:\r\n        actions.setAppMode(AppMode.EDIT);\r\n        break;\r\n      case AppMode.CYCLE:\r\n        break;\r\n      default:\r\n    }\r\n  }),\r\n  setAvailableCards: action((state, cardDataArray) => {\r\n    state.availableCards = cardDataArray;\r\n  }),\r\n  setActiveCards: action((state, cardDataArray) => {\r\n    state.activeCards = cardDataArray;\r\n  }),\r\n  setActiveWidgets: action((state, widgetDataArray) => {\r\n    state.activeWidgets = widgetDataArray;\r\n  }),\r\n  setAppMode: action((state, viewModeEnum) => {\r\n    state.appMode = viewModeEnum;\r\n  }),\r\n  setRotationSpeed: action((state, speed) => {\r\n    state.rotationSpeed = speed;\r\n  }),\r\n  setRotateLayouts: action((state, should) => {\r\n    state.rotateLayouts = should;\r\n  }),\r\n  // transitionLayout: thunk((actions, val, {getState}) => {\r\n\r\n  //   actions.setAnimationCounter(getState().animationCounter+1)\r\n  //   setTimeout(()=>{\r\n  //     actions.set\r\n  //   })\r\n  // }),\r\n  // setAnimationCounter: action((state, value) => {\r\n  //   state.animationCounter += 1;\r\n  // }),\r\n\r\n  addAppError: action((state, error) => {\r\n    const errorsString = state.appErrors.map(\r\n      (error) => JSON.stringify(error) as string\r\n    );\r\n    const newError = JSON.stringify(error);\r\n    // const errorBasic = error.\r\n    if (!errorsString.includes(newError)) {\r\n      state.appErrors.push(error);\r\n    }\r\n  }),\r\n\r\n  //listeners\r\n  onCardSheetLoadSuccess: thunkOn(\r\n    // targetResolver:\r\n    (actions, storeActions) =>\r\n      storeActions.googleSheetsModel.setAppGoogleSheetData,\r\n    // handler:\r\n    async (actions, target) => {\r\n      target.payload.getSheetRows<RawCardRow>(\"CARDS\").then((rows) => {\r\n        const rawCardRowsArray = rows.map((row) => {\r\n          return {\r\n            src: row.src,\r\n            title: row.title,\r\n            added: row.added,\r\n            sourceid: row.sourceid,\r\n            author: row.author,\r\n            interaction: row.interaction,\r\n          } as RawCardRow;\r\n        });\r\n\r\n        const cards = rawCardRowsArray.map(\r\n          (c: RawCardRow, index) => new CardData(c, index)\r\n        );\r\n        actions.setAvailableCards(cards);\r\n      });\r\n    }\r\n  ),\r\n  onSetActiveLayout: thunkOn(\r\n    (actions, storeActions) => storeActions.layoutsModel.setActiveLayout,\r\n    async (actions, layout, { getState }) => {\r\n      const activeSourceIds = new Set(layout.payload.sources());\r\n\r\n      const { availableWidgets } = getState();\r\n      actions.setActiveWidgets(\r\n        availableWidgets.filter((w) => layout.payload.widgets().includes(w.id))\r\n      );\r\n\r\n      const availableCardsUpdated = getState().availableCards.map((card) => {\r\n        if (activeSourceIds.has(card.id)) {\r\n          card.setActive(true);\r\n        } else {\r\n          card.setActive(false);\r\n        }\r\n        return card;\r\n      });\r\n      const activeCards = getState().availableCards.filter((card) => {\r\n        return activeSourceIds.has(card.id);\r\n      });\r\n      actions.setAvailableCards(availableCardsUpdated);\r\n      actions.setActiveCards(activeCards);\r\n    }\r\n  ),\r\n\r\n  onSwapCardContent: thunkOn(\r\n    (actions, storeActions) => storeActions.layoutsModel.swapCardContent,\r\n    async (actions, payload, { getState }) => {\r\n      const newCards = getState().activeCards.map((c) => {\r\n        return c.id === payload.payload.targetId\r\n          ? getState().availableCards.find(\r\n              (c) => c.id === payload.payload.sourceId\r\n            )\r\n          : c;\r\n      });\r\n      if (newCards) {\r\n        actions.setActiveCards(newCards as CardData[]);\r\n      }\r\n    }\r\n  ),\r\n};\r\n\r\nexport default appModel;\r\n","import { ExtendedLayout, GridSettings, LayoutSettings } from \"../data_structs/LayoutData\"\n\nconst layout = { \"lg\": [{ \"w\": 2, \"h\": 1, \"x\": 0, \"y\": 0, \"i\": \"clock\", \"moved\": false, \"static\": true }, { \"w\": 2, \"h\": 2, \"x\": 2, \"y\": 0, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/DuBois_Racism.png\", \"moved\": false, \"static\": false }, { \"w\": 1, \"h\": 2, \"x\": 0, \"y\": 1, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/VideoGames.jpeg\", \"moved\": false, \"static\": false }], \"md\": [{ \"w\": 2, \"h\": 1, \"x\": 0, \"y\": 0, \"i\": \"clock\", \"moved\": false, \"static\": true }, { \"w\": 2, \"h\": 2, \"x\": 2, \"y\": 0, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/DuBois_Racism.png\", \"moved\": false, \"static\": false }, { \"w\": 1, \"h\": 2, \"x\": 0, \"y\": 1, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/VideoGames.jpeg\", \"moved\": false, \"static\": false }], \"sm\": [{ \"w\": 2, \"h\": 1, \"x\": 0, \"y\": 0, \"i\": \"clock\", \"moved\": false, \"static\": true }, { \"w\": 2, \"h\": 2, \"x\": 2, \"y\": 0, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/DuBois_Racism.png\", \"moved\": false, \"static\": false }, { \"w\": 1, \"h\": 2, \"x\": 0, \"y\": 1, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/VideoGames.jpeg\", \"moved\": false, \"static\": false }], \"xs\": [{ \"w\": 2, \"h\": 1, \"x\": 0, \"y\": 0, \"i\": \"clock\", \"moved\": false, \"static\": true }, { \"w\": 2, \"h\": 2, \"x\": 2, \"y\": 0, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/DuBois_Racism.png\", \"moved\": false, \"static\": false }, { \"w\": 1, \"h\": 2, \"x\": 0, \"y\": 1, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/VideoGames.jpeg\", \"moved\": false, \"static\": false }], \"xxs\": [{ \"w\": 2, \"h\": 1, \"x\": 0, \"y\": 0, \"i\": \"clock\", \"moved\": false, \"static\": true }, { \"w\": 2, \"h\": 2, \"x\": 2, \"y\": 0, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/DuBois_Racism.png\", \"moved\": false, \"static\": false }, { \"w\": 1, \"h\": 2, \"x\": 0, \"y\": 1, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/VideoGames.jpeg\", \"moved\": false, \"static\": false }] }\n\nconst gridSettings: GridSettings = {\n    defaultBackgroundColor: \"red\"\n}\nconst layoutSettings: LayoutSettings  = {\n    gridSettings: gridSettings,\n    cardSettings: [],\n}\n\nconst extendedLayoutTest: ExtendedLayout = {\n    layout: layout,\n    layoutSettings: layoutSettings,\n    widgets: [],\n}\n\nexport default extendedLayoutTest","import { Layout, Layouts } from \"react-grid-layout\";\n\nimport type { CardSwapEvent } from \"../interfaces/CardEvents\";\nimport type { GridPosition } from \"../interfaces/GridPosition\";\nimport type RawLayoutRow from \"../interfaces/RawLayoutRow\";\nimport extendedLayoutTest from \"../static/extendedLayoutTest\";\nimport widgets from \"../static/widgets\";\nimport CardData from \"./CardData\";\nimport WidgetData from \"./WidgetData\";\n\nexport interface CardOptions {\n  id: string;\n  scale: number;\n  backgroundColor: string;\n  objectPosition: string;\n}\n\nexport interface GridSettings {\n  defaultBackgroundColor: string;\n}\nexport interface LayoutSettings {\n  cardSettings: CardOptions[];\n  gridSettings: GridSettings;\n}\n\nexport interface ExtendedLayout {\n  layout: Layouts;\n  layoutSettings: LayoutSettings;\n  widgets: WidgetData[];\n}\n\nexport default class LayoutData {\n  readonly title: string;\n  readonly author: string;\n  readonly added: Date;\n  readonly id: string;\n  readonly sourceLayout: ExtendedLayout;\n  layout: Layouts;\n  layoutWidgets: WidgetData[];\n\n  constructor(row: RawLayoutRow) {\n    const { layout } = testGetLayout(row);\n    this.id = row.title + \"_\" + row.timestamp;\n    this.title = row.title;\n    this.author = row.author;\n    this.added = new Date(row.timestamp.split(\" \")[0]);\n    this.sourceLayout = JSON.parse(row.layout).layout;\n\n    this.layoutWidgets = JSON.parse(row.layout).layoutWidgets\n      ? JSON.parse(row.layout).layoutWidgets\n      : [];\n    this.layout = layout;\n  }\n\n  swapCard(swapInfo: CardSwapEvent): void {\n    for (const [k, v] of Object.entries(this.layout)) {\n      for (const [index, layoutValue] of v.entries()) {\n        if (layoutValue.i == swapInfo.targetId) {\n          v[index].i = swapInfo.sourceId;\n        }\n      }\n      this.layout[k] = v;\n    }\n  }\n\n  removeCard(toRemoveId: string): void {\n    for (const [k, v] of Object.entries(this.layout)) {\n      for (const [index, layoutValue] of v.entries()) {\n        this.layout[k] = v.filter((l) => l.i !== toRemoveId);\n      }\n    }\n  }\n\n  clearCards(): void {\n    for (const [k, v] of Object.entries(this.layout)) {\n      for (const [index, layoutValue] of v.entries()) {\n        this.layout[k] = [];\n      }\n    }\n  }\n\n  addCard(toAdd: CardData | WidgetData, pos: GridPosition): void {\n    const lg = Object.entries(this.layout)[0][1];\n    if (lg.map((l) => l.i).includes(toAdd.id)) {\n      console.log(\"ADDING SOMETHING THAT'S ALREADY PRESENT\");\n    }\n    for (const [k, v] of Object.entries(this.layout)) {\n      const newItem: Layout = {\n        x: pos.x,\n        y: pos.y,\n        w: 1,\n        h: 1,\n        i: toAdd.id,\n      };\n      this.layout[k].push(newItem);\n    }\n  }\n  addWidget(toAdd: WidgetData, pos: GridPosition): void {\n    this.layoutWidgets.push(toAdd);\n    for (const [k, v] of Object.entries(this.layout)) {\n      const newItem: Layout = {\n        x: pos.x,\n        y: pos.y,\n        w: 1,\n        h: 1,\n        i: toAdd.id,\n      };\n      this.layout[k].push(newItem);\n    }\n  }\n  resetLayout(): void {\n    this.layout = JSON.parse(JSON.stringify(this.sourceLayout));\n  }\n  setGridLayout(newGridLayout: Layouts): void {\n    for (const [k, v] of Object.entries(this.layout)) {\n      for (const [index, layoutValue] of v.entries()) {\n        this.layout[k] = newGridLayout[k];\n      }\n    }\n  }\n  sources(): string[] {\n    const lg = this.layout.lg;\n    return lg.map((l: Layout) => l.i);\n  }\n  widgets(): string[] {\n    const lg = this.layout.lg;\n    const justWidgets = lg.filter((l: any) =>\n      Object.keys(widgets).includes(l.i)\n    );\n    return justWidgets.map((l: any) => l.i);\n  }\n}\nfunction testGetLayout(row: RawLayoutRow): ExtendedLayout {\n  const test = JSON.parse(row.layout);\n  return test.layout ? test : extendedLayoutTest;\n}\n","import type { Action, Computed, Thunk, ThunkOn } from \"easy-peasy\";\r\nimport { action, computed, thunk, thunkOn } from \"easy-peasy\";\r\nimport { Layouts } from \"react-grid-layout\";\r\n\r\nimport LayoutData from \"../data_structs/LayoutData\";\r\nimport AppError from \"../interfaces/AppError\";\r\nimport { CardAddEvent, CardSwapEvent } from \"../interfaces/CardEvents\";\r\nimport RawLayoutRow from \"../interfaces/RawLayoutRow\";\r\nimport appConfig from \"../static/appConfig\";\r\nimport backupData from \"../static/backupLayout.json\";\r\nimport { StoreModel } from \"./index\";\r\n\r\nexport interface LayoutsModel {\r\n  //state\r\n  activeLayout: LayoutData | undefined;\r\n  externalLayouts: LayoutData[];\r\n  bufferLayout: Layouts;\r\n  layoutErrors: AppError[];\r\n\r\n  //listeners\r\n  onSetAppGoogleSheetData: ThunkOn<LayoutsModel, never, StoreModel>;\r\n  onToggleViewMode: ThunkOn<LayoutsModel, never, StoreModel>;\r\n\r\n  //simple setters\r\n  setActiveLayout: Action<LayoutsModel, LayoutData>;\r\n  setExternalLayouts: Action<LayoutsModel, LayoutData[]>;\r\n  setBufferLayout: Action<LayoutsModel, Layouts>;\r\n  updateLayout: Action<LayoutsModel, CardSwapEvent>;\r\n\r\n  layoutsString: Computed<LayoutsModel, string>;\r\n\r\n  //update\r\n  setNextLayout: Thunk<LayoutsModel, never, StoreModel>;\r\n  swapCardContent: Thunk<LayoutsModel, CardSwapEvent, StoreModel>;\r\n  deleteCard: Thunk<LayoutsModel, string, StoreModel>;\r\n  clearCards: Thunk<LayoutsModel, never, StoreModel>;\r\n  addCard: Thunk<LayoutsModel, CardAddEvent, never, StoreModel>;\r\n  resetLayout: Thunk<LayoutsModel, never, StoreModel>;\r\n  addLayoutError: Action<LayoutsModel, AppError>;\r\n\r\n  animationCounter: number;\r\n  transitionLayout: Thunk<LayoutsModel, number>;\r\n  setAnimationCounter: Action<LayoutsModel, number>;\r\n}\r\n\r\nconst layoutsModel: LayoutsModel = {\r\n  //state\r\n  activeLayout: undefined,\r\n  externalLayouts: [],\r\n  layoutErrors: [],\r\n  bufferLayout: backupData as unknown as Layouts,\r\n  layoutsString: computed([(state) => state.bufferLayout], (bufferLayout) => {\r\n    return JSON.stringify(bufferLayout);\r\n  }),\r\n\r\n  //listeners\r\n  /**On setAppGoogleSheetData, create an array of LayoutData objects from the provided rows */\r\n  onSetAppGoogleSheetData: thunkOn(\r\n    (actions, storeActions) =>\r\n      storeActions.googleSheetsModel.setAppGoogleSheetData,\r\n    (actions, target, { getState }) => {\r\n      target.payload.getSheetRows<RawLayoutRow>(\"LAYOUTS\").then((rows) => {\r\n        const rawLayoutRows = rows;\r\n        const layouts: LayoutData[] = [];\r\n        const currentLayoutIds = new Set(\r\n          getState().externalLayouts.map((layout) => layout.id)\r\n        );\r\n\r\n        for (const row of rawLayoutRows) {\r\n          try {\r\n            const l = new LayoutData(row);\r\n            if (!currentLayoutIds.has(l.id)) {\r\n              layouts.push(l);\r\n            }\r\n          } catch (error) {\r\n            actions.addLayoutError({\r\n              errorType: \"failed to read layout row\",\r\n              description: `failed to read layout row ${\r\n                row.title ?? \"NO TITLE PROVIDED\"\r\n              }`,\r\n              source: row.title ?? \"NO TITLE PROVIDED\",\r\n              link: \"none\",\r\n            });\r\n          }\r\n        }\r\n        if (appConfig.useStaticLayout) {\r\n          // actions.setActiveLayout(defaultLayout);\r\n          // actions.setBufferLayout(defaultLayout.layout);\r\n        } else {\r\n          const defaultLayout = layouts.filter(\r\n            (layout) => layout.title === appConfig.defaultLayoutName\r\n          )[0];\r\n          if (defaultLayout) {\r\n            actions.setActiveLayout(defaultLayout);\r\n            actions.setBufferLayout(defaultLayout.layout);\r\n          }\r\n        }\r\n        actions.setExternalLayouts(layouts);\r\n      });\r\n    }\r\n  ),\r\n  addLayoutError: action((state, error) => {\r\n    const errorsString = state.layoutErrors.map(\r\n      (error) => JSON.stringify(error) as string\r\n    );\r\n    const newError = JSON.stringify(error);\r\n    if (!errorsString.includes(newError)) {\r\n      state.layoutErrors.push(error);\r\n    }\r\n  }),\r\n  onToggleViewMode: thunkOn(\r\n    // targetResolver:toggleAppMode\r\n    (actions, storeActions) => storeActions.appModel.manageViewModeChange,\r\n    // handler:\r\n    (actions, target, { getState, getStoreState }) => {\r\n      const { activeLayout, bufferLayout } = getState();\r\n      if (activeLayout) {\r\n        const buf = getState().bufferLayout;\r\n        activeLayout.layout = buf;\r\n        activeLayout.setGridLayout(buf);\r\n        actions.setActiveLayout(activeLayout);\r\n      }\r\n    }\r\n  ),\r\n  //simple setters\r\n  setActiveLayout: action((state, newActiveLayout) => {\r\n    state.activeLayout = newActiveLayout;\r\n    state.bufferLayout = JSON.parse(JSON.stringify(newActiveLayout.layout));\r\n  }),\r\n  setNextLayout: thunk((actions, _, { getState }) => {\r\n    const { externalLayouts, activeLayout } = getState();\r\n    if (activeLayout) {\r\n      const currentIndex = externalLayouts\r\n        .map((l) => l.id)\r\n        .indexOf(activeLayout?.id);\r\n      const nextIndex = (currentIndex + 1) % externalLayouts.length;\r\n      const selectedRandom = externalLayouts[nextIndex];\r\n      actions.setActiveLayout(selectedRandom);\r\n    }\r\n  }),\r\n  setExternalLayouts: action((state, newLayoutArray) => {\r\n    state.externalLayouts = newLayoutArray;\r\n  }),\r\n  //mutators\r\n  swapCardContent: thunk((actions, swapInfo, { getState }) => {\r\n    const { activeLayout } = getState();\r\n    if (activeLayout) {\r\n      const buf = getState().bufferLayout;\r\n      activeLayout.layout = buf;\r\n      activeLayout.swapCard(swapInfo);\r\n      actions.setActiveLayout(activeLayout);\r\n    }\r\n  }),\r\n  deleteCard: thunk((actions, cardToDelete, { getState }) => {\r\n    const { activeLayout } = getState();\r\n    if (activeLayout) {\r\n      const buf = getState().bufferLayout;\r\n      activeLayout.layout = buf;\r\n      activeLayout.removeCard(cardToDelete);\r\n      actions.setActiveLayout(activeLayout);\r\n    }\r\n  }),\r\n  clearCards: thunk((actions, _, { getState }) => {\r\n    const { activeLayout } = getState();\r\n    if (activeLayout) {\r\n      activeLayout.clearCards();\r\n      actions.setBufferLayout(activeLayout.layout);\r\n      actions.setActiveLayout(activeLayout);\r\n    }\r\n  }),\r\n  addCard: thunk((actions, cardAddEvent, { getState, getStoreState }) => {\r\n    const { availableCards, availableWidgets } = getStoreState().appModel;\r\n    const { sourceId, targetPosition } = cardAddEvent;\r\n    const cardToAdd = [...availableCards, ...availableWidgets].find(\r\n      (c) => c.id == sourceId\r\n    );\r\n    const { activeLayout } = getState();\r\n    if (activeLayout && cardToAdd) {\r\n      const buf = getState().bufferLayout;\r\n      activeLayout.setGridLayout(buf);\r\n      activeLayout?.addCard(cardToAdd, targetPosition);\r\n      actions.setActiveLayout(activeLayout);\r\n    }\r\n  }),\r\n  resetLayout: thunk((actions, _, { getState }) => {\r\n    const { activeLayout } = getState();\r\n    if (activeLayout) {\r\n      const buf = getState().activeLayout;\r\n      buf?.resetLayout();\r\n      if (buf) {\r\n        actions.setActiveLayout(buf);\r\n      }\r\n    }\r\n  }),\r\n  setBufferLayout: action((state, layouts) => {\r\n    state.bufferLayout = JSON.parse(JSON.stringify(layouts));\r\n  }),\r\n  updateLayout: action((state, swap) => {\r\n    const old = state.activeLayout;\r\n    if (old) {\r\n      old.swapCard(swap);\r\n      state.activeLayout = old;\r\n    }\r\n  }),\r\n  animationCounter: 0,\r\n  setAnimationCounter: action((state, value) => {\r\n    state.animationCounter += 1;\r\n  }),\r\n\r\n  transitionLayout: thunk((actions, val, { getState }) => {\r\n    actions.setAnimationCounter(getState().animationCounter + 1);\r\n    setTimeout(() => {\r\n      actions.setNextLayout();\r\n    }, 1000);\r\n  }),\r\n};\r\n\r\nexport default layoutsModel;\r\n","import { SheetNames } from \"../enums\";\r\n\r\nexport default class GoogleSheetData {\r\n  title!: string;\r\n  sheetId!: string;\r\n  sheets!: Map<SheetNames, unknown[]>;\r\n  constructor(\r\n    title: string,\r\n    sheetId: string,\r\n  ) {\r\n    this.title = title;\r\n    this.sheetId = sheetId;\r\n    this.sheets = new Map();\r\n  }\r\n  getSheetRows<P>(title: SheetNames): Promise<P[]>{\r\n    // const typedArr = this.rows.map(r=>r as P)\r\n    return new Promise<P[]>((resolve, reject)=>{\r\n      const rowArray = this.sheets.get(title);\r\n      if (rowArray){\r\n        resolve(rowArray.map(r=>r as P))\r\n      } else {\r\n        reject(`sheet with title ${title} did not exist`)\r\n      }\r\n    })\r\n  }\r\n  addSheet(title: SheetNames, rows: unknown[]){\r\n    this.sheets.set(title, rows);\r\n  }\r\n}\r\n","import type SheetId from \"../interfaces/SheetId\";\n\nconst cardDataSheetKey: SheetId = {\n  key: \"181P-SDszUOj_xn1HJ1DRrO8pG-LXyXNmINcznHeoK8k\",\n  gid: 0,\n};\nexport default cardDataSheetKey;\n\n\n\n// 1o-R04VC8cIbcmqM68q4ESguaaNYb-0jhoPNgEuKa0i4\n// key: \"181P-SDszUOj_xn1HJ1DRrO8pG-LXyXNmINcznHeoK8k\",\n","import { Action, Computed, computed, Thunk } from \"easy-peasy\";\r\nimport { action, thunk } from \"easy-peasy\";\r\nimport Papa from \"papaparse\";\r\nimport { act } from \"react-dom/test-utils\";\r\n\r\nimport GoogleSheetData from \"../data_structs/GoogleSheetData\";\r\nimport { SheetNames } from \"../enums\";\r\nimport AppError from \"../interfaces/AppError\";\r\nimport PrincipleSheetRow from \"../interfaces/PrincipleSheetRow\";\r\nimport type RawCardRow from \"../interfaces/RawCardRow\";\r\nimport type RawLayoutRow from \"../interfaces/RawLayoutRow\";\r\nimport cardDataSheetKey from \"../static/cardDataSheetKey\";\r\n\r\n/**\r\n * Responsible for making requests to google sheets. Other models must listen this model to intercept the sheet payload.\r\n * Also stores the fetch data purely for debugging purposes.\r\n */\r\n\r\nexport interface GoogleSheetsModel {\r\n  //state\r\n  parentGoogleSheet: GoogleSheetData | undefined;\r\n  cardDataGoogleSheet: RawCardRow[] | null;\r\n  layoutDataGoogleSheet: RawLayoutRow[] | null;\r\n\r\n  formUrl: string | undefined;\r\n  parentSheetUrl: string | undefined;\r\n  layoutSheetUrl: string | undefined;\r\n  cardSheetUrl: string | undefined;\r\n  googleSheetsErrors: AppError[];\r\n\r\n  //computed\r\n  sheetsAreLoaded: Computed<GoogleSheetsModel, boolean>;\r\n  //requests\r\n  fetchTopLevelSheet: Thunk<GoogleSheetsModel>;\r\n  fetchAppGoogleSheet: Thunk<GoogleSheetsModel>;\r\n  fetchSheet: Thunk<GoogleSheetsModel, { url: string; name: SheetNames }[]>;\r\n  //setters\r\n  setFormUrl: Action<GoogleSheetsModel, string>;\r\n  setParentSheetUrl: Action<GoogleSheetsModel, string>;\r\n  setCardSheetUrl: Action<GoogleSheetsModel, string>;\r\n  setLayoutsSheetUrl: Action<GoogleSheetsModel, string>;\r\n  setAppGoogleSheetData: Action<GoogleSheetsModel, GoogleSheetData>;\r\n  setCardDataGoogleSheet: Action<GoogleSheetsModel, RawCardRow[]>;\r\n  setLayoutDataGoogleSheet: Action<GoogleSheetsModel, RawLayoutRow[]>;\r\n  addGoogleSheetError: Action<GoogleSheetsModel, AppError>;\r\n}\r\n\r\ninterface LoadSheetResult {\r\n  rows: unknown[];\r\n  sheetTitle: SheetNames;\r\n}\r\n\r\nconst googleSheetsModel: GoogleSheetsModel = {\r\n  //sheets\r\n  layoutDataGoogleSheet: null,\r\n  cardDataGoogleSheet: null,\r\n  parentGoogleSheet: undefined,\r\n  //sheet urls\r\n  parentSheetUrl: undefined,\r\n  formUrl: undefined,\r\n  layoutSheetUrl: undefined,\r\n  cardSheetUrl: undefined,\r\n  //other state\r\n  googleSheetsErrors: [],\r\n  sheetsAreLoaded: computed(\r\n    [\r\n      (state) => [\r\n        state.layoutDataGoogleSheet,\r\n        state.cardDataGoogleSheet,\r\n        state.parentGoogleSheet,\r\n      ],\r\n    ],\r\n    (sheets) => {\r\n      return sheets.every((s) => s !== null);\r\n    }\r\n  ),\r\n  fetchTopLevelSheet: thunk((actions) => {\r\n    try {\r\n      getSheetData(\"TOP_LEVEL\", process.env.REACT_APP_SHEET_URL as string)\r\n        .then((r) => {\r\n          const sheetRow = r.rows[0] as PrincipleSheetRow;\r\n          actions.setFormUrl(sheetRow.googleForm);\r\n          actions.setLayoutsSheetUrl(sheetRow.layoutsSheet);\r\n          actions.setCardSheetUrl(sheetRow.cardsSheet);\r\n          actions.setParentSheetUrl(process.env.REACT_APP_SHEET_URL as string);\r\n          actions.fetchSheet([\r\n            {\r\n              name: \"LAYOUTS\",\r\n              url: googleSheetUrlToCSVUrl(sheetRow.layoutsSheet),\r\n            },\r\n            {\r\n              name: \"CARDS\",\r\n              url: googleSheetUrlToCSVUrl(sheetRow.cardsSheet),\r\n            },\r\n          ]);\r\n        })\r\n        .catch((error) => {\r\n          actions.setLayoutsSheetUrl(\r\n            googleSheetUrlToCSVUrl(\r\n              `${process.env.PUBLIC_URL}/LAYOUTS_BACKUP.csv`\r\n            )\r\n          );\r\n          actions.setCardSheetUrl(\r\n            googleSheetUrlToCSVUrl(`${process.env.PUBLIC_URL}/CARDS_BACKUP.csv`)\r\n          );\r\n          actions.fetchSheet([\r\n            {\r\n              name: \"LAYOUTS\",\r\n              url: `${process.env.PUBLIC_URL}/LAYOUTS_BACKUP.csv`,\r\n            },\r\n            {\r\n              name: \"CARDS\",\r\n              url: `${process.env.PUBLIC_URL}/CARDS_BACKUP.csv`,\r\n            },\r\n          ]);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"DOING BACKUP\");\r\n      actions.addGoogleSheetError({\r\n        errorType: \"failed to fetch master google sheet\",\r\n        description:\r\n          \"failed to get the mater google sheet, reverting to local svg\",\r\n        source: process.env.REACT_APP_SHEET_URL ?? \"NA\",\r\n        link: process.env.REACT_APP_SHEET_URL ?? \"NA\",\r\n      });\r\n    }\r\n  }),\r\n  fetchSheet: thunk(async (actions, sheets, { getState }) => {\r\n    console.log(getState().cardSheetUrl, getState().layoutSheetUrl);\r\n    const sheetResponses = sheets.map((s) => getSheetData(s.name, s.url));\r\n    Promise.allSettled(sheetResponses).then((results) => {\r\n      const sheetData = new GoogleSheetData(\"DSC App\", cardDataSheetKey.key);\r\n      const goodValues: PromiseFulfilledResult<LoadSheetResult>[] = [];\r\n\r\n      results.forEach((result, num) => {\r\n        console.log(result);\r\n        if (result.status == \"fulfilled\") {\r\n          goodValues.push(result);\r\n          sheetData.addSheet(result.value.sheetTitle, result.value.rows);\r\n        }\r\n        if (result.status == \"rejected\") {\r\n          console.error(\"failed \");\r\n        }\r\n      });\r\n      actions.setAppGoogleSheetData(sheetData);\r\n      sheetData.getSheetRows(\"CARDS\").then((r) => {\r\n        actions.setCardDataGoogleSheet(r as RawCardRow[]);\r\n      });\r\n      sheetData.getSheetRows(\"LAYOUTS\").then((r) => {\r\n        actions.setLayoutDataGoogleSheet(r as RawLayoutRow[]);\r\n      });\r\n    });\r\n  }),\r\n\r\n  fetchAppGoogleSheet: thunk(async (actions, _, { getState }) => {\r\n    const getCardDataResponse = getSheetData(\r\n      \"CARDS\",\r\n      getState().cardSheetUrl as string\r\n    );\r\n    const getLayoutDataResponse = getSheetData(\r\n      \"LAYOUTS\",\r\n      getState().layoutSheetUrl as string\r\n    );\r\n\r\n    Promise.allSettled([getCardDataResponse, getLayoutDataResponse]).then(\r\n      (results) => {\r\n        const sheetData = new GoogleSheetData(\"DSC App\", cardDataSheetKey.key);\r\n        const goodValues: PromiseFulfilledResult<LoadSheetResult>[] = [];\r\n\r\n        results.forEach((result, num) => {\r\n          console.log(result);\r\n          if (result.status == \"fulfilled\") {\r\n            goodValues.push(result);\r\n            sheetData.addSheet(result.value.sheetTitle, result.value.rows);\r\n          }\r\n          if (result.status == \"rejected\") {\r\n            actions.addGoogleSheetError({\r\n              errorType: \"failed to fetch layout or card sheet\",\r\n              description: \"could not retrieve google sheet\",\r\n              source: \"LAYOUTS/CARD\",\r\n              link: \"NA\",\r\n            });\r\n            console.error(\"failed \");\r\n          }\r\n        });\r\n        actions.setAppGoogleSheetData(sheetData);\r\n        sheetData.getSheetRows(\"CARDS\").then((r) => {\r\n          actions.setCardDataGoogleSheet(r as RawCardRow[]);\r\n        });\r\n        sheetData.getSheetRows(\"LAYOUTS\").then((r) => {\r\n          actions.setLayoutDataGoogleSheet(r as RawLayoutRow[]);\r\n        });\r\n      }\r\n    );\r\n  }),\r\n  setAppGoogleSheetData: action((state, googleSheet) => {\r\n    state.parentGoogleSheet = googleSheet;\r\n  }),\r\n  setCardDataGoogleSheet: action((state, sheet) => {\r\n    state.cardDataGoogleSheet = sheet;\r\n  }),\r\n  setLayoutDataGoogleSheet: action((state, sheet) => {\r\n    state.layoutDataGoogleSheet = sheet;\r\n  }),\r\n  setParentSheetUrl: action((state, parentSheetUrl) => {\r\n    state.parentSheetUrl = parentSheetUrl;\r\n  }),\r\n  setFormUrl: action((state, formUrl) => {\r\n    state.formUrl = formUrl;\r\n  }),\r\n  setCardSheetUrl: action((state, cardSheetUrl) => {\r\n    state.cardSheetUrl = cardSheetUrl;\r\n  }),\r\n  setLayoutsSheetUrl: action((state, layoutSheetUrl) => {\r\n    state.layoutSheetUrl = layoutSheetUrl;\r\n  }),\r\n  addGoogleSheetError: action((state, googleSheetError) => {\r\n    const errorsString = state.googleSheetsErrors.map(\r\n      (error) => JSON.stringify(error) as string\r\n    );\r\n    const newError = JSON.stringify(googleSheetError);\r\n    if (!errorsString.includes(newError)) {\r\n      state.googleSheetsErrors.push(googleSheetError);\r\n    }\r\n  }),\r\n};\r\n\r\nexport default googleSheetsModel;\r\n\r\n/**Converts the key for a google sheet into a url which can be used to fetch as .csv blob */\r\nfunction googleSheetUrlToCSVUrl(url: string): string {\r\n  const sections = url.split(\"/\");\r\n  const sheetKey = sections[5];\r\n  const sectionsGid = url.split(\"gid=\");\r\n  const gid = sectionsGid[1];\r\n  const csvUrl = `https://docs.google.com/spreadsheets/d/${sheetKey}/export?format=csv&gid=${gid}`;\r\n  return csvUrl;\r\n}\r\n\r\nfunction getSheetData(\r\n  sheetTitle: SheetNames,\r\n  sheetUrl: string\r\n): Promise<LoadSheetResult> {\r\n  let data;\r\n  return new Promise<LoadSheetResult>((resolve, reject) => {\r\n    try {\r\n      Papa.parse(sheetUrl, {\r\n        download: true,\r\n        header: true,\r\n        delimiter: \",\",\r\n        dynamicTyping: true,\r\n        complete: (results) => {\r\n          data = results.data;\r\n          console.log(data);\r\n          resolve({ rows: data, sheetTitle: sheetTitle });\r\n        },\r\n      });\r\n    } catch (error) {\r\n      reject(\"failed to get sheet\");\r\n    }\r\n  });\r\n}\r\n","import appData, { AppDataModel } from \"./appModel\";\r\nimport layoutsModel, { LayoutsModel } from \"./layoutsModel\";\r\nimport googleSheetsModel, { GoogleSheetsModel } from \"./googleSheetsModel\";\r\n// https://codesandbox.io/s/easy-peasy-typescript-v3-riqbl?file=/src/model/todos.ts\r\n\r\nexport interface StoreModel {\r\n  appModel: AppDataModel;\r\n  layoutsModel: LayoutsModel;\r\n  googleSheetsModel: GoogleSheetsModel;\r\n}\r\n\r\nconst model: StoreModel = {\r\n  appModel: appData,\r\n  layoutsModel: layoutsModel,\r\n  googleSheetsModel: googleSheetsModel,\r\n};\r\n\r\nexport default model;\r\n","import { createStore, action } from \"easy-peasy\";\nimport model from \"./model\";\n\nconst store = createStore(model, { name: \"Cuboard App Store\" });\n\nexport default store;\n","import React from \"react\";\nimport App from \"./App\";\nimport { StoreProvider } from \"easy-peasy\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <StoreProvider store={store}>\n    <App />\n  </StoreProvider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}