{"version":3,"sources":["enums.ts","hooks.ts","components/Background/TestShader1.js","utils.ts","components/Background/BackgroundShader.js","components/Background.tsx","static/appConfig.ts","components/Shared/Pulsar.tsx","components/DragAndDrop/IXDrop.tsx","components/IFrameView.tsx","components/Shared/Button.tsx","components/CardLayout/ViewCard/CardInfo.tsx","components/CardLayout/ViewCard/DeleteButton.tsx","components/CardLayout/ViewCard/SettingsButton.tsx","components/CardLayout/ViewCard/SettingsMenu.tsx","components/CardLayout/ViewCard/ViewCard.tsx","components/CardLayout/GuideGrid.tsx","components/Widgets/Clock.tsx","components/CardLayout/ViewCard/WidgetWrapper.tsx","components/CardLayout/CardLayout.tsx","components/DragAndDrop/AppDragContext.tsx","components/Shared/FlexRow.tsx","components/DragAndDrop/DraggableRow.tsx","components/EditorPanel/TableHeader.tsx","components/EditorPanel/PopOver.tsx","components/EditorPanel/EditorTabs/ContentsTab/ContentsTab.tsx","IFrameValidator.ts","components/Shared/Panel.tsx","components/Shared/Modal.tsx","components/EditorPanel/EditorTabs/LayoutTab/GoogleFormPopup.tsx","static/formEmbedUrl.ts","components/EditorPanel/EditorTabs/LayoutTab/LayoutTable.tsx","components/EditorPanel/EditorTabs/LayoutTab/LayoutTab.tsx","components/DragAndDrop/DraggableWidget.tsx","components/EditorPanel/EditorTabs/WidgetsTab/WidgetsTab.tsx","components/EditorPanel/EditorTabs/AppTab/AppErrorTable.tsx","components/EditorPanel/EditorTabs/AppTab/AppTab.tsx","components/EditorPanel/Editor.tsx","components/EditorPanel/EditorPanel.tsx","components/HowToUse/HowToUsePopUp.tsx","components/HowToUse/HowToUse.tsx","components/ModeChangeButton.tsx","components/Shared/Screen.tsx","App.tsx","data_structs/CardData.ts","data_structs/WidgetData.ts","model/appModel.ts","static/extendedLayoutTest.ts","data_structs/LayoutData.ts","model/layoutsModel.ts","data_structs/GoogleSheetData.ts","static/cardDataSheetKey.ts","model/googleSheetsModel.ts","model/index.ts","store.ts","index.tsx"],"names":["AppMode","CardView","DragType","InteractionType","DndTypes","DragSource","typedHooks","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","useApp","toggleAppMode","actions","appModel","rotationSpeed","state","rotateLayouts","setRotationSpeed","setRotateLayouts","addAppError","appMode","useLayout","activeCards","activeWidgets","swapCard","layoutsModel","swapCardContent","addWidget","deleteCard","addCard","setBufferLayout","activeLayout","setRandomLayout","setActiveLayout","clearCards","resetLayout","useOnClickOutside","ref","handler","useEffect","listener","event","el","current","contains","target","document","addEventListener","removeEventListener","useEventListener","eventName","element","savedHandler","useRef","targetElement","window","eventListener","useElementSize","useState","setRef","width","height","size","setSize","handleSize","useCallback","offsetWidth","offsetHeight","useLayoutEffect","useWindowSize","windowSize","setWindowSize","innerWidth","innerHeight","TestShader1","uniforms","time","value","vertexShader","fragmentShader","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","toString","slice","length","join","randomIntFromInterval","min","max","Math","floor","random","randomNumber","randomisePosition","THREE","rgb","r","g","b","baseColors","pink","brightPink","darkPurple","orange","darkgrey","lightgrey","red","u_bg","type","u_bgMain","u_color1","u_color2","u_time","u_randomisePosition","ShadedGeometry1","position","shaderMaterialRef","t","j","x","y","vCheck","useFrame","clock","cos","R","sin","G","B","rotation","degToRad","attach","args","BackgroundShader","cam","gl","antialias","alpha","PerspectiveCamera","fov","aspect","near","far","faceResolution","OrbitControls","Background","viewMode","backgroundColor","backgroundStyle","setBackgroundStyle","isEditMode","EDIT","top","left","transition","backgroundClass","classNames","DISPLAY","ReactDOM","createPortal","style","className","querySelector","React","memo","appConfig","idleTime","sheetLink","defaultIframeScale","defaultEmbedScale","defaultLayoutName","formLink","widgetIds","gridRows","gridCols","showModeSwitchButton","useStaticLayout","gridBottomPadding","rotationDuration","Pulsar","AddIcon","IXDrop","children","properties","cardType","provided","snapshot","innerRef","isDraggingOver","placeholder","IFrameView","card","scale","cardView","onError","onLoad","active","setActive","valid","isLoaded","setIsLoaded","indexFrameContainerClass","iframeStyle","border","transform","transformOrigin","src","contentType","onDoubleClick","onReady","objectFit","PREVIEW","objectPosition","ResponsivePlayer","controls","muted","playing","url","PureComponent","Button","onClick","text","appearance","iconBefore","containerClass","fontSize","intent","onMouseUp","cursor","undefined","CardInfo","data","title","DeleteButton","action","onTouchEnd","e","display","DeleteIcon","SettingsButton","CogIcon","InputRow","ScaleControls","setScale","ChevronLeftIcon","onChange","parseInt","defaultValue","ChevronRightIcon","SettingsMenu","isShown","setBackgroundColor","setShowMenu","menuReference","handleClickOutside","menuStyle","ViewCard","cardId","useAnimation","cardContainerReference","GRID","oldCardView","setCardView","setIsError","activeChildren","setActiveChildren","useLocalStore","cardBackgroundColor","color","show","showMenu","toggleMenu","cardClass","computed","FULL_SCREEN","CLOCK","cardInfoClass","handleCardPress","thunk","_","getState","rootel","getElementById","pointerEvents","setTimeout","id","zIndex","s","devTools","settingsMenuProperties","cardModalBackdrop","cardChildContainer","keyCode","disabled","enable","disable","handleAction","preventDefault","useKeyboardShortcut","showDeleteButton","renderCardInfo","containerReference","errorType","description","source","link","setAnimationVariant","cardGrandParent","parentElement","useMemo","rect","getBoundingClientRect","calculateTransform2","variants","opacity","delay","duration","preview","normal","none","error","loaded","outline","in","out","animationVariant","motion","div","exit","layoutId","willChange","initial","animate","renderReturnButton","boundingBox","windowWidth","windowHeight","centeredX","centeredY","currentX","currentY","differenceX","differenceY","ReturnButton","GuideGrid","gridSettings","ResponsiveGridLayout","WidthProvider","Responsive","guideCards","rows","cols","allGridSpots","push","emptyCards","map","rr","w","h","i","minW","maxW","minH","maxH","static","isDraggable","isResizable","resizeHandles","lg","md","sm","xs","xxs","generateFilledLayout","justCardNames","c","layouts","preventCollision","p","index","key","droppableId","PLACEHOLDER","Clock","setDate","timerID","setInterval","clearInterval","padding","fontWeight","boxSizing","toLocaleTimeString","hour12","timeStyle","WidgetWrapper","widget","widgetData","console","log","renderWidget","CardLayout","layout","margin","onLayoutChange","cards","widgets","useControls","sharedGridSettings","breakpoints","rowHeight","compactType","onDragStart","oldItem","newItem","verticalCompact","draggable","IFRAME","contentCard","stringToGridPos","posString","split","Number","charAt","AppDragContext","externalLayoutsState","externalLayouts","onDragEnd","response","destination","draggableId","CARD_TABLE","startsWith","cardPos","sourceId","targetPosition","targetId","WIDGETS_TABLE","LAYOUT_TABLE","newLayout","filter","l","FlexRow","flexDirection","DraggableRow","dndType","dragAll","isValidElement","dragHandleProperties","dragHandleProps","draggableProps","cloneElement","isDragging","defaultProps","TableHeader","headerTitle","setFilter","setFilterDirection","activeFilter","sortDirection","setSortDirection","showSortArrow","str","regex","toLowerCase","match","forEach","char","replace","toUpperCase","titleCapitilization","toTitleCase","PopOver","visible","ease","boxShadow","transformBox","borderRadius","overflow","TitleWithIcon","setPosition","hovered","setHovered","onMouseEnter","pageX","pageY","onMouseLeave","isActive","fallbackImage","process","maxWidth","marginTop","marginBottom","textAlign","paddingLeft","ContentsTab","availableCards","filterKey","setFilterKey","filterDirection","cardItems","setCardItems","searchTerm","setSearchTerm","filteredCards","setFilteredCards","aboveThreshholdCardTitles","fuzzysort","go","filtered","includes","sortedItems","sort","a","aText","bText","reverse","SearchInput","currentTarget","isDropDisabled","autoHeight","autoHeightMax","autoHeightMin","added","author","interaction","CARD_ROW","isDragDisabled","IFrameLoadError","IFrameLoadWarning","Panel","panelStyle","Modal","containerClassName","onClose","backdropOpacity","justifyContent","alignItems","MyBackdrop","GoogleFormPopup","onCloseComplete","ls","layoutsString","isCopiedJSON","setIsCopiedJson","layoutString","JSON","stringify","bufferLayout","copyFieldContainerClass","ReactDom","Heading","onCopy","CopyField","isCurrentClipBoardContent","isClipBoardCorrect","setIsClipBoardCorrect","isCopied","setIsCopied","navigator","clipboard","readText","then","clipboardText","catch","ClipboardIcon","writeText","InlineAlert","paddingTop","CrossIcon","GoogleFormIframe","frameBorder","marginHeight","marginWidth","LayoutTable","activeLayoutState","setActiveLayoutAction","StatusIndicator","LayoutTitle","layoutCardIds","sources","layoutWidgetsIds","availableWidgets","textDecoration","LayoutTab","layoutState","bufferState","showNewLayoutPopup","setShowNewLayoutPopup","fetchTopLevelSheetThunk","googleSheetsModel","fetchAppGoogleSheet","fetchTopLevelSheet","setLayoutString","DraggableWidget","currentLayoutState","isInLayout","WidgetsTab","WIDGET","AppErrorTable","appErrors","layoutErrors","googleSheetsErrors","squareReference","autoHide","href","rel","Label","AppTab","val","checked","setChecked","Switch","Editor","EditorPanel","viewModeState","minimized","setMinimized","editorPanelClass","hidden","editorClass","bounds","right","bottom","defaultClassName","defaultPosition","handle","icon","PlusIcon","MinusIcon","PanelHeader","BarButton","HowToUsePopUp","Text","HowToUse","initialValue","setValue","useToggle","toggleVisible","HandUpIcon","ModeChangeButton","toggleModeAction","longPressEvent","useLongPress","modeChangeButtonStyle","whileTap","Screen","App","effect","isIdle","useIdle","useInterval","IFrameValidator","errors","warnings","this","malformedUrlCheckArray","warningsArray","RegExp","test","MALFORMED_URL","validURL","CROSS_ORIGIN","CardData","row","metaData","validator","failed","isImgLink","isVideo","isEmbed","isWebsite","widgetType","WidgetData","name","n","manageViewModeChange","viewModeEnum","setAppMode","CYCLE","setAvailableCards","cardDataArray","setActiveCards","setActiveWidgets","widgetDataArray","speed","should","errorsString","newError","onCardSheetLoadSuccess","thunkOn","storeActions","setAppGoogleSheetData","payload","getSheetRows","sourceid","onSetActiveLayout","activeSourceIds","Set","activeWidgetIds","layoutWidgets","availableCardsUpdated","has","availableWidgetsUpdated","onSwapCardContent","newCards","newSource","find","debug","extendedLayoutTest","layoutSettings","defaultBackgroundColor","cardSettings","LayoutData","sourceLayout","parse","testGetLayout","timestamp","swapInfo","Object","entries","k","v","toRemoveId","toAdd","pos","newGridLayout","justWidgets","onSetAppGoogleSheetData","addLayoutError","defaultLayout","setExternalLayouts","onToggleViewMode","getStoreState","buf","setGridLayout","newActiveLayout","curIndex","indexOf","nextIndex","selectedRandom","newLayoutArray","cardToDelete","removeCard","cardAddEvent","cardToAdd","widgetToAdd","updateLayout","swap","old","GoogleSheetData","sheetId","sheets","Map","Promise","resolve","reject","rowArray","get","set","cardDataSheetKey","gid","layoutDataGoogleSheet","cardDataGoogleSheet","appGoogleSheet","formUrl","layoutSheetUrl","cardSheetUrl","getSheetData","sheetRow","setFormUrl","googleForm","setLayoutsSheetUrl","googleSheetUrlToCSVUrl","layoutsSheet","setCardSheetUrl","cardsSheet","fetchSheet","addGoogleSheetError","sheetResponses","allSettled","results","sheetData","goodValues","result","num","status","addSheet","sheetTitle","setCardDataGoogleSheet","setLayoutDataGoogleSheet","getCardDataResponse","getLayoutDataResponse","googleSheet","sheet","googleSheetError","sheetKey","sheetUrl","Papa","download","header","delimiter","dynamicTyping","complete","model","appData","store","createStore","render"],"mappings":"07MAAYA,EAMAC,EAMAC,EAKAC,EAOAC,EASAC,E,qFAjCAL,K,kBAAAA,E,YAAAA,E,eAAAA,M,cAMAC,K,YAAAA,E,kBAAAA,E,2BAAAA,M,cAMAC,K,kCAAAA,E,6BAAAA,M,cAKAC,K,gBAAAA,E,gBAAAA,E,cAAAA,E,eAAAA,M,cAOAC,K,0BAAAA,E,cAAAA,E,gBAAAA,E,oBAAAA,E,gBAAAA,E,iBAAAA,M,cASAC,K,4BAAAA,E,wBAAAA,E,sBAAAA,E,+BAAAA,M,iBCdNC,EAAaC,cAENC,EAAkBF,EAAWE,gBAE7BC,GADmBH,EAAWI,iBACdJ,EAAWG,eAgBjC,IAyBME,EAAS,WACpB,IAAMC,EAAgBJ,GACpB,SAACK,GAAD,OAAaA,EAAQC,SAASF,iBAE1BG,EAAgBN,GAAc,SAACO,GAAD,OAAWA,EAAMF,SAASC,iBACxDE,EAAgBR,GAAc,SAACO,GAAD,OAAWA,EAAMF,SAASG,iBACxDC,EAAmBV,GACvB,SAACK,GAAD,OAAaA,EAAQC,SAASI,oBAE1BC,EAAmBX,GACvB,SAACK,GAAD,OAAaA,EAAQC,SAASK,oBAE1BC,EAAcZ,GAClB,SAACK,GAAD,OAAaA,EAAQC,SAASM,eAIhC,MAAO,CACLC,QAHcZ,GAAc,SAACO,GAAD,OAAWA,EAAMF,SAASO,WAItDN,gBACAG,mBACAN,gBACAK,gBACAE,mBACAC,gBAmBSE,EAAY,WACvB,IAAMC,EAAcd,GAAc,SAACO,GAAD,OAAWA,EAAMF,SAASS,eACtDC,EAAgBf,GAAc,SAACO,GAAD,OAAWA,EAAMF,SAASU,iBAExDC,EAAWjB,GACf,SAACK,GAAD,OAAaA,EAAQa,aAAaC,mBAG9BC,EAAYpB,GAChB,SAACK,GAAD,OAAaA,EAAQa,aAAaE,aAG9BC,EAAarB,GACjB,SAACK,GAAD,OAAaA,EAAQa,aAAaG,cAE9BC,EAAUtB,GAAgB,SAACK,GAAD,OAAaA,EAAQa,aAAaI,WAE5DC,EAAkBvB,GACtB,SAACK,GAAD,OAAaA,EAAQa,aAAaK,mBAG9BC,EAAevB,GACnB,SAACO,GAAD,OAAWA,EAAMU,aAAaM,gBAG1BC,EAAkBzB,GACtB,SAACK,GAAD,OAAaA,EAAQa,aAAaO,mBAcpC,MAAO,CACLV,cACAC,gBACAO,kBACAC,eACAH,aACAC,UACAL,WACAG,YACAM,gBApBsB1B,GACtB,SAACK,GAAD,OAAaA,EAAQa,aAAaQ,mBAoBlCD,kBACAE,WAnBiB3B,GACjB,SAACK,GAAD,OAAaA,EAAQa,aAAaS,cAmBlCC,YAhBkB5B,GAClB,SAACK,GAAD,OAAaA,EAAQa,aAAaU,iBAwD/B,SAASC,EACdC,EACAC,GAEAC,qBAAU,WACR,IAAMC,EAAW,SAACC,GAChB,IAAMC,EAAE,OAAGL,QAAH,IAAGA,OAAH,EAAGA,EAAKM,QAGXD,IAAMA,EAAGE,SAASH,EAAMI,SAI7BP,EAAQG,IAMV,OAHAK,SAASC,iBAAT,YAAuCP,GACvCM,SAASC,iBAAT,aAAwCP,GAEjC,WAGLM,SAASE,oBAAT,YAA0CR,GAC1CM,SAASE,oBAAT,aAA2CR,MAI5C,CAACH,EAAKC,IA2CX,SAASW,EAKPC,EACAZ,EAGAa,GAGA,IAAMC,EAAeC,mBAErBd,qBAAU,WAER,IAAMe,GAAmC,OAAPH,QAAO,IAAPA,OAAA,EAAAA,EAASR,UAAWY,OACtD,GAAMD,GAAiBA,EAAcP,iBAArC,CAKIK,EAAaT,UAAYL,IAC3Bc,EAAaT,QAAUL,GAIzB,IAAMkB,EAAgC,SAACf,IAEhC,OAACW,QAAD,IAACA,OAAD,EAACA,EAAcT,UAClBS,EAAaT,QAAQF,IAOzB,OAHAa,EAAcP,iBAAiBG,EAAWM,GAGnC,WACLF,EAAcN,oBAAoBE,EAAWM,OAE9C,CAACN,EAAWC,EAASb,IAUnB,SAASmB,IAOd,MAAsBC,mBAAmB,MAAzC,mBAAOrB,EAAP,KAAYsB,EAAZ,KACA,EAAwBD,mBAAe,CACrCE,MAAO,EACPC,OAAQ,IAFV,mBAAOC,EAAP,KAAaC,EAAb,KAMMC,EAAaC,uBAAY,WAC7BF,EAAQ,CACNH,OAAU,OAAHvB,QAAG,IAAHA,OAAA,EAAAA,EAAK6B,cAAe,EAC3BL,QAAW,OAAHxB,QAAG,IAAHA,OAAA,EAAAA,EAAK8B,eAAgB,MAI9B,QAAC9B,QAAD,IAACA,OAAD,EAACA,EAAK8B,aAAN,OAAoB9B,QAApB,IAAoBA,OAApB,EAAoBA,EAAK6B,cAS5B,OAPAjB,EAAiB,SAAUe,GAE3BI,2BAAgB,WACdJ,MAEC,QAAC3B,QAAD,IAACA,OAAD,EAACA,EAAK8B,aAAN,OAAoB9B,QAApB,IAAoBA,OAApB,EAAoBA,EAAK6B,cAErB,CAACP,EAAQG,GAsBX,SAASO,IACd,MAAoCX,mBAAqB,CACvDE,MAAO,EACPC,OAAQ,IAFV,mBAAOS,EAAP,KAAmBC,EAAnB,KAKMP,EAAa,WACjBO,EAAc,CACZX,MAAOL,OAAOiB,WACdX,OAAQN,OAAOkB,eAYnB,OARAxB,EAAiB,SAAUe,GAG3BI,2BAAgB,WACdJ,MAEC,IAEIM,E,oCC/PQI,EA1IG,CAChBC,SAAU,CACRC,KAAM,CAAEC,MAAO,IAEjBC,aAAa,u8DAuDbC,eAAe,68E,0BClCZ,SAASC,EAAWC,GACzB,GAAIA,EAAM,CACR,IAAMC,EAAI,IAAIC,KAAKF,GACfG,EAAQ,IAAMF,EAAEG,WAAa,GAC7BC,EAAM,GAAKJ,EAAEK,UACXC,EAAON,EAAEO,cAAcC,WAAWC,MAAM,GAK9C,OAHIP,EAAMQ,OAAS,IAAGR,EAAQ,IAAMA,GAChCE,EAAIM,OAAS,IAAGN,EAAM,IAAMA,GAEzB,CAACF,EAAOE,EAAKE,GAAMK,KAAK,KAE/B,MAAO,cAsBJ,SAASC,EAAsBC,EAAaC,GAEjD,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAG/C,SAASK,EAAaL,EAAaC,GACxC,OAAOC,KAAKE,UAAYH,EAAMD,GAAOA,EC1DvC,IAAIM,EAAoB,IAAIC,UAAc,EAAG,GAE7C,SAASC,EAAIC,EAAGC,EAAGC,GACjB,OAAO,IAAIJ,UAAcE,EAAGC,EAAGC,GAGjC,IAEMC,EAAa,CACjBC,KAAML,EAAI,IAAK,EAAG,IAClBM,WAAYN,EAAI,IAAK,EAAG,IACxBO,WAAYP,EAAI,GAAI,EAAG,IACvBQ,OAAQR,EAAI,IAAK,GAAI,IACrBS,SAAUT,EAAI,GAAG,GAAG,IACpBU,UAAWV,EAAI,IAAI,IAAI,KACvBW,IAAKX,EAAI,IAAK,EAAG,IAGb5B,EAAW,CACfwC,KAAM,CAAEC,KAAM,KAAMvC,MAAO8B,EAAWM,WACtCI,SAAU,CAAED,KAAM,KAAMvC,MAAO8B,EAAWM,WAC1CK,SAAU,CAAEF,KAAM,KAAMvC,MAAO8B,EAAWM,WAC1CM,SAAU,CAAEH,KAAM,KAAMvC,MAAO8B,EAAWM,WAC1CO,OAAQ,CAAEJ,KAAM,IAAKvC,MAAO,GAC5B4C,oBAAqB,CAAEL,KAAM,KAAMvC,MAAOwB,IActCqB,EAAkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnBC,EAAoBvE,mBACtBwE,EAAI,EACJC,EAAI,EAEJC,EAAIjC,EAAsB,EAAE,IAC5BkC,EAAIlC,EAAsB,EAAG,IAC7BmC,GAAS,EAyBb,OAvBAC,aAAS,YAAe,EAAZC,MACVP,EAAkBjF,QAAQgC,SAAS8C,oBAAoB5C,MAAQ,IAAIyB,UAAcwB,EAAGA,GACpFF,EAAkBjF,QAAQgC,SAAS2C,SAASzC,MAAQ,IAAIyB,UAvBlD,SAAUyB,EAAGC,EAAGH,GACxB,OAAO5B,KAAKC,MAAM,IAAM,GAAKD,KAAKmC,KAAKL,EAAIA,EAAIC,EAAIA,GAAK,IAAMH,IAsBUQ,CAAEN,EAAGC,EAAGH,EAAI,GAnB5E,SAAUE,EAAGC,EAAGH,GACxB,OAAO5B,KAAKC,MAAM,IAAM,GAAKD,KAAKqC,KAAKP,EAAIA,EAAI9B,KAAKmC,IAAIP,EAAI,GAAKG,EAAIA,EAAI/B,KAAKqC,IAAIT,EAAI,IAAM,MAkBJU,CAAER,EAAGC,EAAGH,EAAI,GAf5F,SAAUE,EAAGC,EAAGH,GACxB,OAAO5B,KAAKC,MAAM,IAAM,GAAKD,KAAKqC,IAAI,EAAIrC,KAAKqC,IAAIT,EAAI,KAAOE,EAAI,MAAQA,EAAI,MAAQC,EAAI,MAAQA,EAAI,MAAQ,OAcNQ,CAAET,EAAGC,EAAGH,EAAI,IAElHD,EAAkBjF,QAAQgC,SAAS6C,OAAO3C,MAAQgD,EAC9CA,EAAI,KAAQ,KACC,IAAXI,GACFF,GAAK,IACI,IACPE,GAAS,IAGXF,GAAK,IACI,KACPE,GAAS,IAKfH,GAAQ,IACRD,GAAQ,OAIR,0BAAMF,SAAUA,EAAUc,SAAU,CAACnC,YAAgBoC,SAAS,GAAIpC,YAAgBoC,SAAS,GAAIpC,YAAgBoC,SAAS,MACtH,mCAAeC,OAAO,WAAWC,KAAM,CAAC,IAAKrF,OAAOiB,WAAa,EAlE5C,SAmErB,oCACEmE,OAAO,WACP7D,aAAcJ,EAAYI,aAC1BC,eAAgBL,EAAYK,eAC5BJ,SAAUA,EACVtC,IAAKuF,MAiBEiB,EAXU,WACvB,IAAMC,EAAMzF,mBACZ,OACE,kBAAC,IAAD,CAAQ0F,GAAI,CAAEC,WAAW,EAAOC,OAAO,IACrC,kBAACC,EAAA,EAAD,CAAmB7G,IAAKyG,EAAKnB,SAAU,CAAC,EAAG,EAAG,GAAIwB,IAAK,GAAIC,OAAQ7F,OAAOiB,WAAajB,OAAOkB,YAAa4E,KAAM,GAAKC,IAAK,MAC3H,kBAAC,EAAD,CAAiB3B,SAAU,CAAC,EAAG,GAAI,KAAM4B,eAAgB,MACzD,kBAACC,EAAA,EAAD,Q,iBCzFAC,EAAa,WACjB,IAAMC,EAAWlJ,GAAc,SAACO,GAAD,OAAWA,EAAMF,SAASO,WACzD,EAAwBsC,mBAAS,CAC/BqE,EAAGxE,OAAOiB,WACVwD,EAAGzE,OAAOkB,cAFZ,mBAKA,GALA,UAK8Cf,mBAAS,CACrDiG,gBAAiB,UADnB,mBAAOC,EAAP,KAAwBC,EAAxB,KAGAtH,qBAAU,WACR,IAAMuH,EAAaJ,GAAY3J,EAAQgK,KAWvCF,EATc,CACZlC,SAAU,WACV9D,OAAQ,QACRD,MAAO,QACPoG,IAAK,EACLC,KAAM,EACNN,gBAAiBG,EAAa,QAAU,OACxCI,WAAY,iCAGb,CAACR,IAEJ,IAAMS,EAAkBC,IAAW,uBAAwB,CACzD,oCAAqCV,GAAY3J,EAAQsK,QACzD,iCAAkCX,GAAY3J,EAAQgK,OAaxD,OAAOO,IAASC,aACd,yBAAKC,MAAOZ,EAAiBa,UAAWN,GACrCT,IAAa3J,EAAQgK,KACpB,yBAAKS,MAbS,CAClB7C,SAAU,WACV9D,OAAQ,QACRD,MAAO,QACPoG,IAAK,EACLC,KAAM,EACNN,gBAAiB,YACjBO,WAAY,gCAQR,yBAAKO,UAAU,wBACb,yBAAKA,UAAU,oBACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,yBAIrB3H,SAAS4H,cAAc,iBAIZC,MAAMC,KAAKnB,G,uBCzBXoB,EAjBc,CAC3BC,SAA+D,IAC/DC,UACE,iGACFC,mBAAoB,GACpBC,kBAAmB,EACnBC,kBAAmB,YACnBC,SAAU,sCACVC,UAAW,CAAC,QAAS,cAAe,QACpCC,SAAU,EACVC,SAAU,EACVC,sBAAsB,EACtBC,iBAAiB,EACjBC,kBAAmB,GACnBC,iBAAkB,K,yCCnBLC,EAbA,WACb,OACE,yBAAKlB,UAAU,UACb,kBAACmB,EAAA,EAAD,CAAS9H,KAAM,Q,sCC2CN+H,EAtCY,SAAC,GAKrB,IAJLC,EAII,EAJJA,SACArB,EAGI,EAHJA,UAEGsB,GACC,EAFJC,SAEI,kBAEJ,OACE,kBAAC,IAAD,iBAAeD,EAAf,CAA2B3E,KAAM,aAC9B,SAAC6E,EAAUC,GACV,OACE,yCACMD,EAASE,SADf,CAEE9J,IAAK4J,EAASE,SACd1B,UACEyB,EAASE,eACL,qBAA4B3B,EAC5B,aAAoBA,IAG1B,yBACEA,UACEyB,EAASE,eACL,8CACA,8CAGN,kBAAC,EAAD,OAEDN,EACAG,EAASI,iB,8DCNhBC,GAAuC,SAAC,GAMvC,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,QACAC,EACI,EADJA,OAEA,EAA4BjJ,oBAAS,GAArC,mBAAOkJ,EAAP,KAAeC,EAAf,KACA,EAA4BnJ,oBAAS,GAArC,mBAAOoJ,EAAP,KACA,GADA,KACgCpJ,oBAAS,IAAzC,mBAAOqJ,EAAP,KAAiBC,EAAjB,KAOMC,GALqB7C,IAAW,sBAAuB,CAC3D,6BAA8B2C,EAC9B,+BAAgCA,IAGD3C,IAAW,mBAAoB,CAC9D,2BAA4B0C,KAG9BvK,qBAAU,cAEP,CAACkK,IAEJ,IAAMS,EAAc,CAClBC,OAAQ,OACRC,UAAU,SAAD,OAAWZ,EAAX,KACT5I,MAAM,GAAD,OAAY,EAAI4I,EAAX,IAAL,KACL3I,OAAO,GAAD,OAAY,EAAI2I,EAAX,IAAL,KACNa,gBAAiB,YAiBXC,EAAqBf,EAArBe,IAAKC,EAAgBhB,EAAhBgB,YAEb,OACE,yBACE9C,UAAWwC,EACXO,cAAe,WACbX,GAAWD,KAGI,UAAhBW,EACC,kBAAC,GAAD,CACEE,QAAS,SAAChL,GACRuK,GAAY,IAEdM,IAAKf,EAAKe,MAEM,UAAhBC,EACF,yBACEZ,OAAQ,SAAClK,GAEPkK,EAAOlK,EAAO8J,IAEhBG,QAAS,SAACjK,GACRiK,EAAQjK,EAAO8J,IAGjBe,IAAKA,EACL9C,MAAO,CACL5G,MAAO,OACPC,OAAQ,OACR6J,UAAWjB,IAAazM,EAAS2N,QAAU,UAAY,QACvDC,eACEnB,IAAazM,EAAS2N,QAAU,UAAY,YAIlD,4BACEhB,OAAQ,SAAClK,GACPuK,GAAY,IAEdM,IAAKA,EACL9C,MAAOoC,EAvDM,CACnBhJ,MAAO,OACPC,OAAQ,OACRsJ,OAAQ,YAoD6BD,MAO1BvC,OAAMC,KAAK0B,IAgBpBuB,GAAmB,SAAC,GAMN,IALlBP,EAKiB,EALjBA,IACAG,EAIiB,EAJjBA,QAKA,OACE,yBAAKhD,UAAU,kBACb,kBAAC,KAAD,CACEA,UAAU,eACVqD,UAAQ,EACRjK,OAAO,OACPkK,OAAK,EACLN,QAASA,EACTO,SAAO,EACPC,IAAKX,EACL1J,MAAM,W,IAMQ+G,IAAMuD,c,4CC7GbC,GArCA,SAAC,GAYsB,IAXpCC,EAWmC,EAXnCA,QACAC,EAUmC,EAVnCA,KACAC,EASmC,EATnCA,WACA7D,EAQmC,EARnCA,UACA8D,EAOmC,EAPnCA,WACA3K,EAMmC,EANnCA,MACAC,EAKmC,EALnCA,OACA2G,EAImC,EAJnCA,MACAgE,EAGmC,EAHnCA,eACAC,EAEmC,EAFnCA,SACAC,EACmC,EADnCA,OAEA,OACE,yBACEjE,UAAW+D,EACXG,UAAWP,EACX5D,MAAO,CAAE5G,MAAOA,EAAOC,OAAQ,SAE/B,kBAAC,KAAD,CACEyK,WAAU,OAAEA,QAAF,IAAEA,IAAc,UAE1B7D,UAAWA,EACXmE,OAAO,UACPH,SAAUA,EACV5K,OAAM,OAAEA,QAAF,IAAEA,SAAUgL,EAClBN,WAAU,OAAEA,QAAF,IAAEA,SAAcM,EAC1BH,OAAM,OAAEA,QAAF,IAAEA,IAAU,OAClBlE,MAAOA,EACP5G,MAAK,OAAEA,QAAF,IAAEA,SAASiL,GAEfR,KCpBMS,I,OA5BE,SAAC,GAME,IALlBC,EAKiB,EALjBA,KAMA,GADiB,EAJjBtE,UAKgC/G,oBAAS,IAAzC,6BAKA,OACE,oCACE,yBAAK+G,UAAW,eACd,wBAAID,MANS,IAMWuE,EAAKC,OAE7B,qRAIgD,S,mBCEvCC,GAnBI,SAAC,GAA8D,IAA5Db,EAA2D,EAA3DA,QAA2D,EAAlDc,OAC7B,OACE,yBACEzE,UAAU,0BACVkE,UAAWP,EACXA,QAASA,EACTe,WAAY,SAACC,MAEb,yBAEA5E,MAAO,CAAC6E,QAAS,SAEf,kBAACC,GAAA,EAAD,CAAYxL,KAAM,Q,mBCAbyL,GAlBQ,SAAC,GAIJ,IAHlBnB,EAGiB,EAHjBA,QAIe/K,mBACf,OACE,yBAAKoH,UAAU,4BAA4BkE,UAAWP,GACpD,yBAEE5D,MAAO,CAAE6E,QAAS,SAElB,kBAACG,GAAA,EAAD,CAAS1L,KAAM,Q,6BCkCjB2L,GAAW,SAAC,GAAyF,IAAxFT,EAAuF,EAAvFA,MAAOlD,EAAgF,EAAhFA,SACtB,OACI,yBAAKrB,UAAU,kBACVuE,EACAlD,IAKP4D,GAAgB,SAAC,GAMH,IALlBC,EAKiB,EALjBA,SACAnD,EAIiB,EAJjBA,MAKA,OACE,yBAAK/B,UAAU,uBACb,kBAAC,GAAD,CACE+D,eAAe,sBACf3K,OAAU,GACV0K,WAAY,kBAACqB,GAAA,EAAD,CAAiB9L,KAAM,KAEnCsK,QAAS,WACPuB,GAAU,KAEZ/L,MAAO,KAIT,2BAAOiM,SAAY,SAACT,GAAKO,EAASG,SAASV,EAAEvM,OAAOgC,SAAU2F,MAAQ,CAAC5G,MAAO,IAAKmM,aAAgB,GAAK3I,KAAK,OAAOvC,MAAS2H,EAAM9G,WAAWC,MAAM,EAAG,KACvJ,kBAAC,GAAD,CACE6I,eAAe,uBACf3K,OAAU,GACV0K,WAAY,kBAACyB,GAAA,EAAD,CAAkBlM,KAAM,KAEpCsK,QAAS,WACPuB,EAAS,KAGX/L,MAAO,OAMAqM,GA9EM,SAAC,GAOsB,IAN1CC,EAMyC,EANzCA,QACAP,EAKyC,EALzCA,SACAQ,EAIyC,EAJzCA,mBACAC,EAGyC,EAHzCA,YACA5D,EAEyC,EAFzCA,MAIM6D,EAAgBhN,iBAAO,MACvBiN,EAAqBlO,EAAkBiO,GAAe,WAAKD,GAAY,MACvEG,EAAY,CAChBlB,QAASa,EAAU,OAAS,QAG9B,OACE,uCAAKzF,UAAW,iBAAiBpI,IAAOgO,EAAe7F,MAAO+F,GAAeD,GACzE,kBAAC,GAAD,CAAUtB,MAAQ,qBACnB,2BACCvE,UAAU,SACVsF,aAAa,gBACbF,SAAU,SAACT,GAAKe,EAAmBf,EAAEvM,OAAOgC,QAC5CuC,KAAK,WAGL,kBAAC,GAAD,CAAU4H,MAAQ,WAClB,kBAAC,GAAD,CAAexC,MAAOA,EAAOmD,SAAUA,OC0CzCa,GAAmC,SAAC,GAQf,IAPzBxE,EAOwB,EAPxBA,SACAF,EAMwB,EANxBA,SAEA2E,EAIwB,EAJxBA,OACA1B,EAGwB,EAHxBA,KACAX,EAEwB,EAFxBA,QACAsC,EACwB,EADxBA,aAEMC,EAAyBtN,iBAAuB,MAEtD,EAAiC3C,IAAzBU,EAAR,EAAQA,QAASD,EAAjB,EAAiBA,YACTS,EAAeP,IAAfO,WACR,EAAmC8B,mBAAS1D,EAAS4Q,MAArD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA8BpN,oBAAS,GAAvC,mBAAgBqN,GAAhB,WACA,EAAgCrN,oBAAS,GAAzC,mBAAiBsJ,GAAjB,WACA,EAA4CtJ,qBAA5C,mBAAOsN,EAAP,KAAuBC,EAAvB,KAEA,EAAyBC,aACvB,iBAAO,CACLzE,SAAUzM,EAAS4Q,KACnBE,YAAa5B,aAAO,SAACnO,EAAO0L,GAC1B1L,EAAM0L,SAAWA,KAEnBD,MACwB,WAAlB,OAAJuC,QAAI,IAAJA,OAAA,EAAAA,EAAMxB,aACF1C,EAAUI,kBACVJ,EAAUG,mBAChB2E,SAAUT,aAAO,SAACnO,EAAOyL,GACvBzL,EAAMyL,OAASA,KAEjB2E,oBAAqB,GACrBhB,mBAAoBjB,aAAO,SAACnO,EAAOqQ,GACjCrQ,EAAMoQ,oBAAsBC,KAE9BhB,YAAalB,aAAO,SAACnO,EAAOsQ,GAC1BtQ,EAAMuQ,SAAWD,KAEnBE,WAAYrC,aAAO,SAACnO,GAClBA,EAAMuQ,UAAYvQ,EAAMuQ,YAE1BA,UAAU,EACVtF,SAAUA,EACVwF,UAAWC,YAAS,CAAC,SAAC1Q,GAAD,OAAWA,EAAM0L,YAAW,SAACA,GAahD,OAZarC,IAAW,OAAQ,CAC9B,YAAahJ,IAAYrB,EAAQgK,KACjC,eACE3I,IAAYrB,EAAQsK,SAAWoC,GAAYzM,EAAS4Q,KACtD,eAAgBnE,IAAazM,EAAS2N,QACtC,kBAAmBlB,IAAazM,EAAS0R,YACzC,aAActQ,IAAYrB,EAAQgK,OAAS+B,EAC3C,qBAAsBA,GAAY1K,GAAWrB,EAAQsK,QACrD,cACEtJ,EAAMiL,WAAa7L,EAASwR,OAASvQ,IAAYrB,EAAQgK,UAK/D6H,cAAeH,aAAS,SAAC1Q,GACvB,OAAOqJ,IAAW,OAAQ,CACxB,cAAehJ,IAAYrB,EAAQgK,KACnC,eAAgB3I,IAAYrB,EAAQsK,QACpC,eAAgBtJ,EAAM0L,WAAazM,EAAS2N,aAGhDkE,gBAAiBC,aAAM,SAAClR,EAASmR,EAAV,GAA+B,IAAD,EAAfC,EAAe,EAAfA,SAI9BC,EAASnP,SAASoP,eAAe,QAQvC,IAPKD,EAAOzH,MAAM2H,cAAgB,SAChCF,EAAOzH,MAAM2H,cAAgB,QAG/BC,YAAW,WACTH,EAAOzH,MAAM2H,cAAgB,QAC5B,KACC/Q,IAAYrB,EAAQsK,cAAqBwE,GAAV4B,EACjC,OAAQuB,IAAWvF,UACjB,KAAKzM,EAAS4Q,KACyB,IAAD,EAApC,GAA0B,YAAlB,OAAJ7B,QAAI,IAAJA,OAAA,EAAAA,EAAMxB,aACR3M,EAAQkQ,YAAY9Q,EAAS2N,SAClB7K,SAASoP,eAAT,iBACTnD,QADS,IACTA,OADS,EACTA,EAAMsD,UADG,QACG,aAEX7H,MAAM8H,OAAS,OAIpB,MACF,KAAKtS,EAAS2N,QACZ/M,EAAQkQ,YAAY9Q,EAAS4Q,MAClB9N,SAASoP,eAAT,iBACTnD,QADS,IACTA,OADS,EACTA,EAAMsD,UADG,QACG,aAEX7H,MAAM8H,OAAS,WAQ5B,CAAClR,IACD,SAACmR,GACC,MAAO,CAAEC,UAAU,MAvFvB,mBAAOzR,EAAP,KAAcH,EAAd,KA2FM6R,EAAyB,CAC7BjG,MAAOzL,EAAMyL,MACbmD,SAAU/O,EAAQ+O,SAClBQ,mBAAoBvP,EAAQuP,mBAC5BC,YAAaxP,EAAQwP,aAGjBsC,EAAoBtI,IAAW,sBAAuB,CAC1D,6BACEyG,IAAgB7Q,EAAS2N,SAAWkD,IAAgB7Q,EAAS0R,YAC/D,+BAAgCb,IAAgB7Q,EAAS4Q,OAGrD+B,EAAqBvI,IAAW,uBAAwB,CAC5D,+BAAgCrJ,EAAM0L,WAAazM,EAAS2N,QAC5D,kCAAmC5M,EAAM0L,WAAazM,EAAS0R,YAC/D,4BAA6B3Q,EAAM0L,WAAazM,EAAS4Q,OAG3D,EdrDiC,SAAC,GAQ7B,IAPLgC,EAOI,EAPJA,QACA1D,EAMI,EANJA,OACA2D,EAKI,EALJA,SAMAlI,IAAMpI,WAAU,WAId,OAHKsQ,GACHC,IAEK,WACLC,QAIJ,IAAMD,EAAS,WACbhQ,SAASC,iBAAiB,UAAWiQ,IAGjCD,EAAU,WACdjQ,SAASE,oBAAoB,UAAWgQ,IAGpCA,EAAe,SAAC5D,GAChBA,EAAEwD,UAAYA,IAChBxD,EAAE6D,iBACF/D,EAAOE,KAIX,MAAO,CAAE0D,SAAQC,WcoBWG,CAAoB,CAC9CN,QAAS,GACT1D,OAAQ,WAEJ2B,IAAgB7Q,EAAS0R,aACzBb,IAAgB7Q,EAAS2N,SAEzBmD,EAAY9Q,EAAS4Q,OAGzBiC,UAAU,IAGNM,GAbN,EAAQL,OAAR,EAAgBC,QAaS,WACvB,GAAI3R,GAAWrB,EAAQgK,MAAQgF,EAC7B,OACE,oCACE,kBAAC,GAAD,CACEX,QAAS,WACPxM,EAAWmN,EAAKsD,KAElBnD,OAAQ,WACNtN,EAAWmN,EAAKsD,OAGpB,kBAAC,GAAD,CACEjE,QAAS,SAACgB,GACRxO,EAAQ2Q,mBAQd6B,EAAiB,WACrB,GACEvC,IAAgB7Q,EAAS2N,SACzBoB,GACqB,WAArBA,EAAKxB,YAEL,OACE,kBAAC,GAAD,CAAU9C,UAAW1J,EAAM6Q,cAAe7C,KAAMA,KAyBhDsE,EAAqBhQ,iBAAO,MAClCjB,EAAkBiR,GAAoB,SAACjE,GACrCA,EAAE6D,iBACElS,EAAM0L,UAAYzM,EAAS2N,SAC7B/M,EAAQkQ,YAAY9Q,EAAS4Q,SAIjC,IAoBMlE,EAA4B,SAACjK,EAAO8J,GAKxC,IAAQyC,EAAezC,EAAfyC,MAAO1B,EAAQf,EAARe,IACfnM,EAAY,CACVmS,UAAW,yBACXC,YAAa,cACbC,OAAO,SAAD,OAAWxE,GACjByE,KAAMnG,IAERyD,GAAW,IAKPpE,EAA0B,SAAClK,EAAO8J,GACtCmH,GAAoB,UACpB1G,GAAY,IAIdzK,qBAAU,WACR,GAAIoO,EAAuBhO,QAAS,CAAC,IAAD,IAIb,EAHfgR,EAAe,UACnBhD,EAAuBhO,eADJ,iBACnB,EAAgCiR,qBADb,aACnB,EAA+CA,cAEjD,GAAID,EACFA,EAAgBtB,GAAhB,iBAAqBtD,QAArB,IAAqBA,OAArB,EAAqBA,EAAMsD,UAA3B,QAAiC,eAGpC,IAEQwB,mBAAQ,WACjB,GAAIlD,EAAuBhO,QAAS,CAClC,IAAMmR,EAAOnD,EAAuBhO,QAAQoR,wBAC5C,OAAOC,GAAoBF,MAG5B,CAAC/S,EAAM0L,WAEVlK,qBAAU,WACJxB,EAAM0L,WAAazM,EAAS2N,SAC9B+F,GAAoB,WAElB3S,EAAM0L,WAAazM,EAAS4Q,MAC9B8C,GAAoB,UAGrB,CAAC3S,EAAM0L,WAEV,IAAMwH,EAAW,CACfrH,OAAQ,CACNsH,QAAS,EACThK,WAAY,CACViK,MAAO/N,EAAa,GAAK,IACzBgO,SAAU,KAGdC,QAAS,CACPH,QAAS,EAIThK,WAAY,CACVkK,SAAU,KAKdE,OAAQ,CACNJ,QAAS,GAEXK,KAAM,CACJL,QAAS,EACTnM,EAAG,EACHC,EAAG,GAELwM,MAAO,CAELN,QAAS,CAAC,EAAG,GACbvK,gBAAiB,OAGnB8K,OAAQ,CAENC,QAAS,CAAC,kBAAD,qCACTR,QAAS,CAAC,EAAG,EAAG,GAChBhK,WAAY,CACViK,MAAO/N,EAAa,GAAK,IACzBgO,SAAU,IAEZrM,EAAG,EACHC,EAAG,GAIL2M,GAAI,CAEFT,QAAS,CAAC,EAAG,GACbhK,WAAY,CAEVkK,SAAU,KAOdQ,IAAK,CACH5M,EAAG5B,GAAc,GAAI,IAErB8N,QAAS,CAAC,EAAG,GAEbhK,WAAY,CACViK,MAAO/N,EAAa,GAAK,KACzBgO,SAAU,MAOhB,EAAgD1Q,mBAAS,QAAzD,oBAAOmR,GAAP,MAAyBnB,GAAzB,MAuBA,OArBAnR,qBAAU,WAEJuJ,IACE4E,GACFgD,GAAoB,OACpBtB,YAAW,WACTsB,GAAoB,MACpBzC,EACEnF,EAAS/K,EAAMyL,MAAOzL,EAAM0L,SAAUC,EAASC,MAEhD,OAEH+G,GAAoB,QACpBzC,EACEnF,EAAS/K,EAAMyL,MAAOzL,EAAM0L,SAAUC,EAASC,QAIpD,CAACb,IAKF,oCACE,kBAACgJ,GAAA,EAAOC,IAAR,CACEC,KAAM,CAAEd,QAAS,EAAGnM,GAAI,KACxB1F,IAAKsO,EACLsE,SAAS,WACTxK,UAAW1J,EAAMyQ,UACjBhH,MAAO,CACL6C,gBAAiB,SACjB6H,WAAY,YACZrR,OAAQ,OAER8F,gBAAiB5I,EAAMoQ,qBAKzBgE,QAAS/T,IAAYrB,EAAQgK,KAC7BkK,SAAUA,EAGVmB,QAASP,IAaR/I,GACC,yBAAKrB,UAAWiI,GACd,yBACEjI,UAAWkI,EACXhE,UAAW,WACT/N,EAAQiR,kBACJzD,GACFA,KAGJ/L,IAAKgR,GA/OW,YAAlB,OAAJtE,QAAI,IAAJA,OAAA,EAAAA,EAAMxB,aACD,CAAC4F,IAAoBC,KAErB,CAACD,KAgPCnC,EAED,kBAAC,GAAD,iBACMyB,EADN,CAEEvC,QAASnP,EAAMuQ,aAhPF,WACzB,GAAIT,IAAgB7Q,EAAS0R,YAC3B,OACE,kBAAC,GAAD,CACEtD,QAAS,WACP0C,EAAY9Q,EAAS4Q,SA8OpByE,OASPrB,GAAsB,SAACsB,GAC3B,IAAMC,EAAchS,OAAOiB,WACrBgR,EAAejS,OAAOkB,YAQtBgR,GAPKlS,OAAOiB,WACPjB,OAAOiB,WAMA+Q,EAAc,EAHQ,IAApBD,EAAY1R,MAGkB,GAC5C8R,EAAYF,EAAe,EAHS,IAArBF,EAAYzR,OAGmB,EAE9C8R,EAAWL,EAAYvN,EACvB6N,EAAWN,EAAYtN,EACzB6N,EAAcJ,EAAYE,EAC1BG,EAAcJ,EAAYE,EAU9B,OARIH,EAAYE,IACdE,EAAcF,EAAWF,EACzBI,IAAgB,GAEdH,EAAYE,IACdE,EAAcF,EAAWF,EACzBI,IAAgB,GAEX,CAACD,EAAaC,IAwCjBC,GAAe,SAAC,GAIF,IAHlB3H,EAGiB,EAHjBA,QAIA,OACE,yBAAK3D,UAAU,2BACb,kBAAC,GAAD,CAAQ2D,QAASA,EAASC,KAAK,SAASzK,MAAO,QAWtC+G,WAAMC,KAAK4F,ICnlBbwF,GAAY,SAAC,GAIN,IAHlBC,EAGiB,EAHjBA,aAIMC,EAAuBC,wBAAcC,cACrCC,EAmDR,SAA8BC,EAAcC,GAE1C,IADA,IAAMC,EAA+B,GAC5BxO,EAAI,EAAGA,EAAIsO,EAAMtO,IACxB,IAAK,IAAID,EAAI,EAAGA,EAAIwO,EAAMxO,IACxByO,EAAaC,KAAK,CAAE1O,EAAGA,EAAGC,EAAGA,IAIjC,IAAM0O,EAAaF,EAAaG,KAAI,SAACC,GACnC,MAAO,CACL7O,EAAG6O,EAAG7O,EACNC,EAAG4O,EAAG5O,EACN6O,EAAG,EACHC,EAAG,EACHC,EAAE,eAAD,OAAiBH,EAAG7O,EAApB,aAA0B6O,EAAG5O,EAA7B,KACDgP,KAAM,EACNC,KAAM,EACNC,KAAM,EACNC,KAAM,EACNC,QAAQ,EAERC,aAAa,EACbC,aAAa,EACbC,cAAe,OASnB,MAAO,CACLC,GAAId,EACJe,GAAIf,EACJgB,GAAIhB,EACJiB,GAAIjB,EACJkB,IAAKlB,GAxFYmB,CACjBhN,EAAUQ,SACVR,EAAUS,UAENwM,EAAgBzB,EAAWmB,GAAGb,KAAI,SAACoB,GAAD,OAAOA,EAAEhB,KAEjD,OACE,yBACEvM,MAAO,CACL7C,SAAU,WACVqC,IAAK,EACLC,KAAM,EACNrG,MAAO,OACPC,OAAQ,OACRyO,OAAQ,IAGV,kBAAC4D,EAAD,iBACMD,EADN,CAEExL,UAAU,cACVuN,QAAS3B,EACTkB,cAAe,GACfU,kBAAkB,EAClBZ,aAAa,EACbC,aAAa,IAEZQ,EAAcnB,KAAI,SAACuB,EAAGC,GACrB,OACE,yBAAKC,IAAKF,GACR,kBAAC,EAAD,CACEE,IAAKD,EACLE,YAAaH,EACblM,SAAU7L,EAASmY,YACnB7N,UAAW,mBAEX,kBAAC,GAAD,CACE2N,IAAKF,EACLzH,OAAQyH,EACRlM,SAAU7L,EAASmY,YACnB5H,cAAc,YAUjB/F,OAAMC,KAAKoL,I,WCtBXuC,GApCD,WACZ,MAAwB7U,mBAAS,IAAIyB,MAArC,mBAAOF,EAAP,KAAauT,EAAb,KAyBA,OAXAjW,qBAAU,WACR,IAAMkW,EAAUC,aAAY,WAO5BF,EAAQ,IAAIrT,QAP8B,KAC1C,OAAO,WACLwT,cAAcF,OAShB,yBAAKjO,MAxBgB,CACrB3G,OAAQ,OACR+U,QAAS,QACThV,MAAO,OAEP6K,SAAU,OAEVoK,WAAY,IACZzH,MAAO,QACP0H,UAAW,eAgBT,oDACA,6BACG7T,EAAK8T,mBAAmB,QAAS,CAAEC,QAAQ,EAAMC,UAAW,aCUtDC,GA1CO,SAAC,GAMH,IALlBC,EAKiB,EALjBA,OAKiB,EAJjB3M,MAqCA,OAAO,oCAhCc,SAAC4M,GACpB,IAAID,EAAS,8BAEb,OAAQC,EAAW/G,IACjB,IAAK,QACH8G,EACE,kBAAC,GAAD,CACEzI,cAAc,EACd1E,SAAU7L,EAASwR,MACnBvD,QAAS,eAER,SAAC5B,GACA,OAAO,kBAAC,GAAD,SAKb,MACF,IAAK,OACH2M,EACE,kBAAC,GAAD,CAAUzI,cAAc,EAAO1E,SAAU7L,EAASwR,QAC/C,SAACnF,GACA,OAAO,iCAOjB,OADA6M,QAAQC,IAAIH,GACLA,EAGCI,CAAaJ,KC3BZK,GAAa,SAAC,GAwBP,IAvBlBC,EAuBiB,EAvBjBA,OAGA5V,GAoBiB,EAtBjBzC,QAsBiB,EArBjBwC,MAqBiB,EApBjBC,QACA6V,EAmBiB,EAnBjBA,OACAC,EAkBiB,EAlBjBA,eACAC,EAiBiB,EAjBjBA,MACAC,EAgBiB,EAhBjBA,QACAxC,EAeiB,EAfjBA,YACAC,EAciB,EAdjBA,YAeMvV,GADW,EAbjB+X,YAcqBL,GAErBlX,qBAAU,WACR8W,QAAQC,IAAR,OAAYvX,QAAZ,IAAYA,OAAZ,EAAYA,EAAcsQ,MACzB,QAACtQ,QAAD,IAACA,OAAD,EAACA,EAAcsQ,KAElBgH,QAAQC,IAAIvX,GAEZ,IAAMmU,EAAuBC,wBAAcC,cAErC2D,EAAqB,CACzBC,YAAa,CAAExC,GAAI,KAAMC,GAAI,IAAKC,GAAI,IAAKC,GAAI,IAAKC,IAAK,GACzDrB,KAAM,CACJiB,GAAI3M,EAAUS,SACdmM,GAAI5M,EAAUS,SACdoM,GAAI7M,EAAUS,SACdqM,GAAI9M,EAAUS,SACdsM,IAAK/M,EAAUS,UAEjB2O,WAAYpW,EAASgH,EAAUY,mBAAqBZ,EAAUQ,SAC9DqO,OAAQA,EACRzB,kBAAkB,EAClBiC,YAAa,MAGf,OACE,6BACE,yBAAKzP,UAAU,uBACb,kBAACyL,EAAD,iBACM6D,EADN,CAEEtP,UAAU,cACV4M,YAAW,OAAEA,QAAF,IAAEA,KACbC,YAAW,OAAEA,QAAF,IAAEA,KACbU,QAASjW,EAAeA,EAAa0X,OAAS,CAAEjC,GAAI,IACpD2C,YAAa,SAACV,EAAQW,EAASC,EAAShO,EAAa+C,EAAGjM,GAChCA,EAAQqH,MAChB2C,OAAS,iBACvBhK,EAAQqH,MAAM2C,OAAS,kBAEzBwM,eAAgBA,EAChB1B,kBAAgB,EAChBV,cAAe,CAAC,MAChB+C,iBAAe,IAEd,sBAAIV,GAAJ,YAAcC,IAASlD,KACtB,SAACpK,EAA6B4L,GAC5B,OACE,yBAAK1N,UAAU,iBAAiB8P,WAAS,EAACnC,IAAK7L,EAAK8F,IAClD,kBAAC,EAAD,CACErG,SAAU7L,EAASqa,OACnB/P,UAAU,iBACV4N,YAAa9L,EAAK8F,GAClB+F,IAAKD,GAEL,kBAAC,GAAD,CACE1H,OAAQ0H,EAAMzS,WACdsG,SAAU7L,EAASqa,OACnBzL,KAAMxC,EACNmE,aAAmC,WAArBnE,EAAKgB,aAEG,WAArBhB,EAAKgB,YACF,SAACf,EAAOC,EAAUC,EAASC,GACzB,IAAM8N,EAAclO,EACpB,OACE,kBAAC,GAAD,CACEA,KAAMkO,EACNjO,MAAOA,EACPC,SAAUA,EACVC,QAASA,EACTC,OAAQA,KAId,SAACH,GACC,OACE,kBAAC,GAAD,CACE2M,OAAQ5M,EACRC,MAAOA,aAajC,kBAAC,GAAD,CAAWyJ,aAAc8D,MAIhBpP,OAAMC,KAAK4O,IC7HpBkB,GAAkB,SAACjK,GAGvB,IAAMkK,EAAYlK,EAAOmK,MAAM,KAAK,GAMpC,MAAO,CACL7S,EALQ8S,OAAO/K,SAAS6K,EAAUG,OAAO,IAMzC9S,EAJQ6S,OAAO/K,SAAS6K,EAAUG,OAAO,MA8E9BC,GAlEQ,SAAC,GAIJ,IAHlBjP,EAGiB,EAHjBA,SAIA,EAA0DzK,IAAlDQ,EAAR,EAAQA,QAASL,EAAjB,EAAiBA,SAAUG,EAA3B,EAA2BA,UAAWM,EAAtC,EAAsCA,gBAEhC+Y,EAAuBxa,GAC3B,SAACO,GAAD,OAAWA,EAAMU,aAAawZ,mBAuDhC,OAAO,kBAAC,IAAD,CAAiBC,UApDN,SAACC,GAA0B,IAAD,IAC1C,IAAI,UAAAA,EAASC,mBAAT,eAAsB/C,eAAtB,UAAqC8C,EAAS3H,cAA9C,aAAqC,EAAiB6E,aAA1D,CAEA,IAAQ7E,EAAqC2H,EAArC3H,OAAQ4H,EAA6BD,EAA7BC,YAAaC,EAAgBF,EAAhBE,YAO7B,GANAhC,QAAQC,IAAR,uBACkB+B,EADlB,sBAEID,QAFJ,IAEIA,OAFJ,EAEIA,EAAa/C,YAFjB,mBAGqB,QAGhB+C,EACL,OAAQ5H,EAAO6E,aACb,KAAKjY,EAAWkb,WACd,GAAIF,EAAY/C,YACd,GAAgB+C,EAAY/C,YA5BtBkD,WAAW,SA4ByB,CACxC,IAAMC,EAAUd,GAAgBU,EAAY/C,aAK5CxW,EAJiB,CACf4Z,SAAUJ,EACVK,eAAgBF,IAGlBnC,QAAQC,IAAI,gDAEZ9X,EAAS,CACPia,SAAUJ,EACVM,SAAUP,EAAY/C,cAI5B,MACF,KAAKjY,EAAWwb,cAId,IAAMJ,EAAUd,GAAgBU,EAAY/C,aAK5C1W,EAJiB,CACf8Z,SAAUJ,EACVK,eAAgBF,IAGlB,MACF,KAAKpb,EAAWyb,aACd,IAAMC,EAAYd,EAAqBe,QACrC,SAACC,GAAD,OAAOA,EAAE3J,KAAOgJ,KAChB,GACFpZ,EAAgB6Z,GAChB,MACF,QACEzC,QAAQC,IAAI,8BAI6BxN,I,2GC9ElCmQ,GAdC,SAAC,GAMG,IALlBnQ,EAKiB,EALjBA,SACA8M,EAIiB,EAJjBA,QAKA,OACE,yBAAKpO,MAAO,CAAE6E,QAAS,OAAQ6M,cAAe,MAAOtD,QAASA,IAC3D9M,I,gDCGDqQ,GAAe,SAAC,GAMQ,EAL5BC,QAK6B,IAJ7B3R,EAI4B,EAJ5BA,UACAqB,EAG4B,EAH5BA,SACAuQ,EAE4B,EAF5BA,QACGtQ,EACyB,kBAG5B,OAAKpB,IAAM2R,eAAexQ,GAGxB,kBAAC,IAAcC,GACZ,SAACE,EAAUC,GACV,IAAMqQ,EAAuBF,EAAUpQ,EAASuQ,gBAAkB,GAElE,OACE,oCACE,sCACE/R,UAAWA,EACXpI,IAAK4J,EAASE,UACVF,EAASwQ,eACTF,GAEH5R,IAAM+R,aAAa5Q,EAAU,CAAEG,cAElC,wBACEzB,MAAO,CACL6E,QAASnD,EAASyQ,WAAa,YAAc,OAC7ChT,gBAAiBuC,EAASyQ,WAAa,QAAU,SAGlDhS,IAAM+R,aAAa5Q,EAAU,CAAEG,kBAvBA,+BAgC9CkQ,GAAaS,aAAe,CAC1BP,SAAS,GAGI1R,WAAMC,KAAKuR,ICjBXU,GArCK,SAAC,GAYD,IAXlBC,EAWiB,EAXjBA,YACAC,EAUiB,EAVjBA,UACAC,EASiB,EATjBA,mBACAvS,EAQiB,EARjBA,UACAwS,EAOiB,EAPjBA,aASA,EAA0CvZ,oBAAS,GAAnD,mBAAOwZ,EAAP,KAAsBC,EAAtB,KAEMC,EAAiBN,IAAgBG,EAEvC,OACE,wBACExS,UAAS,OAAEA,QAAF,IAAEA,IAAa,4BACxB2D,QAAS,WACP2O,EAAUD,GACVK,GAAkBD,GAClBF,EAAmBE,KpBapB,SAAqBG,GAC1B,IACMrO,EADQqO,EAAIzC,MAAM,KACJjE,KAAI,SAACE,GAAD,OAG1B,SAA6BwG,GAAc,IAAD,EAClCC,EAAQ,qBAQd,OAJA,WAFAD,EAAMA,EAAIE,eAENC,MAAMF,UAAV,SAAkBG,SAAQ,SAACC,GACzBL,EAAMA,EAAIM,QAAQD,EAAMA,EAAKE,kBAGxBP,EAZwBQ,CAAoBhH,MAAIhR,KAAK,KAC5D,OAAOmJ,EoBbF8O,CAAYhB,GACZM,GAAiBF,EACd,SACAE,IAAkBF,EAClB,SACA,K,oBC/BJa,GAAU,SAAC,GAcG,IAblBhW,EAaiB,EAbjBA,EACAC,EAYiB,EAZjBA,EACA8D,EAWiB,EAXjBA,SACAkS,EAUiB,EAVjBA,QACApa,EASiB,EATjBA,MACAC,EAQiB,EARjBA,OAUMS,EAAaD,IAEnB,OAAOkG,uBAEL,oCACGyT,GACC,kBAAClJ,GAAA,EAAOC,IAAR,CACEK,QAAS,CACPlB,QAAS,EACThK,WAAY,CACViK,MAAO,GACPC,SAAU,GACV6J,KAAM,WAGVjJ,KAAM,CAAEd,QAAS,GACjB1J,MAAO,CACLb,gBAAiB,QACjBuU,UAAW,sCACXta,MAAK,OAAEA,QAAF,IAAEA,IAlBH,GAkBYU,EAAWV,MAC3BC,OAAM,OAAEA,QAAF,IAAEA,IAnBJ,GAmBcS,EAAWT,OAC7B8D,SAAU,WACVI,EAAGA,EACHC,EAAGA,EACHmW,aAAc,WACd9Q,gBAAiB,WACjB+Q,aAAc,OACdC,SAAU,WAGXvS,IAKPhJ,SAAS4H,cAAc,sBAIZC,OAAMC,KAAKmT,IC+HpBO,GAAgB,SAAC,GAA+C,IAA7C/R,EAA4C,EAA5CA,KACfe,EAAYf,EAAZe,IAAK+E,EAAO9F,EAAP8F,GACb,EAAgC3O,mBAAS,CAAC,EAAG,IAA7C,mBAAOiE,EAAP,KAAiB4W,EAAjB,KACA,EAA8B7a,oBAAS,GAAvC,mBAAO8a,EAAP,KAAgBC,EAAhB,KAuBA,OArBAlc,qBAAU,WACR8W,QAAQC,IAAI3R,KACX,CAACA,IAoBF,yBAAK6C,MAAO,CAAE6E,QAAS,SACrB,yBACEgD,GAAIA,EACJqM,aAAc,SAACtP,GACb,IAAQuP,EAAiBvP,EAAjBuP,MAAOC,EAAUxP,EAAVwP,MACfL,EAAY,CAACI,EAAOC,IACpBH,GAAW,IAEbI,aAAc,SAACzP,GACbqP,GAAW,IAEbjU,MAAO,CAAE6E,QAAS,OAAQzL,MAAO,KAEjC,kBAAC,KAAD,CACE6G,UACE8B,EAAKuS,SAAW,qBAAuB,uBAEzCC,cAAa,UAAKC,wBAAL,sBACb1R,IACuB,UAArBf,EAAKgB,YACDD,EADJ,kEAE+Df,EAAKe,KAGtE9C,MAAO,CAAE5G,MAAO,OAAQqb,SAAU,OAItC,kBAAC,GAAD,CACElX,EAAGJ,EAAS,GACZK,EAAGL,EAAS,GACZqW,QAASQ,GAAgC,UAArBjS,EAAKgB,aAGzB,kBAAC,KAAD,CACE/C,MAAO,CAAE5G,MAAO,OAAQC,OAAQ,OAAQ6J,UAAW,WACnDqR,cAAa,UAAKC,wBAAL,sBAEb1R,IACuB,UAArBf,EAAKgB,YACDD,EADJ,kEAE+Df,EAAKe,QAI1E,yBACE9C,MAAO,CACL0U,UAAW,OACXC,aAAc,OACdC,UAAW,OACXC,YAAa,QAGd9S,EAAKyC,SAMCsQ,GA/OK,WAClB,IAAMC,EAAiB/e,GACrB,SAACO,GAAD,OAAWA,EAAMF,SAAS0e,kBAG5B,EAAoCle,IAA5Ba,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,YAEpB,EAAkCuB,qBAAlC,mBAAO8b,EAAP,KAAkBC,EAAlB,KACA,EAA8C/b,oBAAS,GAAvD,mBAAOgc,EAAP,KAAwB1C,EAAxB,KACA,EAAkCtZ,mBAAS6b,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KACA,EAAoClc,mBAAS,IAA7C,mBAAOmc,EAAP,KAAmBC,EAAnB,KACA,EACEpc,mBAAqB6b,GADvB,mBAAOQ,EAAP,KAAsBC,EAAtB,KAIAzd,qBAAU,WACR,GAAI,EAAIsd,EAAWja,OAAQ,CACzB,IAIMqa,EAJaC,KAAUC,GAC3BN,EACAF,EAAUhJ,KAAI,SAACoB,GAAD,OAAOA,EAAE/I,UAE8B2H,KACrD,SAACpE,GAAD,OAAOA,EAAE1P,UAELud,EAAWT,EAAU5D,QAAO,SAAChE,GAAD,OAChCkI,EAA0BI,SAAStI,EAAE/I,UAEvCgR,EAAiBI,QAEjBJ,EAAiBL,KAElB,CAACE,EAAYF,IAGhBpd,qBAAU,WACR,IAAM6V,EAAMoH,EAGNc,EAFK,YAAOf,GAEQgB,MAAK,SAACC,EAAG9Z,GACjC,IAAM+Z,EAAQD,EAAEpI,GACVsI,EAAQha,EAAE0R,GAChB,GAAIqI,GAASC,EAAO,CAClB,GAAID,EAAQC,EACV,OAAQ,EAEV,GAAIA,EAAQD,EACV,OAAO,EAGX,OAAO,MAERf,GAAkBY,EAAYK,UAC/Bf,EAAaU,KACZ,CAACd,EAAWD,EAAgBG,IAG/B,OACE,yBAAKjV,UAAU,0BACb,kBAAC,GAAD,CAASmO,QAAQ,SACf,kBAACgI,GAAA,EAAD,CACE/Q,SAAU,SAACpN,GAAD,OACRqd,EAAcrd,EAAMoe,cAAchc,QAEpCwH,YAAY,eACZzI,MAAM,QAER,kBAAC,GAAD,CACE0K,WAAW,UACXI,OAAO,SACPN,QAAS,SAAC3L,GACRN,KAEFkM,KAAK,iBAEP,kBAAC,GAAD,CACEC,WAAW,UACXI,OAAO,SACPN,QAAS,SAAC3L,GACRP,KAGFmM,KAAK,eAGT,kBAAC,EAAD,CACErC,SAAU7L,EAASwR,MACnBlH,UAAU,kBACV4N,YAAajY,EAAWkb,WACxBwF,gBAAc,GAEd,2BAAOrW,UAAU,sBACf,+BACE,4BACG,CAAC,QAAS,SAAU,SAASkM,KAAI,SAACpE,EAAG4F,GACpC,OACE,kBAAC,GAAD,CACE8E,aAAcuC,EACd/U,UA1CO,wBA2CPqS,YAAavK,EACb6F,IAAKD,EACL4E,UAAW0C,EACXzC,mBAAoBA,UAOhC,kBAAC,cAAD,CAAY+D,YAAU,EAACC,cAAe,IAAKC,cAAe,KACxD,2BAAOzW,MAAO,CAAEoO,QAAS,QACvB,+BACGmH,EAAcpJ,KAAI,SAACpK,EAAM4L,GACxB,IACE+I,EAOE3U,EAPF2U,MAEAC,GAKE5U,EANFe,IAMEf,EALF4U,QAEA1F,GAGElP,EAJF6U,YAIE7U,EAHFkP,UACAqD,EAEEvS,EAFFuS,SAEEvS,EADFyC,MAEF,OACE,kBAAC,GAAD,CACEvE,UACEqU,EAAW,qBAAuB,uBAEpC1C,QAASjc,EAASkhB,SAClBhG,YAAaI,EACbtD,MAAOA,EACPmJ,eAAgBxC,EAChB1G,IAAKD,EAAMzS,YAEX,oCACE,4BACE,kBAAC,GAAD,CAAe6G,KAAMA,KAEvB,4BAAK4U,GACL,4BAAKnc,EAAWkc,e,IC5KjCK,GAIAC,G,SCqBUC,I,cAbD,SAAC,GAAgF,IAAD,EAA9E3V,EAA8E,EAA9EA,SAAUrB,EAAoE,EAApEA,UAAWmO,EAAyD,EAAzDA,QAASsD,EAAgD,EAAhDA,cACtCwF,EAAa,CACf9I,QAAO,OAAEA,QAAF,IAAEA,IAAS,MAClBsD,cAAa,OAAEA,QAAF,IAAEA,IAAe,UAGlC,OACE,yBAAK1R,MAASkX,EAAYjX,UAAS,UAAE,SAAeA,SAAjB,QAA4B,IAC1DqB,KCkBM6V,I,oBAjCD,SAAC,GAaK,IAZlB7V,EAYiB,EAZjBA,SACAc,EAWiB,EAXjBA,OACAgV,EAUiB,EAVjBA,mBACAC,EASiB,EATjBA,QACAC,EAQiB,EARjBA,gBASA,OACE,yBACErX,UAAW,kBACXD,MAAO,CACL6E,QAASzC,EAAS,OAAS,OAC3BhJ,MAAO,QACPC,OAAQ,QACRke,eAAgB,SAChBC,WAAY,WAGd,kBAAC,GAAD,CAAYH,QAASA,EAASC,gBAAe,OAAEA,QAAF,IAAEA,IAAmB,IAClE,yBAAKtX,MAAO,CAAE8H,OAAQ,KAAQ7H,UAAWmX,GACtC9V,MAYHmW,GAAa,SAAC,GAAsD,IAApDJ,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,gBAC7B,OACE,yBACEnT,UAAWkT,EACXrX,MAAO,CAAE0J,QAAS4N,EAAiBxP,OAAQ,KAC3C7H,UAAW,uB,8BCwDFyX,I,OAjFS,SAAC,GAGsB,IAF7ClE,EAE4C,EAF5CA,QACAmE,EAC4C,EAD5CA,gBAGMC,GADc5hB,GAAc,SAACO,GAAD,OAAWA,EAAMU,aAAaM,gBACrDvB,GAAc,SAACO,GAAD,OAAWA,EAAMU,aAAa4gB,kBAIvD,EAA8B3e,mBAASsa,GAAvC,mBAAO9N,EAAP,KACA,GADA,KACwCxM,oBAAS,IAAjD,mBAAO4e,EAAP,KAAqBC,EAArB,KACAlJ,QAAQC,IAAI,iBACZ/W,qBAAU,WACR8W,QAAQC,IAAI8I,KACX,CAACA,IAQqB/gB,IAAjBU,aAAR,IACMygB,EAAehiB,GAAc,SAACO,GAAD,OACjC0hB,KAAKC,UAAU3hB,EAAMU,aAAaM,iBAE9B4gB,EAAeniB,GAAc,SAACO,GAAD,OACjC0hB,KAAKC,UAAU3hB,EAAMU,aAAakhB,iBAEpCpgB,qBAAU,WAIR8W,QAAQC,IAAIqJ,KACX,CAACA,IACJpgB,qBAAU,WAIR8W,QAAQC,IAAIkJ,KACX,CAACA,IAKJnJ,QAAQC,IAAIkJ,GACZ,IAAMI,EAA0BxY,IAAW,uBAAwB,CACjE,8BAA+BkY,IAGjC,OAAOO,IAAStY,aACd,kBAAC,GAAD,CACEsX,QAASM,EACTvV,OAAQsD,EACR0R,mBAAmB,oBACnBE,gBAAiB,IAEjB,yBAAKrX,UAAW,qCACd,kBAACqY,GAAA,EAAD,CAAS1R,MAAOkR,EAAe,QAAU,IAAzC,4BAGA,kBAACQ,GAAA,EAAD,KACGR,EACG,sFACA,IAEN,yBAAK7X,UAAWmY,GACd,kBAAC,GAAD,CACEG,OAAQ,SAAC3T,GACPmT,GAAgB,IAElBJ,gBAAiBA,EACjB9T,KAAMmU,MAIXF,EAAe,kBAAC,GAAD,CAAkBhV,ICnGtC,oHDmG8D,sCAE5DxK,SAAS4H,cAAc,yBAKrBsY,GAAY,SAAC,GAUC,IATlB3U,EASiB,EATjBA,KACA8T,EAQiB,EARjBA,gBACAY,EAOiB,EAPjBA,OAQA,GADiB,EANjBE,0BAOoDvf,oBAAS,IAA7D,mBAAOwf,EAAP,KAA2BC,EAA3B,KACA,EAAgCzf,oBAAS,GAAzC,mBAAO0f,EAAP,KAAiBC,EAAjB,KAEuBjZ,IAAW,aAAc,CAC9C,qBAAsBgZ,GAAYF,EAClC,sBAAuBE,IAAaF,IAmBtC,OAhBA3gB,qBAAU,WACR+gB,UAAUC,UACPC,WACAC,MAAK,SAACC,GACDrV,IAASqV,GACXP,GAAsB,GACtBE,GAAY,KAEZA,GAAY,GACZF,GAAsB,OAGzBQ,OAAM,SAACnP,GACN6E,QAAQ7E,MAAM,qCAAsCA,QAEvD,CAACnG,IAEF,6BACE,kBAAC,GAAD,CACEE,WAAY,kBAACqV,GAAA,EAAD,MACZvV,KAAM,4BACND,QAAS,SAACgB,GACRkU,UAAUC,UAAUM,UAAUxV,GAC9BgV,GAAY,GACZN,EAAO3T,IAETxL,MAAO,OACP8K,OAAQ,UACRJ,WAAY,YAEZ4U,EAMA,kBAACY,GAAA,EAAD,CAAapV,OAAO,WAApB,wBALA,kBAACoV,GAAA,EAAD,CAAapV,OAAO,WAApB,qGAOF,yBACElE,MAAO,CACL6E,QAAS,OACT6M,cAAe,MACf6F,eAAgB,SAChBgC,WAAY,QAGd,kBAAC,GAAD,CACExV,WAAY,kBAACyV,GAAA,EAAD,MACZ3V,KAAM,SACND,QAAS+T,OAOb8B,GAAmB,SAAC,GAA2C,IAAzC3W,EAAwC,EAAxCA,IAC1B,OACE,4BACEA,IAAKA,EACL7C,UAAW,qBACX7G,MAAO,OACPsgB,YAAa,EACbC,aAAc,EACdC,YAAa,K,UEpHJC,GAvDK,WAClB,IAAMrJ,EAAuBxa,GAC3B,SAACO,GAAD,OAAWA,EAAMU,aAAawZ,mBAE1BqJ,EAAoB9jB,GACxB,SAACO,GAAD,OAAWA,EAAMU,aAAaM,gBAG1BwiB,EAAwBhkB,GAC5B,SAACK,GAAD,OAAaA,EAAQa,aAAaQ,mBAEpC,OACE,6BACE,kBAAC,EAAD,CACEwI,UAAW,kBACX4N,YAAajY,EAAWyb,aACxBiF,gBAAgB,EAChB9U,SAAU7L,EAASwR,OAEnB,+BACE,+BACE,4BACE,qCACA,0CACA,yCAIN,+BACE,+BACGqJ,EAAqBrE,KAAI,SAACqF,EAAG7D,GAC5B,IAAQ9F,EAA6B2J,EAA7B3J,GAAW8O,GAAkBnF,EAAzBhN,MAAyBgN,EAAlBmF,QAAQD,EAAUlF,EAAVkF,MAC3B,OACE,wBAAI9I,IAAKD,EAAO/J,QAAS,SAACgB,GAAD,OAAOmV,EAAsBvI,KACpD,wBACE5D,IAAKD,EACL3N,MAAO,CAAE6E,QAAS,OAAQ0S,eAAgB,WAEzC1P,KAAE,OAAKiS,QAAL,IAAKA,OAAL,EAAKA,EAAmBjS,KACzB,kBAACmS,GAAA,EAAD,CAAiBpT,MAAM,YAEzB,kBAAC,GAAD,CAAaqI,OAAQuC,KAEvB,4BAAKhX,EAAWkc,IAChB,4BAAKC,YAajBsD,GAAc,SAAC,GAAqD,IAAnDhL,EAAkD,EAAlDA,OACrB,EAA8B/V,oBAAS,GAAvC,mBAAO8a,EAAP,KAAgBC,EAAhB,KAEA,EAAgC/a,mBAAS,CAAC,EAAG,IAA7C,mBAAOiE,EAAP,KAAiB4W,EAAjB,KACQvP,EAAUyK,EAAVzK,MACR,EAA0B3K,IAAlBT,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAEPzC,EAAYV,IAAZU,QAEFsjB,EAAgBjL,EAAOkL,UACvBC,EAAmBnL,EAAOI,UAE1BD,EAAQpZ,GAAc,SAACO,GAAD,OAC1BA,EAAMF,SAAS0e,eAAexD,QAAO,SAAChE,GAAD,OAAO2M,EAAcrE,SAAStI,EAAEzK,WAGjEuM,EAAUrZ,GAAc,SAACO,GAAD,OAC5BA,EAAMF,SAASgkB,iBAAiB9I,QAAO,SAAChE,GAAD,OACrC6M,EAAiBvE,SAAStI,EAAE1F,UAKhC,OACE,6BACE,yBACEqM,aAAc,SAACtP,GACb,IAAQuP,EAAiBvP,EAAjBuP,MAAOC,EAAUxP,EAAVwP,MACfL,EAAY,CAACI,EAAOC,IACpBH,GAAW,IAEbI,aAAc,SAACzP,GACbqP,GAAW,IAEbjU,MAAO,CACLsa,eAAgBtG,EAAU,YAAc,KAGzCxP,GAGF5N,IAAYrB,EAAQgK,MAAQyU,GAC3B,kBAAC,GAAD,CACE5a,MArCM,GAqCCA,EACPC,OAtCM,GAsCEA,EACRkE,EAAGJ,EAAS,GACZK,EAAGL,EAAS,GACZqW,QAASQ,GAET,yBACEhU,MAAO,CACL4C,UAAU,SAAD,OA7CP,GA6CO,KACTC,gBAAiB,UACjBxJ,SACAD,UAGF,kBAAC,GAAD,CACEA,MAAOA,EACPC,OAAQA,EACR4V,OAAQA,EACRC,OAAQ,CAAC,GAAI,IACbtY,QAASrB,EAAQsK,QACjBsP,eAAgB,SAACqC,KACjBpC,MAAOA,EACPC,QAASA,QCvERkL,GA5DG,WAChB,IAAMC,EAAcxkB,GAAc,SAACO,GAAD,OAAWA,EAAMU,aAAaM,gBAC1DkjB,EAAczkB,GAAc,SAACO,GAAD,OAAWA,EAAMU,aAAakhB,gBAChE,EAAoDjf,oBAAS,GAA7D,mBAAOwhB,EAAP,KAA2BC,EAA3B,KAIMC,GAHgC7kB,GACpC,SAACK,GAAD,OAAaA,EAAQykB,kBAAkBC,uBAET/kB,GAC9B,SAACK,GAAD,OAAaA,EAAQykB,kBAAkBE,uBAEzC,EAAwC7hB,mBAAS+e,KAAKC,UAAUsC,IAAhE,mBAAqBQ,GAArB,WACAjjB,qBAAU,WACRijB,EAAgB/C,KAAKC,UAAUuC,MAC9B,CAACD,EAAaC,IAiBjB,OACE,kBAAC,GAAD,KACE,yBACEza,MAAO,CACL6E,QAAS,OAETzL,MAAO,OACPgV,QAAS,OACTmJ,eAAgB,eAGlB,kBAAC,GAAD,CACExT,WAAY,kBAAC3C,EAAA,EAAD,MACZwC,QAAS,SAACgB,GACR+V,GAAsB,IAExB9W,KAAK,iBACLzK,MAAM,MACN8K,OAAO,UACPJ,WAAW,aAjCV4W,EACL,kBAAC,GAAD,CACE/C,gBAAiB,WAEfiD,IAEAD,GAAsB,IAExBnH,QAASkH,IAGX,qCA0BA,6BACE,kBAAC,GAAD,SCAOO,GAhDS,SAAC,GAOQ,EAN/BrJ,QAMgC,IALhC3R,EAK+B,EAL/BA,UACAqB,EAI+B,EAJ/BA,SAEAuP,GAE+B,EAH/BgB,QAG+B,EAF/BhB,aACAlD,EAC+B,EAD/BA,MAEMuN,EAAqBllB,GACzB,SAACO,GAAD,OAAWA,EAAMU,aAAaM,gBAG5B4jB,EAAU,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAoBjM,OAAOjC,GACzCb,KAAI,SAACqF,GAAD,OAAOA,EAAEjF,KACbsJ,SAAShF,GAEZ9Y,qBAAU,WACRojB,EAAU,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAoBjM,OAAOjC,GACrCb,KAAI,SAACqF,GAAD,OAAOA,EAAEjF,KACbsJ,SAAShF,KACX,CAACqK,IAKJ,OAAK/a,IAAM2R,eAAexQ,GAExB,yBAAKtB,MAAO,CAAE6E,QAASsW,EAAa,OAAS,UAC3C,kBAAC,IAAD,CAAWtK,YAAaA,EAAalD,MAAOA,IACzC,SAAClM,EAAUC,GAEV,OADAmN,QAAQC,IAAIqM,GAEV,uCACElb,UAAWA,EACXpI,IAAK4J,EAASE,SACd3B,MAdgB,CAC1B6E,QAASsW,EAAa,OAAS,UAcjB1Z,EAASwQ,eACTxQ,EAASuQ,iBAEZ7R,IAAM+R,aAAa5Q,EAAU,CAAEG,kBAdA,+BCyB/B2Z,GArDI,WACUplB,GACzB,SAACO,GAAD,OAAWA,EAAMU,aAAaM,gBAoBhC,OACE,6BACE,kBAAC,EAAD,CACEiK,SAAU7L,EAASwR,MACnBlH,UAAU,kBACV4N,YAAajY,EAAWwb,cACxBkF,gBAAgB,GAEhB,kBAAC,GAAD,CACErW,UAAU,mBACV2R,QAASjc,EAAS0lB,OAClBxK,YAAY,QACZlD,MAAO,EACPmJ,gBAAgB,GAEhB,kBAAC,GAAD,OAEF,kBAAC,GAAD,CACE7W,UAAU,mBACV2R,QAASjc,EAAS0lB,OAClBxK,YAAY,OACZlD,MAAO,EACPmJ,gBAAgB,GAEhB,6C,UCaKwE,GA5DO,WACpB,MlCkCO,CACLC,UARgBvlB,GAAc,SAACO,GAAD,OAAWA,EAAMF,SAASklB,aASxDC,aARmBxlB,GACnB,SAACO,GAAD,OAAWA,EAAMU,aAAaukB,gBAQ9BC,mBANyBzlB,GACzB,SAACO,GAAD,OAAWA,EAAMskB,kBAAkBY,uBkChC7BF,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,aAAcC,EAAjC,EAAiCA,mBACjC,EAAsCxiB,IAAtC,mBAAOyiB,EAAP,KAA0BriB,EAA1B,KAA0BA,OAC1B,OACE,yBAAK4G,UAAU,kBAAkBD,MAAO,CAAE3G,OAAQ,SAChD,+BACE,+BACE,4BACE,qCACA,sCACA,uCAIN,yBACExB,IAAK6jB,EACL1b,MAAO,CAAE2C,OAAQ,gBAAiBtJ,OAAQ,SAE1C,kBAAC,KAAD,CACEsiB,UAAU,EACV9T,GAAG,6BACH7H,MAAO,CAAE5G,MAAO,OAAQC,OAAQA,EAAS,KAEzC,+BACE,+BACG,sBAAIkiB,GAAJ,YAAkBC,GAAlB,YAAmCC,IAAoBtP,KACtD,SAACnC,EAAO2D,GACN,IAAQ7E,EAA4BkB,EAA5BlB,UAAWG,EAAiBe,EAAjBf,KAAMD,EAAWgB,EAAXhB,OAEzB,OACE,wBACE4E,IAAKD,EACL3N,MAAO,CAAE6E,QAAS,OAAQ6M,cAAe,WAEzC,wBAAI9D,IAAKD,EAAO3N,MAAO,CAAE4G,MAAO,YAAhC,iBACQkC,IAER,4BAAKE,GACL,4BACE,uBACE4S,KAAM3S,EACN4S,IAAI,aACJ7b,MAAO,CAAE4G,MAAO,aAChBvO,OAAO,UAEN4Q,cCyBrB6S,GAAQ,SAAC,GAAwC,IAAtCxa,EAAqC,EAArCA,SACf,OAAO,yBAAKtB,MAAO,CAAE4G,MAAO,UAAYtF,IAG3Bya,GA7EA,WACb,MAA8D7lB,IAAvCO,GAAvB,EAAQH,cAAR,EAAuBG,kBAAkBC,EAAzC,EAAyCA,iBAUzC,EAAsBwC,mBAAS,IAA/B,mBAAO8iB,EAAP,KACA,GADA,KAC8B7b,IAAMjH,UAAS,IAA7C,mBAAO+iB,EAAP,KAAgBC,EAAhB,KAEAnkB,qBAAU,WACR8W,QAAQC,IAAImN,GACZvlB,EAAiBulB,GACbA,GAIFxlB,EAAiB,OAElB,CAACwlB,IAEJlkB,qBAAU,WACR8W,QAAQC,IAAIkN,KACX,CAACA,IAEJ,MAAuC/iB,IAAvC,mCAAoBG,MAApB,EAA2BC,OAE3B,OACE,yBAAK2G,MAAO,CAAE3G,OAAQ,OAAQsO,cAAe,QAC3C,yBAAK3H,MAAO,CAAEkP,OAAQ,SACpB,kBAAC,GAAD,KACE,kBAAC,GAAD,uBACA,yBAAKlP,MAAO,CAAE6U,YAAa,SACzB,kBAACsH,GAAA,EAAD,CACEF,QAASA,EACT5W,SAAU,SAACT,GAAD,OAAOsX,EAAWtX,EAAEvM,OAAO4jB,eAM7C,kBAAC,GAAD,QClBSG,GAzBA,WACb,OACE,kBAAC,KAAD,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,gBACA,kBAAC,KAAD,gBACA,kBAAC,KAAD,gBACA,kBAAC,KAAD,sBAEF,kBAAC,KAAD,KACE,kBAAC,GAAD,OAEF,kBAAC,KAAD,KACE,kBAAC,GAAD,OAEF,kBAAC,KAAD,KACE,kBAAC,GAAD,OAEF,kBAAC,KAAD,KACE,kBAAC,GAAD,SChBFC,GAAc,WAClB,IAAMC,EAAgBtmB,GAAc,SAACO,GAAD,OAAWA,EAAMF,SAASO,WAE9D,EAAkCsC,oBAAS,GAA3C,mBAAOqjB,EAAP,KAAkBC,EAAlB,KAEMC,EAAmB7c,IAAW,eAAgB,CAClD,qBAAsB2c,EACtBG,OAAQJ,IAAkB/mB,EAAQsK,QAClC,yBAA0B0c,IAEtBI,EAAc/c,IAAW,SAAU,CACvC,iBAAkB0c,IAAkB/mB,EAAQgK,OAG9C,OAAO8Y,IAAStY,aACd,kBAAC,KAAD,CACE6c,OAAQ,CACNnd,KAAM,EACND,IAAK,EACLqd,MAAO9jB,OAAOiB,WAAa,GAC3B8iB,OAAQ/jB,OAAOkB,YAAc,IAE/B8iB,iBAAkBN,EAClBO,gBAAiB,CAAEzf,EAAG,IAAKC,EAAG,KAC9Byf,OAAO,wBAEP,yBAAKhd,UAAW0c,GACd,kBAAC,GAAD,KACE,kBAAC,GAAD,CACEO,KAAM,kBAACC,GAAA,EAAD,MACNhZ,UAAW,WACTqY,GAAa,MAGjB,kBAAC,GAAD,CACEU,KAAM,kBAACE,GAAA,EAAD,MACNjZ,UAAW,WACTqY,GAAa,OAInB,kBAAC,GAAD,QAGJlkB,SAAS4H,cAAc,6BAIZC,OAAMC,KAAKic,IAKpBgB,GAAc,SAAC,GAAsD,IAApD/b,EAAmD,EAAnDA,SACrB,OAAO,yBAAKrB,UAAU,oCAAoCqB,IAGtDgc,GAAY,SAAC,GAMC,IALlBJ,EAKiB,EALjBA,KACA/Y,EAIiB,EAJjBA,UAKA,OACE,yBAAKlE,UAAU,gBAAgBkE,UAAWA,GACvC+Y,I,oBCNQK,GAhEO,SAAC,GAMH,IALlBnb,EAKiB,EALjBA,OACAiV,EAIiB,EAJjBA,QAsBA,OAHAtf,qBAAU,WACR8W,QAAQC,IAAI1M,KACX,CAACA,IACGtC,IAASC,aACd,kBAAC,GAAD,CACEqC,OAAQA,EAERiV,QAASA,EACTC,gBAAiB,GAEjB,kBAAChN,GAAA,EAAOC,IAAR,CACEd,SAzBW,CACfiT,OAAQ,CACNlf,EAAG,IACHkM,QAAS,GAEX8J,QAAS,CACP9J,QAAS,EACTlM,EAAG,EACHkC,WAAY,CACVkK,SAAU,MAiBV5J,MAAO,CACL5G,MAAO,OACPC,OAAQ,OACR8F,gBAAiB,QACjByU,aAAc,GACdxF,QAAS,OAEXxD,QAASxI,EAAS,UAAY,UAE9B,kBAAC,GAAD,KACE,kBAACkW,GAAA,EAAD,uBACA,6BACA,kBAACkF,GAAA,EAAD,6DACA,yBACEvd,UAAU,eACV6C,IAAK0R,4CAEP,kBAAC8D,GAAA,EAAD,wBACA,6BACA,kBAACkF,GAAA,EAAD,yDACA,yBACEvd,UAAU,eACV6C,IAAK0R,0CAKblc,SAASoP,eAAe,qBC9Bb+V,GA3BE,WACf,MvCWK,SAAmBC,GACxB,MAA0BxkB,mBAAkBwkB,GAA5C,mBAAOrjB,EAAP,KAAcsjB,EAAd,KAIA,MAAO,CAACtjB,EAFY,kBAAMsjB,GAAUtjB,KuCdHujB,EAAU,GAA3C,mBAAOpK,EAAP,KAAgBqK,EAAhB,KAEQjnB,EAAYV,IAAZU,QAER,OAAOkJ,IAASC,aACd,oCACGnJ,IAAYrB,EAAQsK,SACnB,kBAAC,GAAD,CAAeuC,OAAQoR,EAAS6D,QAASwG,IAE1CjnB,IAAYrB,EAAQsK,SACnB,kBAAC,GAAD,CACEiE,WAAW,UACX7D,UAAU,oBACVgE,SAAS,WACT5K,OAAO,MACP0K,WAAY,kBAAC+Z,GAAA,EAAD,MACZla,QAASia,EACTha,KAAK,gCACLzK,MAAM,UAIZd,SAAS4H,cAAc,wB,kBCGZ6d,GA/BU,WACvB,IAAMC,EAAmBjoB,GACvB,SAACK,GAAD,OAAaA,EAAQC,SAASF,iBAG1B8nB,EAAiBC,cAAa,WAClCF,OAGIG,EAAwB,CAC5BhhB,SAAU,WACV/D,MAAO,GACPC,OAAQ,GACRsJ,OAAQtC,EAAUU,qBAAuB,gBAAkB,OAC3D+b,OAAQ,EACRrd,KAAM,EACNiK,QAAS,GAIX,OAAO5J,IAASC,aACd,kBAACuK,GAAA,EAAOC,IAAR,CACEvK,MAAK,6BAAOme,GAAP,IAA8Bhf,gBAAiB,UACpDif,SAAU,CAAEjf,gBAAiB,QAASuK,QAAS,IAE/C,uCAAK1J,MAAOme,GAA2BF,IAJzC,KAMA3lB,SAAS4H,cAAc,yBCnBZme,GAdA,SAAC,GAMI,IALlB/c,EAKiB,EALjBA,SAKiB,EAJjB8M,QAKA,OACE,yBAAKpO,MAAO,CAAC5G,MAAO,QAASC,OAAQ,UAClCiI,IC+FQgd,GA7EH,WACV,I1CwM4BC,E0CxMtBC,EAASC,YAAQpe,EAAUC,UAAU,GAErCsa,EAA0B7kB,GAC9B,SAACK,GAAD,OAAaA,EAAQykB,kBAAkBE,sBAGzC,EACElkB,IADMU,EAAR,EAAQA,aAAcD,EAAtB,EAAsBA,gBAAiBR,EAAvC,EAAuCA,YAAaC,EAApD,EAAoDA,cAGpD,EAAkDb,IAA1CU,EAAR,EAAQA,QAAST,EAAjB,EAAiBA,cAAjB,EAAgCK,cAEhCkoB,aAAY,WACMnpB,EAAQsK,UAGvBQ,EAAUa,kBAEbnJ,qBAAU,WACJnB,IAAYrB,EAAQgK,MACtBpJ,MAED,CAACqoB,I1CmLwBD,E0CjLd,WACZ3D,K1CkLF7iB,oBAAUwmB,EAAQ,I0C/KlB1P,QAAQC,IAAI/X,GAGZF,IAEA,MAA0BgD,IAAlBT,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OACf,OACE,oCACE,kBAAC,GAAD,MACA,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,KACE,kBAAC,IAAD,KACG9B,GACC,kBAAC,GAAD,CACEX,QAASA,EACTwY,MAAK,YAAMtY,GACXuY,QAAO,YAAMtY,GACbsC,OAAQA,EACRwT,YAAajW,IAAYrB,EAAQgK,KACjCuN,YAAalW,IAAYrB,EAAQgK,KACjC0P,OAAQ1X,EACR2X,OAAQ,CAAC,GAAI,IACbC,eAAgB,SAACqC,GACf,IAAMF,EAAqB,CACzBtE,GAAIwE,EACJvE,GAAIuE,EACJtE,GAAIsE,EACJrE,GAAIqE,EACJpE,IAAKoE,GAEP3C,QAAQC,IAAIwC,GACRE,EAAEpW,OAAS,IACb7D,EAAa0X,OAASqC,GAExBha,EAAgBga,IAElBlY,MAAOA,S,uCjBhGlB2d,K,6BAAAA,Q,cAIAC,K,+BAAAA,Q,SAuCU2H,G,WA/Bb,WAAYlb,GAAc,0BAH1BA,SAGyB,OAFzBmb,YAEyB,OADzBC,cACyB,EACvBC,KAAKF,OAAS,GACdE,KAAKD,SAAW,GAChBC,KAAKrb,IAAMA,E,6CAEb,SAASxL,GAA8D,IAAD,EACpE4W,QAAQC,IAAIgQ,KAAKF,QACjB,IAAMG,EA4BV,SAAkBlM,GAChB,IAAImM,EAAgB,GACJ,IAAIC,OAClB,wKAMA,KAEWC,KAAKrM,IAChBmM,EAAc/S,KAAK+K,GAAkBmI,eAEvC,OAAOH,EA1C0BI,CAASN,KAAKrb,MAC7C,EAAAqb,KAAKD,UAAS5S,KAAd,oBAAsB8S,IACtBlQ,QAAQC,IAAIiQ,K,qBAEd,WACE,OAA6B,GAAtBD,KAAKF,OAAOxjB,S,2BAErB,WAA2B,IAAD,OACpBwjB,EAAmB,GAYvB,OAXAE,KAAKF,OAAOzS,KAAI,SAACvH,GACf,GAAQA,IACDmS,GAAgBsI,aACnBT,EAAO3S,KAAP,sCACiC,EAAKxI,IADtC,gDAKAoL,QAAQC,IAAI,wCAGX8P,M,SkBnBUU,G,WAcnB,WAAYC,GAuDd,IAAwB9b,EAvDQ,0BAbrBoE,QAaoB,OAZpB/E,SAYoB,OAXpB0B,WAWoB,OAVpBkS,WAUoB,OATpBzF,cASoB,OARpB0F,YAQoB,OAPpBC,iBAOoB,OANpB7T,iBAMoB,OALpByc,cAKoB,OAJ7BC,eAI6B,OAH7BnL,cAG6B,OAF7BoL,YAE6B,EAE3BZ,KAAKjX,GAAK0X,EAAIzc,IACdgc,KAAKhc,IAAMyc,EAAIzc,IACfgc,KAAKta,MAAQ+a,EAAI/a,MACjBsa,KAAKpI,MAAQ,IAAI/b,KAAK4kB,EAAI7I,OAC1BoI,KAAK7N,SAAWsO,EAAIzc,IACpBgc,KAAKnI,OAAS4I,EAAI5I,OAClBmI,KAAKlI,YACHlhB,EAAgB6pB,EAAI3I,aACtBkI,KAAK/b,YAqDT,SAAmBU,GACjB,MAAmB,kBAARA,GACM,gCACDyb,KAAKzb,GAVjBkc,CADkBlc,EA7Ccqb,KAAKhc,KA8Cd,QAa7B,SAAiBW,GACf,MAAmB,kBAARA,GACM,uBACDyb,KAAKzb,GAfjBmc,CAAQnc,GAAa,QAmB3B,SAAiBA,GACf,MAAmB,kBAARA,GACJA,EAAIoS,SAAS,SApBhBgK,CAAQpc,GAAa,QAuB3B,SAAmBA,GACjB,MAAmB,kBAARA,GACJA,EAAIoS,SAAS,SAxBhBiK,CAAUrc,GAAa,UACpB,SAjDoB,WAArBqb,KAAK/b,aAA4Bwc,EAAIQ,YACvCjB,KAAKU,SAAW,CACdO,WAAYR,EAAIQ,YAElBjB,KAAKjX,GAAK0X,EAAIQ,aAEdjB,KAAKU,SAAW,CACd1c,IAAKyc,EAAIzc,IACT0B,MAAO+a,EAAI/a,MACXkS,MAAO,IAAI/b,KAAK4kB,EAAI7I,OACpBzF,SAAUsO,EAAIzc,IACd6T,OAAQ4I,EAAI5I,QAEdmI,KAAKjX,GAAK0X,EAAIzc,KAGhBgc,KAAKxK,UAAW,EAChBwK,KAAKW,UAAY,IAAId,GAAgBG,KAAKhc,KAC1Cgc,KAAKY,QAAS,E,8CAIhB,SAAUxjB,GACR4iB,KAAKxK,SAAWpY,I,kBAGlB,WACE2S,QAAQC,IAAIgQ,KAAKW,UAAUb,QAC3BE,KAAKY,QAAS,M,SCjEGM,G,WAMnB,WAAYC,GAAmB,0BALtBpY,QAKqB,OAJrB9E,iBAIqB,OAH9BuR,cAG8B,EAC5BwK,KAAKjX,GAAKoY,EACVnB,KAAKxK,UAAW,EAChBwK,KAAK/b,YAAc,S,8CAErB,SAAU7G,GACR4iB,KAAKxK,SAAWpY,M,KCmCdme,GAAmBha,EAAUO,UAAUuL,KAC3C,SAAC+T,GAAD,OAAO,IAAIF,GAAWE,MAGlB7pB,GAAyB,CAE7B0e,eAAgB,GAChBsF,iBAAkBA,GAClBtjB,cAAe,GACfD,YAAa,GACbykB,UAAW,GACX/kB,eAAe,EACfF,cAAe+J,EAAUa,iBACzBtK,QAASrB,EAAQsK,QAGjBsgB,qBAAsB7Y,aAAM,SAAClR,EAASgqB,GAGpC,OADAhqB,EAAQiqB,WAAWD,GACXA,GACN,KAAK7qB,EAAQgK,KAEb,KAAKhK,EAAQsK,QAEb,KAAKtK,EAAQ+qB,MACX,MACF,QACEzR,QAAQC,IAAI,8CAGlB3Y,cAAemR,aAAM,SAAClR,EAASmR,EAAV,GAA+B,IAAhBC,EAAe,EAAfA,SAGlC,OAAQA,IAAW5Q,SACjB,KAAKrB,EAAQgK,KACXnJ,EAAQiqB,WAAW9qB,EAAQsK,SAC3B,MACF,KAAKtK,EAAQsK,QACXzJ,EAAQiqB,WAAW9qB,EAAQgK,MAC3B,MACF,KAAKhK,EAAQ+qB,MACX,MACF,QACEzR,QAAQC,IAAI,0CAEhBD,QAAQC,IAAItH,IAAW5Q,YAEzB2pB,kBAAmB7b,aAAO,SAACnO,EAAOiqB,GAChCjqB,EAAMwe,eAAiByL,KAEzBC,eAAgB/b,aAAO,SAACnO,EAAOiqB,GAC7BjqB,EAAMO,YAAc0pB,KAEtBE,iBAAkBhc,aAAO,SAACnO,EAAOoqB,GAC/BpqB,EAAMQ,cAAgB4pB,KAExBN,WAAY3b,aAAO,SAACnO,EAAO6pB,GACzB7pB,EAAMK,QAAUwpB,KAElB3pB,iBAAkBiO,aAAO,SAACnO,EAAOqqB,GAC/BrqB,EAAMD,cAAgBsqB,KAExBlqB,iBAAkBgO,aAAO,SAACnO,EAAOsqB,GAC/BtqB,EAAMC,cAAgBqqB,KAExBlqB,YAAa+N,aAAO,SAACnO,EAAOyT,GAC1B,IAAM8W,EAAevqB,EAAMglB,UAAUpP,KACnC,SAACnC,GAAD,OAAWiO,KAAKC,UAAUlO,MAEtB+W,EAAW9I,KAAKC,UAAUlO,GAE3B8W,EAAajL,SAASkL,IACzBxqB,EAAMglB,UAAUtP,KAAKjC,MAKzBgX,uBAAwBC,aAEtB,SAAC7qB,EAAS8qB,GAAV,OACEA,EAAarG,kBAAkBsG,wBAHJ,yCAK7B,WAAO/qB,EAASiC,GAAhB,UAAA2d,EAAA,sDACE3d,EAAO+oB,QAAQC,aAAyB,SAASpI,MAAK,SAACnN,GACrD,IAWMsD,EAXmBtD,EAAKK,KAAI,SAACoT,GACjC,MAAO,CACLzc,IAAKyc,EAAIzc,IACT0B,MAAO+a,EAAI/a,MACXkS,MAAO6I,EAAI7I,MACX4K,SAAU/B,EAAI+B,SACd3K,OAAQ4I,EAAI5I,OACZC,YAAa2I,EAAI3I,gBAIUzK,KAAI,SAACoB,GAAD,OAAmB,IAAI+R,GAAS/R,MACnEnX,EAAQmqB,kBAAkBnR,MAd9B,2CAL6B,yDAuB/BmS,kBAAmBN,aACjB,SAAC7qB,EAAS8qB,GAAV,OAA2BA,EAAajqB,aAAaQ,kBAD7B,yCAExB,WAAOrB,EAAS6Y,EAAhB,iCAAA+G,EAAA,sDAA0BxO,EAA1B,EAA0BA,SAClBga,EAAkB,IAAIC,IAAIxS,EAAOmS,QAAQjH,WACzCuH,EAAkB,IAAID,IAAJ,UACtBxS,EAAOmS,QAAQO,cAAcxV,KAAI,SAACE,GAAD,OAAOA,EAAExE,aADpB,QAC2B,IAG7C+Z,EAAwBpa,IAAWuN,eAAe5I,KAAI,SAACpK,GAM3D,OALIyf,EAAgBK,IAAI9f,EAAKkP,UAC3BlP,EAAKM,WAAU,GAEfN,EAAKM,WAAU,GAEVN,KAGH+f,EAA0Bta,IAAW6S,iBAAiBlO,KAC1D,SAACwC,GAMC,OALI6S,EAAgBK,IAAIlT,EAAO9G,IAC7B8G,EAAOtM,WAAU,GAEjBsM,EAAOtM,WAAU,GAEZsM,KAIL7X,EAAc0Q,IAAWuN,eAAexD,QAAO,SAACxP,GACpD,OAAOyf,EAAgBK,IAAI9f,EAAKkP,aAE5Bla,EAAgBsjB,GAAiB9I,QAAO,SAACxP,GAC7C,OAAO2f,EAAgBG,IAAI9f,EAAK8F,OAElCzR,EAAQmqB,kBAAkBqB,GAC1BxrB,EAAQsqB,iBAAiBoB,GACzB1rB,EAAQqqB,eAAe3pB,GACvB+X,QAAQC,IAAI/X,GACZX,EAAQsqB,iBAAiB3pB,GApC3B,4CAFwB,2DA0C1BgrB,kBAAmBd,aACjB,SAAC7qB,EAAS8qB,GAAV,OAA2BA,EAAajqB,aAAaC,kBAD7B,yCAExB,WAAOd,EAASgrB,EAAhB,qBAAApL,EAAA,sDAA2BxO,EAA3B,EAA2BA,SACzBqH,QAAQC,IAAI,yBACZD,QAAQC,IAAIsS,EAAQA,SACpBvS,QAAQC,IAAItH,IAAW1Q,cACjBkrB,EAAWxa,IAAW1Q,YAAYqV,KAAI,SAACoB,GAC3C,GAAIA,EAAE0D,WAAamQ,EAAQA,QAAQjQ,SAAU,CAC3C,IAAM8Q,EAAYza,IAAWuN,eAAemN,MAC1C,SAAC3U,GAAD,OAAOA,EAAE0D,WAAamQ,EAAQA,QAAQnQ,YAGxC,OADApC,QAAQC,IAAImT,GACLA,EAEP,OAAO1U,OAITnX,EAAQqqB,eAAeuB,GAEzBnT,QAAQC,IAAIqT,YAAMf,IAlBpB,2CAFwB,4DA4Bb/qB,M,SC/MA+rB,GAN4B,CACvCnT,OAXW,CAAE,GAAM,CAAC,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,QAAS,OAAS,EAAO,QAAU,GAAQ,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,yFAA0F,OAAS,EAAO,QAAU,GAAS,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,uFAAwF,OAAS,EAAO,QAAU,IAAU,GAAM,CAAC,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,QAAS,OAAS,EAAO,QAAU,GAAQ,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,yFAA0F,OAAS,EAAO,QAAU,GAAS,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,uFAAwF,OAAS,EAAO,QAAU,IAAU,GAAM,CAAC,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,QAAS,OAAS,EAAO,QAAU,GAAQ,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,yFAA0F,OAAS,EAAO,QAAU,GAAS,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,uFAAwF,OAAS,EAAO,QAAU,IAAU,GAAM,CAAC,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,QAAS,OAAS,EAAO,QAAU,GAAQ,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,yFAA0F,OAAS,EAAO,QAAU,GAAS,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,uFAAwF,OAAS,EAAO,QAAU,IAAU,IAAO,CAAC,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,QAAS,OAAS,EAAO,QAAU,GAAQ,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,yFAA0F,OAAS,EAAO,QAAU,GAAS,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,uFAAwF,OAAS,EAAO,QAAU,KAYpiEoT,eAPoC,CACpC5W,aAJ+B,CAC/B6W,uBAAwB,OAIxBC,aAAc,IAMdlT,QAAS,ICiBQmT,G,WASnB,WAAYjD,GAAoB,0BARvB/a,WAQsB,OAPtBmS,YAOsB,OANtBD,WAMsB,OALtB7O,QAKsB,OAJtB4a,kBAIsB,OAH/BxT,YAG+B,OAF/B0S,mBAE+B,EAC7B,MA0GJ,SAAuBpC,GACrB,IAAML,EAAOjH,KAAKyK,MAAMnD,EAAItQ,QAC5B,OAAOiQ,EAAKjQ,OAASiQ,EAAOkD,GA5GPO,CAAcpD,GAAzBtQ,EAAR,EAAQA,OACR6P,KAAKjX,GAAK0X,EAAI/a,MAAQ,IAAM+a,EAAIqD,UAChC9D,KAAKta,MAAQ+a,EAAI/a,MACjBsa,KAAKnI,OAAS4I,EAAI5I,OAClBmI,KAAKpI,MAAQ,IAAI/b,KAAK4kB,EAAIqD,UAAUxS,MAAM,KAAK,IAC/C0O,KAAK2D,aAAexK,KAAKyK,MAAMnD,EAAItQ,QAAQA,OAC3CJ,QAAQC,IAAImJ,KAAKyK,MAAMnD,EAAItQ,SAE3B6P,KAAK6C,cAAgB1J,KAAKyK,MAAMnD,EAAItQ,QAAQ0S,cACxC1J,KAAKyK,MAAMnD,EAAItQ,QAAQ0S,cACvB,GACJ7C,KAAK7P,OAASA,E,6CAGhB,SAAS4T,GACP,cAAqBC,OAAOC,QAAQjE,KAAK7P,QAAzC,eAAkD,CAA7C,IAA6C,EAA7C,sBAAO+T,EAAP,KAAUC,EAAV,KAA6C,eACbA,EAAEF,WADW,IAChD,2BAAgD,CAAC,IAAD,yBAApCpV,EAAoC,UAC9BpB,GAAKsW,EAAS1R,WAC5B8R,EAAEtV,GAAOpB,EAAIsW,EAAS5R,WAHsB,8BAMhD6N,KAAK7P,OAAO+T,GAAKC,K,wBAIrB,SAAWC,GACTrU,QAAQC,IAAIgQ,KAAK7P,QACjB,cAAqB6T,OAAOC,QAAQjE,KAAK7P,QAAzC,eAAkD,CAA7C,IAA6C,EAA7C,sBAAO+T,EAAP,KAAUC,EAAV,KAA6C,eACbA,EAAEF,WADW,IAChD,2BAAgD,CAAC,IAAD,mCAC9CjE,KAAK7P,OAAO+T,GAAKC,EAAE1R,QAAO,SAACC,GAAD,OAAOA,EAAEjF,IAAM2W,MAFK,kC,wBAOpD,WACErU,QAAQC,IAAIgQ,KAAK7P,QACjB,cAAqB6T,OAAOC,QAAQjE,KAAK7P,QAAzC,eAAkD,CAA7C,IAA6C,EAA7C,sBAAO+T,EAAP,KAAUC,EAAV,KAA6C,eACbA,EAAEF,WADW,IAChD,2BAAgD,CAAC,IAAD,mCAC9CjE,KAAK7P,OAAO+T,GAAK,IAF6B,kC,qBAOpD,SAAQG,EAAiBC,GACvBvU,QAAQC,IAAI,8BACZD,QAAQC,IAAIgQ,KAAK7P,QACN6T,OAAOC,QAAQjE,KAAK7P,QAAQ,GAAG,GACnC9C,KAAI,SAACqF,GAAD,OAAOA,EAAEjF,KAAGsJ,SAASsN,EAAMlS,WACpCpC,QAAQC,IAAI,2CAEd,cAAqBgU,OAAOC,QAAQjE,KAAK7P,QAAzC,eAAkD,CAA7C,0BAAO+T,EAAP,KACGnT,GADH,KACqB,CACtBtS,EAAG6lB,EAAI7lB,EACPC,EAAG4lB,EAAI5lB,EACP6O,EAAG,EACHC,EAAG,EACHC,EAAG4W,EAAMlS,WAEX6N,KAAK7P,OAAO+T,GAAG/W,KAAK4D,M,uBAGxB,SAAUsT,EAAmBC,GAGhBN,OAAOC,QAAQjE,KAAK7P,QAAQ,GAAG,GACnC9C,KAAI,SAACqF,GAAD,OAAOA,EAAEjF,KAAGsJ,SAASsN,EAAMtb,KACpCgH,QAAQC,IAAI,0CAEdgQ,KAAK6C,cAAc1V,KAAKkX,GACxB,cAAqBL,OAAOC,QAAQjE,KAAK7P,QAAzC,eAAkD,CAA7C,0BAAO+T,EAAP,KACGnT,GADH,KACqB,CACtBtS,EAAG6lB,EAAI7lB,EACPC,EAAG4lB,EAAI5lB,EACP6O,EAAG,EACHC,EAAG,EACHC,EAAG4W,EAAMtb,KAEXiX,KAAK7P,OAAO+T,GAAG/W,KAAK4D,M,yBAGxB,WACEiP,KAAK7P,OAASgJ,KAAKyK,MAAMzK,KAAKC,UAAU4G,KAAK2D,iB,2BAE/C,SAAcY,GACZxU,QAAQC,IAAIuU,GACZ,cAAqBP,OAAOC,QAAQjE,KAAK7P,QAAzC,eAAkD,CAA7C,IAA6C,EAA7C,sBAAO+T,EAAP,KAAUC,EAAV,KAA6C,eACbA,EAAEF,WADW,IAChD,2BAAgD,CAAC,IAAD,mCAC9CjE,KAAK7P,OAAO+T,GAAKK,EAAcL,IAFe,kC,qBAMpD,WAEE,OADWF,OAAOC,QAAQjE,KAAK7P,QAAQ,GAAG,GAChC9C,KAAI,SAACqF,GAAD,OAAYA,EAAEjF,O,qBAE9B,WACEsC,QAAQC,IAAI,wCACZ,IAAM9B,EAAK8V,OAAOC,QAAQjE,KAAK7P,QAAQ,GAAG,GAC1CJ,QAAQC,IAAI9B,GACZ,IAAMsW,EAActW,EAAGuE,QAAO,SAACC,GAAD,OAC5BnR,EAAUO,UAAUiV,SAASrE,EAAEjF,MAGjC,OADAsC,QAAQC,IAAI,eAAgBwU,GACrBA,EAAYnX,KAAI,SAACqF,GAAD,OAAYA,EAAEjF,S,SC3FnCtV,GAA6B,CAEjCM,kBAAc8M,EACdoM,gBAAiB,GACjB+K,aAAc,GACdrD,a,OACAN,cAAe5Q,YAAS,CAAC,SAAC1Q,GAAD,OAAWA,EAAM4hB,gBAAe,SAACA,GAExD,OADYF,KAAKC,UAAUC,MAM7BoL,wBAAyBtC,aACvB,SAAC7qB,EAAS8qB,GAAV,OACEA,EAAarG,kBAAkBsG,yBACjC,SAAC/qB,EAASiC,EAAV,GAAmC,EAAfmP,SAElBnP,EAAO+oB,QAAQC,aAA2B,WAAWpI,MAAK,SAACnN,GACzD,IACM0B,EAAwB,GAkB9B,GAnBsB1B,EAERmH,SAAQ,SAACsM,GACrB,IACE,IAAM/N,EAAI,IAAIgR,GAAWjD,GACzB/R,EAAQvB,KAAKuF,GACb,MAAOxH,GAAQ,IAAD,IACd5T,EAAQotB,eAAe,CACrB1a,UAAW,4BACXC,YAAY,6BAAD,iBACTwW,EAAI/a,aADK,QACI,qBAEfwE,OAAM,UAAEuW,EAAI/a,aAAN,QAAe,oBACrByE,KAAM,SAER4F,QAAQC,IAAI9E,OAIZ3J,EAAUW,qBAGP,CACL,IAAMyiB,EAAgBjW,EAAQ+D,QAC5B,SAACtC,GAAD,OAAYA,EAAOzK,QAAUnE,EAAUK,qBACvC,GACE+iB,IACF5U,QAAQC,IAAI2U,GACZrtB,EAAQqB,gBAAgBgsB,GACxBrtB,EAAQkB,gBAAgBmsB,EAAcxU,SAG1C7Y,EAAQstB,mBAAmBlW,SAIjCgW,eAAgB9e,aAAO,SAACnO,EAAOyT,GAC7B,IAAM8W,EAAevqB,EAAMilB,aAAarP,KACtC,SAACnC,GAAD,OAAWiO,KAAKC,UAAUlO,MAEtB+W,EAAW9I,KAAKC,UAAUlO,GAC3B8W,EAAajL,SAASkL,IACzBxqB,EAAMilB,aAAavP,KAAKjC,MAG5B2Z,iBAAkB1C,aAEhB,SAAC7qB,EAAS8qB,GAAV,OAA2BA,EAAa7qB,SAAS8pB,wBAEjD,SAAC/pB,EAASiC,EAAV,GAAmD,IAA/BmP,EAA8B,EAA9BA,SAClB,GADgD,EAApBoc,cACWpc,KAA/BjQ,EAAR,EAAQA,aAAR,EAAsB4gB,aACtB,GAAI5gB,EAAc,CAChB,IAAMssB,EAAMrc,IAAW2Q,aACvB5gB,EAAa0X,OAAS4U,EACtBtsB,EAAausB,cAAcD,GAC3BztB,EAAQqB,gBAAgBF,OAK9BE,gBAAiBiN,aAAO,SAACnO,EAAOwtB,GAC9BlV,QAAQC,IAAIiV,GACZxtB,EAAMgB,aAAewsB,EACrBxtB,EAAM4hB,aAAeF,KAAKyK,MAAMzK,KAAKC,UAAU6L,EAAgB9U,YAEjEzX,gBAAiB8P,aAAM,SAAClR,EAASmR,EAAV,GAA+B,IACpD,GAA0CC,EADS,EAAfA,YAC5BiJ,EAAR,EAAQA,gBAAiBlZ,EAAzB,EAAyBA,aAKzB,GAAIA,EAAc,CAChB,IAAMysB,EAAWvT,EACdtE,KAAI,SAACqF,GAAD,OAAOA,EAAE3J,MACboc,QAFc,OAEN1sB,QAFM,IAENA,OAFM,EAENA,EAAcsQ,IACzBgH,QAAQC,IAAIkV,GACZ,IAAME,GAAaF,EAAW,GAAKvT,EAAgBrV,OACnDyT,QAAQC,IAAR,kCAC6BoV,EAD7B,cAC4CzT,EAAgByT,GAAWrc,GADvE,MAGA,IAAMsc,EAAiB1T,EAAgByT,GAEvC9tB,EAAQqB,gBAAgB0sB,OAI5BT,mBAAoBhf,aAAO,SAACnO,EAAO6tB,GACjCvV,QAAQC,IAAI,4BACZvY,EAAMka,gBAAkB2T,KAG1BltB,gBAAiBoQ,aAAM,SAAClR,EAASysB,EAAV,GAAsC,IAAhBrb,EAAe,EAAfA,SACnCjQ,EAAiBiQ,IAAjBjQ,aACR,GAAIA,EAAc,CAChB,IAAMssB,EAAMrc,IAAW2Q,aACvB5gB,EAAa0X,OAAS4U,EACtBtsB,EAAaP,SAAS6rB,GACtBzsB,EAAQqB,gBAAgBF,OAG5BH,WAAYkQ,aAAM,SAAClR,EAASiuB,EAAV,GAA0C,IAAhB7c,EAAe,EAAfA,SAClCjQ,EAAiBiQ,IAAjBjQ,aACR,GAAIA,EAAc,CAChB,IAAMssB,EAAMrc,IAAW2Q,aACvB5gB,EAAa0X,OAAS4U,EACtBtsB,EAAa+sB,WAAWD,GACxBjuB,EAAQqB,gBAAgBF,OAG5BG,WAAY4P,aAAM,SAAClR,EAASmR,EAAV,GAA+B,IAAhBC,EAAe,EAAfA,SACvBjQ,EAAiBiQ,IAAjBjQ,aACR,GAAIA,EAAc,CAChB,IAAMssB,EAAMrc,IAAW2Q,aACvB5gB,EAAa0X,OAAS4U,EACtBtsB,EAAaG,aACbtB,EAAQqB,gBAAgBF,OAG5BF,QAASiQ,aAAM,SAAClR,EAASmuB,EAAV,GAAyD,IAA/B/c,EAA8B,EAA9BA,SAC/BuN,GAAmB6O,EAD0C,EAApBA,iBACNvtB,SAAnC0e,eACA9D,EAA6BsT,EAA7BtT,SAAUC,EAAmBqT,EAAnBrT,eACZsT,EAAYzP,EAAemN,MAAK,SAAC3U,GAAD,OAAOA,EAAE0D,UAAYA,KACnD1Z,EAAiBiQ,IAAjBjQ,aACR,GAAIA,GAAgBitB,EAAW,CAC7B,IAAMX,EAAMrc,IAAW2Q,aACvB5gB,EAAausB,cAAcD,GACf,OAAZtsB,QAAY,IAAZA,KAAcF,QAAQmtB,EAAWtT,GACjC9a,EAAQqB,gBAAgBF,OAG5BJ,UAAWmQ,aAAM,SAAClR,EAASmuB,EAAV,GAAyD,IAA/B/c,EAA8B,EAA9BA,SAAUoc,EAAoB,EAApBA,cACnD/U,QAAQC,IAAI,wBACZ,IAAQuL,EAAqBuJ,IAAgBvtB,SAArCgkB,iBACApJ,EAA6BsT,EAA7BtT,SAAUC,EAAmBqT,EAAnBrT,eACZuT,EAAcpK,EAAiB6H,MAAK,SAAC3U,GAAD,OAAOA,EAAE1F,IAAMoJ,KACjD1Z,EAAiBiQ,IAAjBjQ,aACR,GAAIA,GAAgBktB,EAAa,CAC/B,IAAMZ,EAAMrc,IAAW2Q,aACvB5gB,EAAausB,cAAcD,GACf,OAAZtsB,QAAY,IAAZA,KAAcJ,UAAUstB,EAAavT,GACrC9a,EAAQqB,gBAAgBF,OAI5BI,YAAa2P,aAAM,SAAClR,EAASmR,EAAV,GAA+B,IAAhBC,EAAe,EAAfA,SAEhC,GADyBA,IAAjBjQ,aACU,CAChB,IAAMssB,EAAMrc,IAAWjQ,aACpB,OAAHssB,QAAG,IAAHA,KAAKlsB,cACDksB,GACFztB,EAAQqB,gBAAgBosB,OAI9BvsB,gBAAiBoN,aAAO,SAACnO,EAAOiX,GAC9BqB,QAAQC,IAAItB,GACZjX,EAAM4hB,aAAe3K,KAEvBkX,aAAchgB,aAAO,SAACnO,EAAOouB,GAC3B,IAAMC,EAAMruB,EAAMgB,aACdqtB,IACFA,EAAI5tB,SAAS2tB,GACbpuB,EAAMgB,aAAeqtB,OAKZ3tB,M,qBC9OM4tB,G,WAInB,WACErgB,EACAsgB,GACC,0BANHtgB,WAME,OALFsgB,aAKE,OAJFC,YAIE,EACAjG,KAAKta,MAAQA,EACbsa,KAAKgG,QAAUA,EACfhG,KAAKiG,OAAS,IAAIC,I,iDAEpB,SAAgBxgB,GAAiC,IAAD,OAE9C,OAAO,IAAIygB,SAAa,SAACC,EAASC,GAChC,IAAMC,EAAW,EAAKL,OAAOM,IAAI7gB,GAC7B4gB,EACFF,EAAQE,EAASjZ,KAAI,SAAAnQ,GAAC,OAAEA,MAExBmpB,EAAO,oBAAD,OAAqB3gB,EAArB,wB,sBAIZ,SAASA,EAAmBsH,GAC1BgT,KAAKiG,OAAOO,IAAI9gB,EAAOsH,O,KCpBZyZ,GAJmB,CAChC3X,IAAK,+CACL4X,IAAK,GCyCD3K,GAAuC,CAE3C4K,sBAAuB,KACvBC,oBAAqB,KACrBC,oBAAgBthB,EAChBuhB,aAASvhB,EACTwhB,oBAAgBxhB,EAChByhB,kBAAczhB,EACdoX,mBAAoB,GAEpBV,mBAAoBzT,aAAM,SAAClR,GACzB,IAGE2vB,GAAa,YAAavR,kJACvByE,MAAK,SAACjd,GACL,IAAMgqB,EAAWhqB,EAAE8P,KAAK,GACxB1V,EAAQ6vB,WAAWD,EAASE,YAC5B9vB,EAAQ+vB,mBACNC,GAAuBJ,EAASK,eAElCjwB,EAAQkwB,gBAAgBF,GAAuBJ,EAASO,aAQxDnwB,EAAQowB,WAAW,CACjB,CACEvG,KAAM,UACNxc,IAAK2iB,GAAuBJ,EAASK,eAEvC,CACEpG,KAAM,QACNxc,IAAK2iB,GAAuBJ,EAASO,kBAI1CpN,OAAM,SAACnP,GACN6E,QAAQC,IAAI,eAEZ1Y,EAAQ+vB,mBACNC,GAAuB,GAAD,OACjB5R,wBADiB,yBAIxBpe,EAAQkwB,gBACNF,GAAuB,GAAD,OAAI5R,wBAAJ,uBAExBpe,EAAQowB,WAAW,CACjB,CACEvG,KAAM,UACNxc,IAAI,GAAD,OAAK+Q,wBAAL,wBAEL,CACEyL,KAAM,QACNxc,IAAI,GAAD,OAAK+Q,wBAAL,2BAIX,MAAOxK,GAAQ,IAAD,IACd6E,QAAQC,IAAI,gBACZ1Y,EAAQqwB,oBAAoB,CAC1B3d,UAAW,sCACXC,YACE,+DACFC,OAAM,UAAEwL,kJAAF,EAAqC,KAC3CvL,KAAI,UAAEuL,kJAAF,EAAqC,WAkB/CgS,WAAYlf,YAAK,yCAAC,WAAOlR,EAAS2uB,EAAhB,qBAAA/O,EAAA,sDAA0BxO,EAA1B,EAA0BA,SAC1CqH,QAAQC,IAAItH,IAAWse,aAActe,IAAWqe,gBAC1Ca,EAAiB3B,EAAO5Y,KAAI,SAACpE,GAAD,OAAOge,GAAahe,EAAEkY,KAAMlY,EAAEtE,QAChEwhB,QAAQ0B,WAAWD,GAAgBzN,MAAK,SAAC2N,GACvC,IAAMC,EAAY,IAAIhC,GAAgB,UAAWU,GAAiB3X,KAC5DkZ,EAAwD,GAE9DF,EAAQ3T,SAAQ,SAAC8T,EAAQC,GACvBnY,QAAQC,IAAIiY,GACS,aAAjBA,EAAOE,SACTH,EAAW7a,KAAK8a,GAChBF,EAAUK,SAASH,EAAO1sB,MAAM8sB,WAAYJ,EAAO1sB,MAAMyR,OAEtC,YAAjBib,EAAOE,QACTpY,QAAQ7E,MAAM,cAGlB5T,EAAQ+qB,sBAAsB0F,GAC9BA,EAAUxF,aAAa,SAASpI,MAAK,SAACjd,GACpC5F,EAAQgxB,uBAAuBprB,MAEjC6qB,EAAUxF,aAAa,WAAWpI,MAAK,SAACjd,GACtC5F,EAAQixB,yBAAyBrrB,SAtBrB,2CAAD,2DA2BjB8e,oBAAqBxT,YAAK,yCAAC,WAAOlR,EAASmR,EAAhB,uBAAAyO,EAAA,sDAAqBxO,EAArB,EAAqBA,SACxC8f,EAAsBvB,GAC1B,QACAve,IAAWse,cAEPyB,EAAwBxB,GAC5B,UACAve,IAAWqe,gBAGbZ,QAAQ0B,WAAW,CAACW,EAAqBC,IAAwBtO,MAC/D,SAAC2N,GACC,IAAMC,EAAY,IAAIhC,GAAgB,UAAWU,GAAiB3X,KAC5DkZ,EAAwD,GAE9DF,EAAQ3T,SAAQ,SAAC8T,EAAQC,GACvBnY,QAAQC,IAAIiY,GACS,aAAjBA,EAAOE,SACTH,EAAW7a,KAAK8a,GAChBF,EAAUK,SAASH,EAAO1sB,MAAM8sB,WAAYJ,EAAO1sB,MAAMyR,OAEtC,YAAjBib,EAAOE,SACT7wB,EAAQqwB,oBAAoB,CAC1B3d,UAAW,uCACXC,YAAa,kCACbC,OAAQ,eACRC,KAAM,OAER4F,QAAQ7E,MAAM,eAGlB5T,EAAQ+qB,sBAAsB0F,GAC9BA,EAAUxF,aAAa,SAASpI,MAAK,SAACjd,GACpC5F,EAAQgxB,uBAAuBprB,MAEjC6qB,EAAUxF,aAAa,WAAWpI,MAAK,SAACjd,GACtC5F,EAAQixB,yBAAyBrrB,SApCd,2CAAD,2DAyC1BmlB,sBAAuBzc,aAAO,SAACnO,EAAOixB,GACpCjxB,EAAMovB,eAAiB6B,KAEzBJ,uBAAwB1iB,aAAO,SAACnO,EAAOkxB,GACrClxB,EAAMmvB,oBAAsB+B,KAE9BJ,yBAA0B3iB,aAAO,SAACnO,EAAOkxB,GACvClxB,EAAMkvB,sBAAwBgC,KAEhCxB,WAAYvhB,aAAO,SAACnO,EAAOqvB,GACzBrvB,EAAMqvB,QAAUA,KAElBU,gBAAiB5hB,aAAO,SAACnO,EAAOuvB,GAC9BvvB,EAAMqvB,QAAUE,KAElBK,mBAAoBzhB,aAAO,SAACnO,EAAOsvB,GACjCtvB,EAAMqvB,QAAUC,KAElBY,oBAAqB/hB,aAAO,SAACnO,EAAOmxB,GAClC,IAAM5G,EAAevqB,EAAMklB,mBAAmBtP,KAC5C,SAACnC,GAAD,OAAWiO,KAAKC,UAAUlO,MAEtB+W,EAAW9I,KAAKC,UAAUwP,GAC3B5G,EAAajL,SAASkL,IACzBxqB,EAAMklB,mBAAmBxP,KAAKyb,OAQpC,SAAStB,GAAuB3iB,GAC9B,IACMkkB,EADWlkB,EAAI2M,MAAM,KACD,GAEpBoV,EADc/hB,EAAI2M,MAAM,QACN,GAExB,MADY,iDAA6CuX,EAA7C,kCAA+EnC,GAI7F,SAASO,GACPoB,EACAS,GAEA,IAAIrjB,EACJ,OAAO,IAAI0gB,SAAyB,SAACC,EAASC,GAC5C,IACE0C,KAAKnF,MAAMkF,EAAU,CACnBE,UAAU,EACVC,QAAQ,EACRC,UAAW,IACXC,eAAe,EACfC,SAAU,SAACtB,GACTriB,EAAOqiB,EAAQriB,KACfsK,QAAQC,IAAIvK,GACZ2gB,EAAQ,CAAEpZ,KAAMvH,EAAM4iB,WAAYA,OAGtC,MAAOnd,GACPmb,EAAO,2BCzPb,IAMegD,GANW,CACxB9xB,SAAU+xB,GACVnxB,aAAcA,GACd4jB,kBDuNaA,IEhOAwN,GAFDC,YAAYH,GAAO,CAAElI,KAAM,sBCGzCngB,IAASyoB,OACP,kBAAC,IAAD,CAAeF,MAAOA,IACpB,kBAAC,GAAD,OAEF/vB,SAAS4H,cAAc,W","file":"static/js/main.43e6fe87.chunk.js","sourcesContent":["export enum AppMode {\r\n  DISPLAY = \"DISPLAY\",\r\n  EDIT = \"EDIT\",\r\n  CYCLE = \"CYCLE\",\r\n}\r\n\r\nexport enum CardView {\r\n  GRID = \"GRID\",\r\n  PREVIEW = \"PREVIEW\",\r\n  FULL_SCREEN = \"FULL_SCREEN\",\r\n}\r\n\r\nexport enum DragType {\r\n  CARD_TABLE_DATA = \"CARD_TABLE_DATA\",\r\n  DISPLAY_CARD = \"DISPLAY_CARD\",\r\n}\r\n\r\nexport enum InteractionType {\r\n  ACTIVE = \"ACTIVE\",\r\n  STATIC = \"STATIC\",\r\n  FIXED = \"FIXED\",\r\n  IMAGE = \"IMAGE\",\r\n}\r\n\r\nexport enum DndTypes {\r\n  PLACEHOLDER = \"PLACEHOLDER\",\r\n  CLOCK = \"CLOCK\",\r\n  IFRAME = \"IFRAME\",\r\n  CARD_ROW = \"CARD_ROW\",\r\n  LAYOUT = \"LAYOUT\",\r\n  WIDGET = \"WIDGET\",\r\n}\r\n\r\nexport enum DragSource {\r\n  LAYOUT_TABLE = \"LAYOUT_TABLE\",\r\n  CARD_TABLE = \"CARD_TABLE\",\r\n  CARD_GRID = \"CARD_GRID\",\r\n  WIDGETS_TABLE = \"WIDGETS_TABLE\"\r\n}\r\n\r\nexport type SheetNames = \"CARDS\" | \"LAYOUTS\" | \"TOP_LEVEL\"","import { ActionCreator, createTypedHooks, ThunkCreator } from \"easy-peasy\";\r\nimport { StoreModel } from \"./model\";\r\nimport React, {\r\n  EffectCallback,\r\n  MouseEventHandler,\r\n  RefObject,\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { AppMode } from \"./enums\";\r\nimport LayoutData from \"./data_structs/LayoutData\";\r\nimport CardData from \"./data_structs/CardData\";\r\nimport WidgetData from \"./data_structs/WidgetData\";\r\nimport { CardAddEvent, CardSwapEvent } from \"./interfaces/CardEvents\";\r\nimport AppError from \"./interfaces/AppError\";\r\n\r\nconst typedHooks = createTypedHooks<StoreModel>();\r\n\r\nexport const useStoreActions = typedHooks.useStoreActions;\r\nexport const useStoreDispatch = typedHooks.useStoreDispatch;\r\nexport const useStoreState = typedHooks.useStoreState;\r\n\r\nexport function useToggle(initialValue: boolean): [boolean, () => void] {\r\n  const [value, setValue] = useState<boolean>(initialValue);\r\n\r\n  const toggleValue = () => setValue(!value);\r\n\r\n  return [value, toggleValue];\r\n}\r\n\r\ninterface UseErrorProps {\r\n  appErrors: AppError[];\r\n  layoutErrors: AppError[];\r\n  googleSheetsErrors: AppError[];\r\n}\r\n\r\nexport const useErrors = (): UseErrorProps => {\r\n  const appErrors = useStoreState((state) => state.appModel.appErrors);\r\n  const layoutErrors = useStoreState(\r\n    (state) => state.layoutsModel.layoutErrors\r\n  );\r\n  const googleSheetsErrors = useStoreState(\r\n    (state) => state.googleSheetsModel.googleSheetsErrors\r\n  );\r\n  return {\r\n    appErrors,\r\n    layoutErrors,\r\n    googleSheetsErrors,\r\n  };\r\n};\r\n\r\ninterface UseAppProps {\r\n  appMode: AppMode;\r\n  rotationSpeed: number;\r\n  setRotationSpeed: ActionCreator<number>;\r\n  toggleAppMode: ThunkCreator<void, any>;\r\n  setRotateLayouts: ActionCreator<boolean>;\r\n  rotateLayouts: boolean;\r\n  addAppError: ActionCreator<AppError>;\r\n}\r\n\r\nexport const useApp = (): UseAppProps => {\r\n  const toggleAppMode = useStoreActions(\r\n    (actions) => actions.appModel.toggleAppMode\r\n  );\r\n  const rotationSpeed = useStoreState((state) => state.appModel.rotationSpeed);\r\n  const rotateLayouts = useStoreState((state) => state.appModel.rotateLayouts);\r\n  const setRotationSpeed = useStoreActions(\r\n    (actions) => actions.appModel.setRotationSpeed\r\n  );\r\n  const setRotateLayouts = useStoreActions(\r\n    (actions) => actions.appModel.setRotateLayouts\r\n  );\r\n  const addAppError = useStoreActions(\r\n    (actions) => actions.appModel.addAppError\r\n  );\r\n  const appMode = useStoreState((state) => state.appModel.appMode);\r\n\r\n  return {\r\n    appMode,\r\n    rotationSpeed,\r\n    setRotationSpeed,\r\n    toggleAppMode,\r\n    rotateLayouts,\r\n    setRotateLayouts,\r\n    addAppError,\r\n  };\r\n};\r\n\r\ninterface useLayoutProps {\r\n  activeCards: CardData[];\r\n  activeWidgets: WidgetData[];\r\n  setBufferLayout: ActionCreator<ReactGridLayout.Layouts>;\r\n  activeLayout: LayoutData | undefined;\r\n  deleteCard: ThunkCreator<string, any>;\r\n  addCard: ThunkCreator<CardAddEvent, any>;\r\n  swapCard: ThunkCreator<CardSwapEvent, any>;\r\n  addWidget: ThunkCreator<CardAddEvent, any>;\r\n  setActiveLayout: ActionCreator<LayoutData>;\r\n  setRandomLayout: ThunkCreator<void, any>;\r\n  clearCards: ThunkCreator<void, any>;\r\n  resetLayout: ThunkCreator<void, any>;\r\n}\r\n\r\nexport const useLayout = (): useLayoutProps => {\r\n  const activeCards = useStoreState((state) => state.appModel.activeCards);\r\n  const activeWidgets = useStoreState((state) => state.appModel.activeWidgets);\r\n\r\n  const swapCard = useStoreActions(\r\n    (actions) => actions.layoutsModel.swapCardContent\r\n  );\r\n\r\n  const addWidget = useStoreActions(\r\n    (actions) => actions.layoutsModel.addWidget\r\n  );\r\n\r\n  const deleteCard = useStoreActions(\r\n    (actions) => actions.layoutsModel.deleteCard\r\n  );\r\n  const addCard = useStoreActions((actions) => actions.layoutsModel.addCard);\r\n\r\n  const setBufferLayout = useStoreActions(\r\n    (actions) => actions.layoutsModel.setBufferLayout\r\n  );\r\n  // const set\r\n  const activeLayout = useStoreState(\r\n    (state) => state.layoutsModel.activeLayout\r\n  );\r\n\r\n  const setRandomLayout = useStoreActions(\r\n    (actions) => actions.layoutsModel.setRandomLayout\r\n  );\r\n\r\n  const setActiveLayout = useStoreActions(\r\n    (actions) => actions.layoutsModel.setActiveLayout\r\n  );\r\n  const clearCards = useStoreActions(\r\n    (actions) => actions.layoutsModel.clearCards\r\n  );\r\n\r\n  const resetLayout = useStoreActions(\r\n    (actions) => actions.layoutsModel.resetLayout\r\n  );\r\n\r\n  return {\r\n    activeCards,\r\n    activeWidgets,\r\n    setBufferLayout,\r\n    activeLayout,\r\n    deleteCard,\r\n    addCard,\r\n    swapCard,\r\n    addWidget,\r\n    setActiveLayout,\r\n    setRandomLayout,\r\n    clearCards,\r\n    resetLayout,\r\n  };\r\n};\r\nexport const useKeyboardShortcut = ({\r\n  keyCode,\r\n  action,\r\n  disabled,\r\n}: {\r\n  keyCode: number;\r\n  action: (e: KeyboardEvent) => void;\r\n  disabled: boolean;\r\n}) => {\r\n  React.useEffect(() => {\r\n    if (!disabled) {\r\n      enable();\r\n    }\r\n    return () => {\r\n      disable();\r\n    };\r\n  });\r\n\r\n  const enable = () => {\r\n    document.addEventListener(\"keydown\", handleAction);\r\n  };\r\n\r\n  const disable = () => {\r\n    document.removeEventListener(\"keydown\", handleAction);\r\n  };\r\n\r\n  const handleAction = (e: KeyboardEvent) => {\r\n    if (e.keyCode === keyCode) {\r\n      e.preventDefault();\r\n      action(e);\r\n    }\r\n  };\r\n\r\n  return { enable, disable };\r\n};\r\n\r\ntype AnyEvent = MouseEvent | TouchEvent;\r\n\r\nexport function useOnClickOutside<T extends HTMLElement = HTMLElement>(\r\n  ref: RefObject<T>,\r\n  handler: (event: AnyEvent) => void\r\n): void {\r\n  useEffect(() => {\r\n    const listener = (event: AnyEvent) => {\r\n      const el = ref?.current;\r\n\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!el || el.contains(event.target as Node)) {\r\n        return;\r\n      }\r\n\r\n      handler(event);\r\n    };\r\n\r\n    document.addEventListener(`mousedown`, listener);\r\n    document.addEventListener(`touchstart`, listener);\r\n\r\n    return () => {\r\n      // \\\r\n\r\n      document.removeEventListener(`mousedown`, listener);\r\n      document.removeEventListener(`touchstart`, listener);\r\n    };\r\n\r\n    // Reload only if ref or handler changes\r\n  }, [ref, handler]);\r\n}\r\n\r\nexport function useEffectOnce(effect: EffectCallback) {\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(effect, []);\r\n}\r\n\r\nexport function useInterval(callback: () => void, delay: number | null) {\r\n  const savedCallback = useRef(callback);\r\n\r\n  // Remember the latest callback if it changes.\r\n  useLayoutEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    // Don't schedule if no delay is specified.\r\n    // Note: 0 is a valid value for delay.\r\n    if (!delay && delay !== 0) {\r\n      return;\r\n    }\r\n\r\n    const id = setInterval(() => savedCallback.current(), delay);\r\n\r\n    return () => clearInterval(id);\r\n  }, [delay]);\r\n}\r\n\r\nfunction useEventListener<K extends keyof WindowEventMap>(\r\n  eventName: K,\r\n  handler: (event: WindowEventMap[K]) => void\r\n): void;\r\nfunction useEventListener<\r\n  K extends keyof HTMLElementEventMap,\r\n  T extends HTMLElement = HTMLDivElement\r\n>(\r\n  eventName: K,\r\n  handler: (event: HTMLElementEventMap[K]) => void,\r\n  element: RefObject<T>\r\n): void;\r\n\r\nfunction useEventListener<\r\n  KW extends keyof WindowEventMap,\r\n  KH extends keyof HTMLElementEventMap,\r\n  T extends HTMLElement | void = void\r\n>(\r\n  eventName: KW | KH,\r\n  handler: (\r\n    event: WindowEventMap[KW] | HTMLElementEventMap[KH] | Event\r\n  ) => void,\r\n  element?: RefObject<T>\r\n) {\r\n  // Create a ref that stores handler\r\n  const savedHandler = useRef<typeof handler>();\r\n\r\n  useEffect(() => {\r\n    // Define the listening target\r\n    const targetElement: T | Window = element?.current || window;\r\n    if (!(targetElement && targetElement.addEventListener)) {\r\n      return;\r\n    }\r\n\r\n    // Update saved handler if necessary\r\n    if (savedHandler.current !== handler) {\r\n      savedHandler.current = handler;\r\n    }\r\n\r\n    // Create event listener that calls handler function stored in ref\r\n    const eventListener: typeof handler = (event) => {\r\n      // eslint-disable-next-line no-extra-boolean-cast\r\n      if (!!savedHandler?.current) {\r\n        savedHandler.current(event);\r\n      }\r\n    };\r\n\r\n    targetElement.addEventListener(eventName, eventListener);\r\n\r\n    // Remove event listener on cleanup\r\n    return () => {\r\n      targetElement.removeEventListener(eventName, eventListener);\r\n    };\r\n  }, [eventName, element, handler]);\r\n}\r\n\r\n// See: https://usehooks-ts.com/react-hook/use-event-listener\r\n\r\ninterface Size {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport function useElementSize<T extends HTMLElement = HTMLDivElement>(): [\r\n  (node: T | null) => void,\r\n  Size\r\n] {\r\n  // Mutable values like 'ref.current' aren't valid dependencies\r\n  // because mutating them doesn't re-render the component.\r\n  // Instead, we use a state as a ref to be reactive.\r\n  const [ref, setRef] = useState<T | null>(null);\r\n  const [size, setSize] = useState<Size>({\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n\r\n  // Prevent too many rendering using useCallback\r\n  const handleSize = useCallback(() => {\r\n    setSize({\r\n      width: ref?.offsetWidth || 0,\r\n      height: ref?.offsetHeight || 0,\r\n    });\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [ref?.offsetHeight, ref?.offsetWidth]);\r\n\r\n  useEventListener(\"resize\", handleSize);\r\n\r\n  useLayoutEffect(() => {\r\n    handleSize();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [ref?.offsetHeight, ref?.offsetWidth]);\r\n\r\n  return [setRef, size];\r\n}\r\n\r\nexport function useHover<T extends HTMLElement = HTMLElement>(\r\n  elementRef: RefObject<T>\r\n): boolean {\r\n  const [value, setValue] = useState<boolean>(false);\r\n\r\n  const handleMouseEnter = () => setValue(true);\r\n  const handleMouseLeave = () => setValue(false);\r\n\r\n  useEventListener(\"mouseenter\", handleMouseEnter, elementRef);\r\n  useEventListener(\"mouseleave\", handleMouseLeave, elementRef);\r\n\r\n  return value;\r\n}\r\n\r\ninterface WindowSize {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport function useWindowSize(): WindowSize {\r\n  const [windowSize, setWindowSize] = useState<WindowSize>({\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n\r\n  const handleSize = () => {\r\n    setWindowSize({\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    });\r\n  };\r\n\r\n  useEventListener(\"resize\", handleSize);\r\n\r\n  // Set size at the first client-side load\r\n  useLayoutEffect(() => {\r\n    handleSize();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return windowSize;\r\n}\r\n","const TestShader1 = {\n    uniforms: {\n      time: { value: 0.0 }\n    },\n    vertexShader: `\n    vec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\n    vec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\n    vec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n  \n    float snoise(vec2 v) {\n        const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                            0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                            -0.577350269189626,  // -1.0 + 2.0 * C.x\n                            0.024390243902439); // 1.0 / 41.0\n        vec2 i  = floor(v + dot(v, C.yy) );\n        vec2 x0 = v -   i + dot(i, C.xx);\n        vec2 i1;\n        i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n        vec4 x12 = x0.xyxy + C.xxzz;\n        x12.xy -= i1;\n        i = mod289(i); // Avoid truncation effects in permutation\n        vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n            + i.x + vec3(0.0, i1.x, 1.0 ));\n  \n        vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n        m = m*m ;\n        m = m*m ;\n        vec3 x = 2.0 * fract(p * C.www) - 1.0;\n        vec3 h = abs(x) - 0.5;\n        vec3 ox = floor(x + 0.5);\n        vec3 a0 = x - ox;\n        m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n        vec3 g;\n        g.x  = a0.x  * x0.x  + h.x  * x0.y;\n        g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n        return 130.0 * dot(m, g);\n    }\n  \n  \n    \n  \n    uniform float u_time;\n    uniform vec2 u_randomisePosition;\n  \n    varying float vDistortion;\n    varying float xDistortion;\n    varying vec2 vUv;\n  \n    void main() {\n        vUv = uv;\n        vDistortion = snoise(vUv.xx * 3. - u_randomisePosition * 0.15);\n        xDistortion = snoise(vUv.yy * 1. - u_randomisePosition * 0.05);\n        vec3 pos = position;\n        pos.z += (vDistortion * 35.);\n        pos.x += (xDistortion * 25.);\n  \n        gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n    }\n    `,\n    fragmentShader: `\n    vec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\n    vec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\n    vec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n  \n    float snoise(vec2 v) {\n        const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                            0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                            -0.577350269189626,  // -1.0 + 2.0 * C.x\n                            0.024390243902439); // 1.0 / 41.0\n        vec2 i  = floor(v + dot(v, C.yy) );\n        vec2 x0 = v -   i + dot(i, C.xx);\n        vec2 i1;\n        i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n        vec4 x12 = x0.xyxy + C.xxzz;\n        x12.xy -= i1;\n        i = mod289(i); // Avoid truncation effects in permutation\n        vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n            + i.x + vec3(0.0, i1.x, 1.0 ));\n  \n        vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n        m = m*m ;\n        m = m*m ;\n        vec3 x = 2.0 * fract(p * C.www) - 1.0;\n        vec3 h = abs(x) - 0.5;\n        vec3 ox = floor(x + 0.5);\n        vec3 a0 = x - ox;\n        m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n        vec3 g;\n        g.x  = a0.x  * x0.x  + h.x  * x0.y;\n        g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n        return 130.0 * dot(m, g);\n    }\n  \n  \n  \n  \n  \n    vec3 rgb(float r, float g, float b) {\n      return vec3(r / 255., g / 255., b / 255.);\n  }\n  \n  vec3 rgb(float c) {\n      return vec3(c / 255., c / 255., c / 255.);\n  }\n  \n  uniform vec3 u_bg;\n  uniform vec3 u_bgMain;\n  uniform vec3 u_color1;\n  uniform vec3 u_color2;\n  uniform float u_time;\n  \n  varying vec2 vUv;\n  varying float vDistortion;\n  \n  void main() {\n      vec3 bg = rgb(u_bg.r, u_bg.g, u_bg.b);\n      vec3 c1 = rgb(u_color1.r, u_color1.g, u_color1.b);\n      vec3 c2 = rgb(u_color2.r, u_color2.g, u_color2.b);\n      vec3 bgMain = rgb(u_bgMain.r, u_bgMain.g, u_bgMain.b);\n  \n      float noise1 = snoise(vUv + u_time * 0.08);\n      float noise2 = snoise(vUv * 2. + u_time * 0.1);\n  \n      vec3 color = bg;\n      color = mix(color, c1, noise1 * 0.6);\n      color = mix(color, c2, noise2 * .4);\n  \n      color = mix(color, mix(c1, c2, vUv.x), vDistortion);\n  \n      float border = smoothstep(0.1, 0.6, vUv.x);\n  \n      color = mix(color, bgMain, 1. -border);\n  \n      gl_FragColor = vec4(color, 1.0);\n  }\n    `\n  }\n  \n  export default TestShader1","import type GoogleSheet from \"./interfaces/GoogleSheet\";\nimport type SheetId from \"./interfaces/SheetId\";\n\n// export function getSheet<T>(sheetId: SheetId): Promise<GoogleSheet<T>> {\n//   return new Promise<GoogleSheet<T>>(function (resolve, reject) {\n//     fetch(\n//       \"https://spreadsheets.google.com/feeds/list/1wQ1TGqnCTmaqqDak1rTRxPMSGSGLMilwrecf7TuqDGc/1/public/values?alt=json\"\n//     ).then((res) => {\n//       console.log(res);\n//       res.json();\n//     });\n//     // labeledCols(sheetId.key, sheetId.sheet_number)\n//     GetSheetDone.labeledCols(sheetId.key, sheetId.sheet_number)\n//       .then((sheet: GoogleSheet<T>) => {\n//         console.log(sheet);\n//         resolve(sheet);\n//       })\n//       .catch((error: unknown) => {\n//         console.error(\n//           `Error: ${error} fetching DOC_KEY ${sheetId.key}, sheet number ${sheetId.sheet_number}`\n//         );\n//       });\n//   });\n// }\n\nexport function formatDate(date: Date | undefined): string {\n  if (date) {\n    const d = new Date(date);\n    let month = \"\" + (d.getMonth() + 1);\n    let day = \"\" + d.getDate();\n    const year = d.getFullYear().toString().slice(2);\n\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n\n    return [month, day, year].join(\".\");\n  } else {\n    return \"faulty date\";\n  }\n}\n\n// String.prototype.toTitleCase = function () { return this.valueOf().toLowerCase().replace(this.valueOf()[0], this.valueOf()[0].toUpperCase()); }\nexport function toTitleCase(str: string) {\n  const words = str.split(\" \");\n  const title = words.map((w) => titleCapitilization(w)).join(\" \");\n  return title;\n}\nfunction titleCapitilization(str: string) {\n  const regex = /^[a-z]{0,1}|\\s\\w/gi;\n\n  str = str.toLowerCase();\n\n  str.match(regex)?.forEach((char) => {\n    str = str.replace(char, char.toUpperCase());\n  });\n\n  return str;\n}\n\nexport function randomIntFromInterval(min: number, max: number) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport function randomNumber(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\n// function\n\n// const toTitleCase = (str: string) => {\n//   const articles = ['a', 'an', 'the'];\n//   const conjunctions = ['for', 'and', 'nor', 'but', 'or', 'yet', 'so'];\n//   const prepositions = [\n//     'with', 'at', 'from', 'into','upon', 'of', 'to', 'in', 'for',\n//     'on', 'by', 'like', 'over', 'plus', 'but', 'up', 'down', 'off', 'near'\n//   ];\n\n//   // The list of spacial characters can be tweaked here\n//   const replaceCharsWithSpace = (str) => str.replace(/[^0-9a-z&/\\\\]/gi, ' ').replace(/(\\s\\s+)/gi, ' ');\n//   const capitalizeFirstLetter = (str) => str.charAt(0).toUpperCase() + str.substr(1);\n//   const normalizeStr = (str) => str.toLowerCase().trim();\n//   const shouldCapitalize = (word, fullWordList, posWithinStr) => {\n//     if ((posWithinStr == 0) || (posWithinStr == fullWordList.length - 1)) {\n//       return true;\n//     }\n\n//     return !(articles.includes(word) || conjunctions.includes(word) || prepositions.includes(word));\n//   }\n\n//   str = replaceCharsWithSpace(str);\n//   str = normalizeStr(str);\n\n//   let words = str.split(' ');\n//   if (words.length <= 2) { // Strings less than 3 words long should always have first words capitalized\n//     words = words.map(w => capitalizeFirstLetter(w));\n//   }\n//   else {\n//     for (let i = 0; i < words.length; i++) {\n//       words[i] = (shouldCapitalize(words[i], words, i) ? capitalizeFirstLetter(words[i], words, i) : words[i]);\n//     }\n//   }\n\n//   return words.join(' ');\n// }\n","import React, { useRef } from 'react'\nimport { Canvas, useFrame, } from '@react-three/fiber'\n\nimport TestShader1 from './TestShader1'\nimport { OrbitControls, PerspectiveCamera } from '@react-three/drei'\nimport * as THREE from 'three'\nimport {randomIntFromInterval} from \"../../utils\"\nvar randomisePosition = new THREE.Vector2(1, 2)\n\nfunction rgb(r, g, b) {\n  return new THREE.Vector3(r, g, b)\n}\n\nconst segmentsResolution = 45\n\nconst baseColors = {\n  pink: rgb(182, 9, 76),\n  brightPink: rgb(241, 3, 66),\n  darkPurple: rgb(42, 8, 56),\n  orange: rgb(244, 93, 31),\n  darkgrey: rgb(50,50,50),\n  lightgrey: rgb(150,150,150),\n  red: rgb(204, 0, 0)\n}\n\nconst uniforms = {\n  u_bg: { type: 'v3', value: baseColors.lightgrey },\n  u_bgMain: { type: 'v3', value: baseColors.lightgrey },\n  u_color1: { type: 'v3', value: baseColors.lightgrey },\n  u_color2: { type: 'v3', value: baseColors.lightgrey },\n  u_time: { type: 'f', value: 0 },\n  u_randomisePosition: { type: 'v2', value: randomisePosition }\n}\nconst R = function (x, y, t) {\n  return Math.floor(192 + 64 * Math.cos((x * x - y * y) / 300 + t))\n}\n\nconst G = function (x, y, t) {\n  return Math.floor(192 + 64 * Math.sin((x * x * Math.cos(t / 4) + y * y * Math.sin(t / 3)) / 300))\n}\n\nconst B = function (x, y, t) {\n  return Math.floor(192 + 64 * Math.sin(5 * Math.sin(t / 9) + ((x - 100) * (x - 100) + (y - 100) * (y - 100)) / 1100))\n}\n\nconst ShadedGeometry1 = ({ position }) => {\n  const shaderMaterialRef = useRef()\n  let t = 0\n  let j = 0\n  \n  let x = randomIntFromInterval(0,32)\n  let y = randomIntFromInterval(0, 32)\n  let vCheck = false\n\n  useFrame(({ clock }) => {\n    shaderMaterialRef.current.uniforms.u_randomisePosition.value = new THREE.Vector2(j, j)\n    shaderMaterialRef.current.uniforms.u_color1.value = new THREE.Vector3(R(x, y, t / 2), G(x, y, t / 2), B(x, y, t / 2))\n\n    shaderMaterialRef.current.uniforms.u_time.value = t\n    if (t % 0.1 === 0) {\n      if (vCheck === false) {\n        x -= 1\n        if (x <= 0) {\n          vCheck = true\n        }\n      } else {\n        x += 1\n        if (x >= 32) {\n          vCheck = false\n        }\n      }\n    }\n    // Increase t by a certain value every frame\n    j = j + 0.01\n    t = t + 0.01\n  })\n\n  return (\n    <mesh position={position} rotation={[THREE.MathUtils.degToRad(0), THREE.MathUtils.degToRad(0), THREE.MathUtils.degToRad(90)]}>\n      <planeGeometry attach=\"geometry\" args={[400, window.innerWidth / 2, segmentsResolution, segmentsResolution]} />\n      <shaderMaterial\n        attach=\"material\"\n        vertexShader={TestShader1.vertexShader}\n        fragmentShader={TestShader1.fragmentShader}\n        uniforms={uniforms}\n        ref={shaderMaterialRef}\n      />\n    </mesh>\n  )\n}\n\nconst BackgroundShader = () => {\n  const cam = useRef()\n  return (\n    <Canvas gl={{ antialias: false, alpha: false }}>\n      <PerspectiveCamera ref={cam} position={[0, 0, 0]} fov={75} aspect={window.innerWidth / window.innerHeight} near={0.1} far={1000} />\n      <ShadedGeometry1 position={[0, 0, -100]} faceResolution={100} />\n      <OrbitControls />\n    </Canvas>\n  )\n}\n\nexport default BackgroundShader\n","import React, { useEffect, useState } from \"react\";\nimport { AppMode } from \"../enums\";\nimport { useStoreState } from \"../hooks\";\nimport \"../css/background.css\";\nimport classNames from \"classnames\";\nimport BackgroundShader from \"./Background/BackgroundShader\";\nimport ReactDOM from \"react-dom\";\n\nconst Background = (): JSX.Element => {\n  const viewMode = useStoreState((state) => state.appModel.appMode);\n  const [size, setSize] = useState({\n    x: window.innerWidth,\n    y: window.innerHeight,\n  });\n\n  const [backgroundStyle, setBackgroundStyle] = useState({\n    backgroundColor: \"gray\",\n  } as React.CSSProperties);\n  useEffect(() => {\n    const isEditMode = viewMode == AppMode.EDIT;\n\n    const style = {\n      position: \"absolute\",\n      height: \"100vh\",\n      width: \"100vw\",\n      top: 0,\n      left: 0,\n      backgroundColor: isEditMode ? \"white\" : \"gray\",\n      transition: \"background-color 0.5s ease\",\n    } as React.CSSProperties;\n    setBackgroundStyle(style);\n  }, [viewMode]);\n\n  const backgroundClass = classNames(\"background-container\", {\n    \"background-container-display-mode\": viewMode == AppMode.DISPLAY,\n    \"background-container-edit-mode\": viewMode == AppMode.EDIT,\n  });\n\n  const bgFillSolid = {\n    position: \"absolute\",\n    height: \"100vh\",\n    width: \"100vw\",\n    top: 0,\n    left: 0,\n    backgroundColor: \"lightgrey\",\n    transition: \"background-color 0.5s ease\",\n  } as React.CSSProperties;\n\n  return ReactDOM.createPortal(\n    <div style={backgroundStyle} className={backgroundClass}>\n      {viewMode === AppMode.EDIT ? (\n        <div style={bgFillSolid}></div>\n      ) : (\n        <div className=\"background-container\">\n          <div className=\"shader-container\">\n            <BackgroundShader />\n          </div>\n          <div className=\"particle-container\"></div>\n        </div>\n      )}\n    </div>,\n    document.querySelector(\"#background\") as HTMLElement\n  );\n};\n\nexport default React.memo(Background);\n","interface AppConfig {\n  //time for the app to return to display mode after no interactions in edit mode\n  idleTime: number;\n  //link to the sheet containing the list of different card content\n  sheetLink: string;\n  //google sheets form link for saving new layouts\n  formLink: string;\n  gridRows: number;\n  gridCols: number;\n  gridBottomPadding: number;\n  //scale for regular web pages\n  defaultIframeScale: number;\n  //scale of content which meant for embedding, i.e. includes \"embed\" in the url\n  defaultEmbedScale: number;\n  //the default layout from your \"layouts\" google sheet to display\n  defaultLayoutName: string;\n  //\n  showModeSwitchButton: boolean;\n  widgetIds: string[];\n  useStaticLayout: boolean;\n  rotationDuration: number;\n}\n\nconst appConfig: AppConfig = {\n  idleTime: process.env.NODE_ENV === \"development\" ? 100000000 : 10000000,\n  sheetLink:\n    \"https://docs.google.com/spreadsheets/d/1BR1AQ5Zmt_o_0dOm9AvDht0G3Q6RXQUhX71Vi4H7tTU/edit#gid=0\",\n  defaultIframeScale: 0.5,\n  defaultEmbedScale: 1.0,\n  defaultLayoutName: \"PostersV3\",\n  formLink: \"https://forms.gle/nc3UQFtFUtSaF5mu6\",\n  widgetIds: [\"clock\", \"group label\", \"info\"],\n  gridRows: 6,\n  gridCols: 4,\n  showModeSwitchButton: false,\n  useStaticLayout: false,\n  gridBottomPadding: 50,\n  rotationDuration: 100000,\n};\n\nexport default appConfig;\n","import React from \"react\";\nimport \"../../css/pulsar.css\";\nimport { AddIcon } from \"evergreen-ui\";\ninterface PulsarProperties {}\n\nconst Pulsar = () => {\n  return (\n    <div className=\"pulsar\">\n      <AddIcon size={200}></AddIcon>\n      {/* <div className={\"ring\"}></div> */}\n      {/* <div className={\"ring\"}></div>\n      <div className={\"ring\"}></div>\n      <div className={\"ring\"}></div>\n      <div className={\"ring\"}></div> */}\n    </div>\n  );\n};\n\nexport default Pulsar;\n","import React, { FC, ReactNode, useEffect } from \"react\";\nimport { Droppable, DroppableProps } from \"react-beautiful-dnd\";\nimport { AddIcon } from \"evergreen-ui\";\nimport \"../../css/droppable.css\";\nimport Pulsar from \"../Shared/Pulsar\";\nimport { DndTypes } from \"../../enums\";\ninterface IXDrop extends Omit<DroppableProps, \"children\"> {\n  children: ReactNode;\n  cardType: DndTypes;\n  className?: string;\n}\n\n/**A droppable container. Wraps child widgets in a react-beautiful-dnd Droppable component, and renders a \"+\" if a draggable is dragging over the container */\nconst IXDrop: FC<IXDrop> = ({\n  children,\n  className,\n  cardType,\n  ...properties\n}) => {\n  // const droppableContainert className = {\"droppable \" + className}\n  return (\n    <Droppable {...properties} type={\"DEFAULT\"}>\n      {(provided, snapshot) => {\n        return (\n          <div\n            {...provided.innerRef}\n            ref={provided.innerRef}\n            className={\n              snapshot.isDraggingOver\n                ? \"droppable-hovered\" + \" \" + className\n                : \"droppable\" + \" \" + className\n            }\n          >\n            <div\n              className={\n                snapshot.isDraggingOver\n                  ? \"droppable-overlay droppable-overlay-visible\"\n                  : \"droppable-overlay droppable-overlay-hidden\"\n              }\n            >\n              <Pulsar />\n            </div>\n            {children}\n            {provided.placeholder}\n          </div>\n        );\n      }}\n    </Droppable>\n  );\n};\n\nexport default IXDrop;\n","import \"../css/iframeView.css\";\r\n\r\nimport classNames from \"classnames\";\r\nimport React, {\r\n  FC,\r\n  PropsWithChildren,\r\n  SyntheticEvent,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport ReactPlayer from \"react-player\";\r\n// import { TransformComponent, TransformWrapper } from \"react-zoom-pan-pinch\";\r\n\r\nimport CardData from \"../data_structs/CardData\";\r\nimport { CardView } from \"../enums\";\r\nimport {\r\n  CardErrorHandler,\r\n  CardLoadHandler,\r\n} from \"./CardLayout/ViewCard/ViewCard\";\r\n\r\ninterface IFrameViewProperties {\r\n  card: CardData;\r\n  scale: number;\r\n  cardView: CardView;\r\n  onError: CardErrorHandler;\r\n  onLoad: CardLoadHandler;\r\n}\r\n/**\r\n * Minimal warpper for an <iframe>. Can be toggled between a full screen, active view, and a regular card view.\r\n * @component\r\n * @example\r\n * const my_url = \"https://www.youtube.com/embed/tgbNymZ7vqY\";\r\n * return(\r\n *  <IFrameView src = {my_url}/>\r\n * )\r\n */\r\nconst IFrameView: FC<IFrameViewProperties> = ({\r\n  card,\r\n  scale,\r\n  cardView,\r\n  onError,\r\n  onLoad,\r\n}) => {\r\n  const [active, setActive] = useState(false);\r\n  const [valid, setIsValid] = useState(true);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  const iframeOverlayClass = classNames(\"iframe-view-overlay\", {\r\n    \"iframe-view-overlay-hidden\": isLoaded,\r\n    \"iframe-view-overlay-loading\": !isLoaded,\r\n  });\r\n\r\n  const indexFrameContainerClass = classNames(\"iframe-container\", {\r\n    \"iframe-container-hidden\": !valid,\r\n  });\r\n\r\n  useEffect(() => {\r\n    // console.log(cardView);\r\n  }, [cardView]);\r\n\r\n  const iframeStyle = {\r\n    border: \"none\",\r\n    transform: `scale(${scale})`,\r\n    width: `${100 * (1 / scale)}%`,\r\n    height: `${100 * (1 / scale)}%`,\r\n    transformOrigin: \"top left\",\r\n  } as React.CSSProperties;\r\n\r\n  const iframeActive = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    border: \"5px blue\",\r\n  } as React.CSSProperties;\r\n\r\n  const qrContainerStyle = {\r\n    width: \"100%\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    zIndex: 10,\r\n  } as React.CSSProperties;\r\n\r\n  const { src, contentType } = card;\r\n\r\n  return (\r\n    <div\r\n      className={indexFrameContainerClass}\r\n      onDoubleClick={() => {\r\n        setActive(!active);\r\n      }}\r\n    >\r\n      {contentType === \"video\" ? (\r\n        <ResponsivePlayer\r\n          onReady={(event) => {\r\n            setIsLoaded(true);\r\n          }}\r\n          src={card.src}\r\n        />\r\n      ) : contentType === \"image\" ? (\r\n        <img\r\n          onLoad={(event) => {\r\n            // setIsLoaded(true);\r\n            onLoad(event, card);\r\n          }}\r\n          onError={(event) => {\r\n            onError(event, card);\r\n          }}\r\n          // src={\"blablahblah\"}\r\n          src={src}\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            objectFit: cardView === CardView.PREVIEW ? \"contain\" : \"cover\",\r\n            objectPosition:\r\n              cardView === CardView.PREVIEW ? \"contain\" : \"center\",\r\n          }}\r\n        />\r\n      ) : (\r\n        <iframe\r\n          onLoad={(event) => {\r\n            setIsLoaded(true);\r\n          }}\r\n          src={src}\r\n          style={active ? iframeActive : iframeStyle}\r\n        ></iframe>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(IFrameView);\r\n\r\n// function propertiesAreEqual(\r\n//   previousProperties: Readonly<PropsWithChildren<IFrameViewProperties>>,\r\n//   nextProperties: Readonly<PropsWithChildren<IFrameViewProperties>>\r\n// ): boolean {\r\n//   if (previousProperties.src == nextProperties.src) {\r\n//     console.log(previousProperties.src);\r\n//     console.log(nextProperties.src);\r\n//     return false;\r\n//   }\r\n//   console.log(previousProperties.src);\r\n//   console.log(nextProperties.src);\r\n//   return true;\r\n// }\r\n\r\nconst ResponsivePlayer = ({\r\n  src,\r\n  onReady,\r\n}: {\r\n  src: string;\r\n  onReady: (e: ReactPlayer) => void;\r\n}): JSX.Element => {\r\n  return (\r\n    <div className=\"player-wrapper\">\r\n      <ReactPlayer\r\n        className=\"react-player\"\r\n        controls\r\n        height=\"100%\"\r\n        muted\r\n        onReady={onReady}\r\n        playing\r\n        url={src}\r\n        width=\"100%\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nclass Content extends React.PureComponent<{ src: string }> {\r\n  renderCount = 0;\r\n  render() {\r\n    this.renderCount++;\r\n    return (\r\n      <div\r\n        style={{\r\n          background: \"#afa\",\r\n          padding: 8,\r\n          borderRadius: 8,\r\n          display: \"inline-block\",\r\n        }}\r\n      >\r\n        {this.props.src}\r\n        Hello from{\" \"}\r\n        <span style={{ fontFamily: \"monospace\" }}>{\"<Content />\"}</span> ! I've\r\n        rendered {this.renderCount} times.\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import {\r\n  Button as EverGreenButton,\r\n  ButtonAppearance,\r\n  IntentTypes,\r\n} from \"evergreen-ui\";\r\nimport React from \"react\";\r\n\r\n/**\r\n * Wraps an Evergreen UI Button, providing it with an onClick property.\r\n */\r\n\r\ninterface ButtonProperties {\r\n  onClick: React.MouseEventHandler<HTMLDivElement>;\r\n  text?: string;\r\n  appearance?: ButtonAppearance;\r\n  className?: string;\r\n  iconBefore?: JSX.Element;\r\n  width?: number | string;\r\n  height?: number | string;\r\n  containerClass?: string;\r\n  style?: React.CSSProperties;\r\n  fontSize?: string;\r\n  intent?: IntentTypes;\r\n}\r\nconst Button = ({\r\n  onClick,\r\n  text,\r\n  appearance,\r\n  className,\r\n  iconBefore,\r\n  width,\r\n  height,\r\n  style,\r\n  containerClass,\r\n  fontSize,\r\n  intent,\r\n}: ButtonProperties): JSX.Element => {\r\n  return (\r\n    <div\r\n      className={containerClass}\r\n      onMouseUp={onClick}\r\n      style={{ width: width, height: \"100%\" }}\r\n    >\r\n      <EverGreenButton\r\n        appearance={appearance ?? \"default\"}\r\n        //use evergreen's default button with if no width is provided\r\n        className={className}\r\n        cursor=\"pointer\"\r\n        fontSize={fontSize}\r\n        height={height ?? undefined}\r\n        iconBefore={iconBefore ?? undefined}\r\n        intent={intent ?? \"none\"}\r\n        style={style}\r\n        width={width ?? undefined}\r\n      >\r\n        {text}\r\n      </EverGreenButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState } from \"react\";\r\nimport CardData from \"../../../data_structs/CardData\";\r\nimport \"../../../css/cardInfo.css\"\r\n/**\r\n * Formats text from a CardData object, including it's title and source url.\r\n * @component\r\n */\r\nconst CardInfo = ({\r\n  data,\r\n  className,\r\n}: {\r\n  data: CardData;\r\n  className: string;\r\n}): JSX.Element => {\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  const titleStyle = {\r\n    // fontSize: \"large\",\r\n  };\r\n  return (\r\n    <>\r\n      <div className={\"card-footer\"}>\r\n        <h2 style={titleStyle}>{data.title}</h2>\r\n        {/* <a>{data.src}</a> */}\r\n        <p>\r\n          Lorem Ipsum is simply dummy text of the printing and typesetting\r\n          industry. Lorem Ipsum has been the industry&apos standard dummy text\r\n          ever since the 1500s, when an unknown printer took a galley of type\r\n          and scrambled it to make a type specimen book{\" \"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardInfo;\r\n","import \"../../../css/deleteButton.css\";\n\nimport { DeleteIcon } from \"evergreen-ui\";\nimport React from \"react\";\n\ninterface DeleteButtonProperties {\n    action: ()=>void;\n    onClick: React.MouseEventHandler<HTMLDivElement>;\n  }\n  \n\nconst DeleteButton = ({ onClick, action }: DeleteButtonProperties): JSX.Element => {\n    return (\n      <div\n        className=\"delete-button-container\"\n        onMouseUp={onClick}\n        onClick={onClick}\n        onTouchEnd={(e)=>{action}}\n      >\n        <div\n          // onClick={onClick}\n        style={{display: \"flex\"}}\n        >\n          <DeleteIcon size={30} />\n        </div>\n      </div>\n    );\n  };\n  \n\n  export default DeleteButton","import React, { useRef } from \"react\";\nimport \"../../../css/card/settingsButton.css\";\nimport { CogIcon, Popover } from \"evergreen-ui\";\nimport SettingsMenu from \"./SettingsMenu\";\n\nconst SettingsButton = ({\n  onClick,\n}: {\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\n}): JSX.Element => {\n  const target = useRef();\n  return (\n    <div className=\"settings-button-container\" onMouseUp={onClick}>\n      <div\n        //   onClick={onClick}\n        style={{ display: \"flex\" }}\n      >\n        <CogIcon size={15} />\n      </div>\n    </div>\n  );\n};\n\nexport default SettingsButton;\n","import '../../../css/card/settingsMenu.css';\n\nimport { ActionCreator, Actions } from 'easy-peasy';\nimport {\n  ChevronLeftIcon,\n  ChevronRightIcon,\n} from \"evergreen-ui\";\nimport React, { useRef } from 'react';\n\nimport {useOnClickOutside} from \"../../../hooks\"\nimport Button from '../../Shared/Button';\nimport SettingsButton from './SettingsButton';\nimport { CardModel } from './ViewCard';\n\ninterface SettingsMenuProperties extends Pick<Actions<CardModel>, \"setScale\" | \"setBackgroundColor\" | \"setShowMenu\"> {\n  isShown: boolean;\n  scale: number;\n}\n\nconst SettingsMenu = ({\n  isShown,\n  setScale,\n  setBackgroundColor,\n  setShowMenu,\n  scale,\n  \n}: SettingsMenuProperties): JSX.Element => {\n  const onOutside = () =>{console.log(\"got click outisde\");}\n  const menuReference = useRef(null)\n  const handleClickOutside = useOnClickOutside(menuReference, ()=>{setShowMenu(false)})\n  const menuStyle = {\n    display: isShown ? \"flex\" : \"none\",\n  } as React.CSSProperties;\n\n  return (\n    <div className =\"menu-container\" ref = {menuReference} style={menuStyle} {...handleClickOutside}>\n        <InputRow title = \"Background Color:\">\n       <input\n        className=\"nodrag\"\n        defaultValue=\"rbga(0,0,0,0)\"\n        onChange={(e)=>{setBackgroundColor(e.target.value)}}\n        type=\"color\"\n       />\n        </InputRow>\n        <InputRow title = \"Scale: \">\n        <ScaleControls scale={scale} setScale={setScale} />\n        </InputRow>\n    </div>\n  );\n};\n\nconst InputRow = ({title, children}:{title: string, children: JSX.Element | JSX.Element[]}): JSX.Element=>{\n    return (\n        <div className=\"menu-input-row\">\n            {title}\n            {children}\n        </div>\n    )\n}\n\nconst ScaleControls = ({\n  setScale,\n  scale,\n}: {\n  setScale: ActionCreator<number>;\n  scale: number;\n}): JSX.Element => {\n  return (\n    <div className=\"scale-controls-grid\">\n      <Button\n        containerClass=\"scale-controls-left\"\n        height = {20}\n        iconBefore={<ChevronLeftIcon size={30} />}\n        // className={\"scale-controls-left\"}\n        onClick={() => {\n          setScale(-0.1);\n        }}\n        width={20}\n        // style={{ width: \"fill-available\" }}\n      />\n\n      <input onChange = {(e)=>{setScale(parseInt(e.target.value))}} style ={{width: 30}} defaultValue = {0.5} type=\"text\" value = {scale.toString().slice(0, 3)}/>\n      <Button\n        containerClass=\"scale-controls-right\"\n        height = {20}\n        iconBefore={<ChevronRightIcon size={30} />}\n        // className={\"scale-controls-right\"}\n        onClick={() => {\n          setScale(0.1);\n        }}\n        // style={{ width: \"-webkit-fill-available\" }}\n        width={20}\n      />\n    </div>\n  );\n};\n\nexport default SettingsMenu;\n","import \"../../../css/viewCard.css\";\r\n\r\nimport classNames from \"classnames\";\r\nimport type { Action, Computed, Thunk } from \"easy-peasy\";\r\nimport { action, computed, thunk, useLocalStore } from \"easy-peasy\";\r\nimport { InlineAlert } from \"evergreen-ui\";\r\nimport { motion } from \"framer-motion\";\r\nimport React, {\r\n  FC,\r\n  MouseEventHandler,\r\n  PropsWithChildren,\r\n  ReactNode,\r\n  RefObject,\r\n  SyntheticEvent,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { Layouts } from \"react-grid-layout\";\r\nimport QRCode from \"react-qr-code\";\r\n\r\nimport CardData from \"../../../data_structs/CardData\";\r\nimport WidgetData from \"../../../data_structs/WidgetData\";\r\nimport { AppMode, CardView, DndTypes } from \"../../../enums\";\r\nimport {\r\n  useApp,\r\n  useKeyboardShortcut,\r\n  useLayout,\r\n  useOnClickOutside,\r\n} from \"../../../hooks\";\r\nimport appConfig from \"../../../static/appConfig\";\r\nimport { randomNumber } from \"../../../utils\";\r\nimport Button from \"../../Shared/Button\";\r\nimport CardInfo from \"./CardInfo\";\r\nimport DeleteButton from \"./DeleteButton\";\r\nimport SettingsButton from \"./SettingsButton\";\r\nimport SettingsMenu from \"./SettingsMenu\";\r\n/**\r\n * Wraps each of the cards in the card layouts.\r\n * Click/Touch => Change the cards view mode\r\n * @component\r\n */\r\nexport interface CardModel {\r\n  cardBackgroundColor: string;\r\n  cardClass: Computed<CardModel, string>;\r\n  cardInfoClass: Computed<CardModel, string>;\r\n  cardType: DndTypes;\r\n  cardView: CardView;\r\n  handleCardPress: Thunk<CardModel>;\r\n  scale: number;\r\n  setBackgroundColor: Action<CardModel, string>;\r\n  setCardView: Action<CardModel, CardView>;\r\n  setScale: Action<CardModel, number>;\r\n  setShowMenu: Action<CardModel, boolean>;\r\n  showMenu: boolean;\r\n  toggleMenu: Action<CardModel>;\r\n  // transform: Computed<CardModel, string>;\r\n}\r\n\r\nexport type CardErrorHandler = (\r\n  e: SyntheticEvent<HTMLDivElement | HTMLIFrameElement | HTMLImageElement>,\r\n  card: CardData\r\n) => void;\r\nexport type CardLoadHandler = (\r\n  e: SyntheticEvent<HTMLDivElement | HTMLIFrameElement | HTMLImageElement>,\r\n  card: CardData\r\n) => void;\r\n\r\ninterface ViewCardProperties {\r\n  // activeKey?: React.MutableRefObject<string>;\r\n  cardId?: string;\r\n  cardType: DndTypes;\r\n  useAnimation: boolean;\r\n  //pass a set of information to all child components\r\n  children?: (\r\n    scale: number,\r\n    cardView: CardView,\r\n    onError: CardErrorHandler,\r\n    onLoad: CardLoadHandler\r\n  ) => ReactNode;\r\n  data?: CardData | WidgetData;\r\n  dataGrid?: Layouts;\r\n  layoutRef?: React.MutableRefObject<Layouts | null>;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst ViewCard: FC<ViewCardProperties> = ({\r\n  cardType,\r\n  children,\r\n  // activeKey,\r\n  cardId,\r\n  data,\r\n  onClick,\r\n  useAnimation,\r\n}: ViewCardProperties) => {\r\n  const cardContainerReference = useRef<HTMLDivElement>(null);\r\n  // const appMode = useStoreState((state) => state.appModel.appMode);\r\n  const { appMode, addAppError } = useApp();\r\n  const { deleteCard } = useLayout();\r\n  const [oldCardView, setCardView] = useState(CardView.GRID);\r\n  const [isError, setIsError] = useState(false);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [activeChildren, setActiveChildren] = useState<ReactNode>();\r\n\r\n  const [state, actions] = useLocalStore<CardModel>(\r\n    () => ({\r\n      cardView: CardView.GRID,\r\n      setCardView: action((state, cardView) => {\r\n        state.cardView = cardView;\r\n      }),\r\n      scale:\r\n        data?.contentType === \"embed\"\r\n          ? appConfig.defaultEmbedScale\r\n          : appConfig.defaultIframeScale,\r\n      setScale: action((state, scale) => {\r\n        state.scale += scale;\r\n      }),\r\n      cardBackgroundColor: \"\",\r\n      setBackgroundColor: action((state, color) => {\r\n        state.cardBackgroundColor = color;\r\n      }),\r\n      setShowMenu: action((state, show) => {\r\n        state.showMenu = show;\r\n      }),\r\n      toggleMenu: action((state) => {\r\n        state.showMenu = !state.showMenu;\r\n      }),\r\n      showMenu: false,\r\n      cardType: cardType,\r\n      cardClass: computed([(state) => state.cardView], (cardView) => {\r\n        const test = classNames(\"card\", {\r\n          \"card-edit\": appMode === AppMode.EDIT,\r\n          \"card-display\":\r\n            appMode === AppMode.DISPLAY && cardView == CardView.GRID,\r\n          \"card-preview\": cardView === CardView.PREVIEW,\r\n          \"card-fullscreen\": cardView === CardView.FULL_SCREEN,\r\n          \"card-empty\": appMode === AppMode.EDIT && !children,\r\n          \"card-empty-hidden\": !children && appMode == AppMode.DISPLAY,\r\n          \"card-locked\":\r\n            state.cardType === DndTypes.CLOCK && appMode === AppMode.EDIT,\r\n          // \"card-error\": data?.failed,\r\n        });\r\n        return test;\r\n      }),\r\n      cardInfoClass: computed((state) => {\r\n        return classNames(\"info\", {\r\n          \"info-hidden\": appMode === AppMode.EDIT,\r\n          \"info-display\": appMode === AppMode.DISPLAY,\r\n          \"info-preview\": state.cardView === CardView.PREVIEW,\r\n        });\r\n      }),\r\n      handleCardPress: thunk((actions, _, { getState }) => {\r\n        // console.log(\"HANDLED PRESS\");\r\n        // console.log(getState().cardClass);\r\n        // console.log(appMode);\r\n        const rootel = document.getElementById(\"root\") as HTMLDivElement;\r\n        if ((rootel.style.pointerEvents = \"all\")) {\r\n          rootel.style.pointerEvents = \"none\";\r\n        }\r\n\r\n        setTimeout(() => {\r\n          rootel.style.pointerEvents = \"all\";\r\n        }, 1000);\r\n        if (appMode === AppMode.DISPLAY && cardId != undefined) {\r\n          switch (getState().cardView) {\r\n            case CardView.GRID:\r\n              if (data?.contentType !== \"widget\") {\r\n                actions.setCardView(CardView.PREVIEW);\r\n                const el = document.getElementById(\r\n                  data?.id ?? \"view_card\"\r\n                ) as HTMLDivElement;\r\n                el.style.zIndex = \"1000\";\r\n              }\r\n              // console.log(data);\r\n\r\n              break;\r\n            case CardView.PREVIEW:\r\n              actions.setCardView(CardView.GRID);\r\n              const el = document.getElementById(\r\n                data?.id ?? \"view_card\"\r\n              ) as HTMLDivElement;\r\n              el.style.zIndex = \"0\";\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n      }),\r\n    }),\r\n    [appMode],\r\n    (s) => {\r\n      return { devTools: false };\r\n    }\r\n  );\r\n\r\n  const settingsMenuProperties = {\r\n    scale: state.scale,\r\n    setScale: actions.setScale,\r\n    setBackgroundColor: actions.setBackgroundColor,\r\n    setShowMenu: actions.setShowMenu,\r\n  };\r\n\r\n  const cardModalBackdrop = classNames(\"card-modal-backdrop\", {\r\n    \"card-modal-backdrop-active\":\r\n      oldCardView === CardView.PREVIEW || oldCardView === CardView.FULL_SCREEN,\r\n    \"card-modal-backdrop-inactive\": oldCardView === CardView.GRID,\r\n  });\r\n\r\n  const cardChildContainer = classNames(\"card-child-container\", {\r\n    \"card-child-container-preview\": state.cardView === CardView.PREVIEW,\r\n    \"card-child-container-fullscreen\": state.cardView === CardView.FULL_SCREEN,\r\n    \"card-child-container-grid\": state.cardView === CardView.GRID,\r\n  });\r\n\r\n  const { enable, disable } = useKeyboardShortcut({\r\n    keyCode: 27, //escape\r\n    action: () => {\r\n      if (\r\n        oldCardView === CardView.FULL_SCREEN ||\r\n        oldCardView === CardView.PREVIEW\r\n      ) {\r\n        setCardView(CardView.GRID);\r\n      }\r\n    },\r\n    disabled: false,\r\n  });\r\n\r\n  const showDeleteButton = (): JSX.Element | undefined => {\r\n    if (appMode == AppMode.EDIT && data) {\r\n      return (\r\n        <>\r\n          <DeleteButton\r\n            onClick={() => {\r\n              deleteCard(data.id);\r\n            }}\r\n            action={() => {\r\n              deleteCard(data.id);\r\n            }}\r\n          />\r\n          <SettingsButton\r\n            onClick={(e) => {\r\n              actions.toggleMenu();\r\n            }}\r\n          />\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderCardInfo = (): JSX.Element | undefined => {\r\n    if (\r\n      oldCardView === CardView.PREVIEW &&\r\n      data &&\r\n      data.contentType !== \"widget\"\r\n    ) {\r\n      return (\r\n        <CardInfo className={state.cardInfoClass} data={data as CardData} />\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderInternals = () => {\r\n    if (data?.contentType !== \"widget\") {\r\n      return [showDeleteButton(), renderCardInfo()];\r\n    } else {\r\n      return [showDeleteButton()];\r\n    }\r\n  };\r\n\r\n  const renderReturnButton = (): JSX.Element | undefined => {\r\n    if (oldCardView === CardView.FULL_SCREEN) {\r\n      return (\r\n        <ReturnButton\r\n          onClick={() => {\r\n            setCardView(CardView.GRID);\r\n          }}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  const containerReference = useRef(null);\r\n  useOnClickOutside(containerReference, (e) => {\r\n    e.preventDefault();\r\n    if (state.cardView == CardView.PREVIEW) {\r\n      actions.setCardView(CardView.GRID);\r\n    }\r\n  });\r\n\r\n  const qrContainerStyle = {\r\n    width: \"fit-content\",\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    zIndex: 1,\r\n    right: 0,\r\n    transform: \"translate(50%, 50%)\",\r\n  } as React.CSSProperties;\r\n\r\n  const renderQrCode = (): JSX.Element | undefined => {\r\n    if (state.cardView === CardView.PREVIEW && data?.contentType !== \"widget\") {\r\n      const cd = data as CardData;\r\n      return (\r\n        <div style={qrContainerStyle}>\r\n          <QRCode size={128} value={cd?.src ?? \"\"} />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const onError: CardErrorHandler = (event, card) => {\r\n    // addAppError({\r\n    //   errorType: \"failed to load content\",\r\n    //   description: \"description\",\r\n    // });\r\n    const { title, src } = card;\r\n    addAppError({\r\n      errorType: \"failed to load content\",\r\n      description: \"description\",\r\n      source: `Card: ${title}`,\r\n      link: src,\r\n    });\r\n    setIsError(true);\r\n\r\n    // console.log(\"Got Error\");\r\n  };\r\n\r\n  const onLoad: CardLoadHandler = (event, card) => {\r\n    setAnimationVariant(\"loaded\");\r\n    setIsLoaded(true);\r\n    // console.log(\"Got Error\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (cardContainerReference.current) {\r\n      const cardGrandParent =\r\n        cardContainerReference.current?.parentElement?.parentElement;\r\n      // console.log(cardGrandParent);\r\n      if (cardGrandParent) {\r\n        cardGrandParent.id = data?.id ?? \"view_card\";\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const jj = useMemo(() => {\r\n    if (cardContainerReference.current) {\r\n      const rect = cardContainerReference.current.getBoundingClientRect();\r\n      return calculateTransform2(rect);\r\n    }\r\n    // setVx(calculateTransform2(rect));\r\n  }, [state.cardView]);\r\n\r\n  useEffect(() => {\r\n    if (state.cardView === CardView.PREVIEW) {\r\n      setAnimationVariant(\"preview\");\r\n    }\r\n    if (state.cardView === CardView.GRID) {\r\n      setAnimationVariant(\"none\");\r\n    }\r\n    // if (state.)\r\n  }, [state.cardView]);\r\n\r\n  const variants = {\r\n    active: {\r\n      opacity: 1,\r\n      transition: {\r\n        delay: randomNumber(0.4, 0.5),\r\n        duration: 0.5,\r\n      },\r\n    },\r\n    preview: {\r\n      opacity: 1,\r\n      // x: jj ? jj[0] : 0,\r\n      // y: jj ? jj[1] : 0,\r\n      // scale: 1.5,\r\n      transition: {\r\n        duration: 0.2,\r\n        // ease: \"linear\",\r\n      },\r\n      // zIndex: 1000,\r\n    },\r\n    normal: {\r\n      opacity: 1,\r\n    },\r\n    none: {\r\n      opacity: 1,\r\n      x: 0,\r\n      y: 0,\r\n    },\r\n    error: {\r\n      // border: \"1px solid red\",\r\n      opacity: [1, 0],\r\n      backgroundColor: \"red\",\r\n      // transition:\r\n    },\r\n    loaded: {\r\n      // border: \"1px solid red\",\r\n      outline: [`0px solid green`, `4px solid green`, `0px solid green`],\r\n      opacity: [0, 1, 1],\r\n      transition: {\r\n        delay: randomNumber(0.4, 0.5),\r\n        duration: 0.5,\r\n      },\r\n      x: 0,\r\n      y: 0,\r\n      // backgroundColor: \"green\",\r\n      // transition:\r\n    },\r\n    in: {\r\n      // opacity: 1,\r\n      opacity: [0, 1],\r\n      transition: {\r\n        // delay: randomNumber(0.4, 0.5),\r\n        duration: 0.5,\r\n      },\r\n      // x: 0,\r\n      // y: 0,\r\n      // backgroundColor: \"green\",\r\n      // transition:\r\n    },\r\n    out: {\r\n      y: randomNumber(-50, 50),\r\n      // x: 0,\r\n      opacity: [1, 0],\r\n      // opacity: 0,\r\n      transition: {\r\n        delay: randomNumber(0.4, 1.5),\r\n        duration: 0.5,\r\n      },\r\n      // backgroundColor: \"green\",\r\n      // transition:\r\n    },\r\n  };\r\n\r\n  const [animationVariant, setAnimationVariant] = useState(\"none\");\r\n  // const [animate, setAnimate] = useState(\"in\");\r\n  useEffect(() => {\r\n    // console.log(children);\r\n    if (children) {\r\n      if (useAnimation) {\r\n        setAnimationVariant(\"out\");\r\n        setTimeout(() => {\r\n          setAnimationVariant(\"in\");\r\n          setActiveChildren(\r\n            children(state.scale, state.cardView, onError, onLoad)\r\n          );\r\n        }, 500);\r\n      } else {\r\n        setAnimationVariant(\"none\");\r\n        setActiveChildren(\r\n          children(state.scale, state.cardView, onError, onLoad)\r\n        );\r\n      }\r\n    }\r\n  }, [children]);\r\n  // }, [children, state.cardView]);\r\n\r\n  return (\r\n    //receives a drag objects\r\n    <>\r\n      <motion.div\r\n        exit={{ opacity: 0, x: -300 }}\r\n        ref={cardContainerReference}\r\n        layoutId=\"viewcard\"\r\n        className={state.cardClass}\r\n        style={{\r\n          transformOrigin: \"center\",\r\n          willChange: \"transform\",\r\n          height: \"100%\",\r\n          // transform: state.transform,\r\n          backgroundColor: state.cardBackgroundColor,\r\n          // opacity: 0,\r\n          // opacity: 1,\r\n          // opacity: 1,\r\n        }}\r\n        initial={appMode === AppMode.EDIT ? false : true}\r\n        variants={variants}\r\n        // initial={false}\r\n        // intial={\"loaded\"}\r\n        animate={animationVariant}\r\n        // animate={\r\n        //   isError && state.cardView === CardView.GRID\r\n        //     ? \"error\"\r\n        //     : isLoaded && state.cardView === CardView.GRID\r\n        //     ? \"loaded\"\r\n        //     : state.cardView === CardView.PREVIEW\r\n        //     ? \"preview\"\r\n        //     : appMode == AppMode.DISPLAY\r\n        //     ? \"active\"\r\n        //     : \"normal\"\r\n        // }\r\n      >\r\n        {children && (\r\n          <div className={cardModalBackdrop}>\r\n            <div\r\n              className={cardChildContainer}\r\n              onMouseUp={() => {\r\n                actions.handleCardPress();\r\n                if (onClick) {\r\n                  onClick();\r\n                }\r\n              }}\r\n              ref={containerReference}\r\n            >\r\n              {/* {renderQrCode()} */}\r\n              {renderInternals()}\r\n              {activeChildren}\r\n              {/* {children(state.scale, state.cardView, onError, onLoad)} */}\r\n              <SettingsMenu\r\n                {...settingsMenuProperties}\r\n                isShown={state.showMenu}\r\n              />\r\n            </div>\r\n            {renderReturnButton()}\r\n          </div>\r\n        )}\r\n      </motion.div>\r\n    </>\r\n  );\r\n};\r\n// class App extends React.Component<{ message: string }, { count: number }> {\r\n\r\nconst calculateTransform2 = (boundingBox: DOMRect): [number, number] => {\r\n  const windowWidth = window.innerWidth;\r\n  const windowHeight = window.innerHeight;\r\n  const vw = window.innerWidth / 100;\r\n  const vh = window.innerWidth / 100;\r\n  // const futureWidth = vw * 60;\r\n  // const futureHeight = vh * 40;\r\n  const futureWidth = boundingBox.width * 1.5;\r\n  const futureHeight = boundingBox.height * 1.5;\r\n\r\n  const centeredX = windowWidth / 2 - futureWidth / 2;\r\n  const centeredY = windowHeight / 2 - futureHeight / 2;\r\n\r\n  const currentX = boundingBox.x;\r\n  const currentY = boundingBox.y;\r\n  let differenceX = centeredX - currentX;\r\n  let differenceY = centeredY - currentY;\r\n\r\n  if (centeredX < currentX) {\r\n    differenceX = currentX - centeredX;\r\n    differenceX *= -1;\r\n  }\r\n  if (centeredY < currentY) {\r\n    differenceY = currentY - centeredY;\r\n    differenceY *= -1;\r\n  }\r\n  return [differenceX, differenceY];\r\n  // return `translate(${differenceX}px, ${differenceY}px)`;\r\n};\r\n\r\nconst setGpZindex = (\r\n  refdiv: RefObject<HTMLDivElement> | null,\r\n  index: number\r\n): void => {\r\n  if (refdiv) {\r\n    const cardGrandParent = refdiv.current?.parentElement?.parentElement;\r\n    // console.log(cardGrandParent);\r\n    if (cardGrandParent) {\r\n      cardGrandParent.style.zIndex = index.toString();\r\n    }\r\n  }\r\n};\r\n// const setGpZindex1 = (\r\n//   refdiv: HTMLDivElement,\r\n//   zIndex: number\r\n// ): void => {\r\n//   if (refdiv) {\r\n//       cardGrandParent.style.zIndex = zIndex.toString();\r\n//   }\r\n// };\r\n//depending on the view state of the card, change its html output node\r\n\r\nconst FailureNotice = ({ errors }: { errors: string[] }): JSX.Element => {\r\n  return (\r\n    <div className=\"failure-notice-container\">\r\n      {errors.map((error, index) => (\r\n        <div className=\"failure-message\" key={index}>\r\n          <InlineAlert intent=\"danger\" key={index}>\r\n            {error}\r\n          </InlineAlert>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ReturnButton = ({\r\n  onClick,\r\n}: {\r\n  onClick: MouseEventHandler<HTMLDivElement>;\r\n}): JSX.Element => {\r\n  return (\r\n    <div className=\"return-button-container\">\r\n      <Button onClick={onClick} text=\"Return\" width={300} />\r\n    </div>\r\n  );\r\n};\r\nfunction propertiesAreEqual(\r\n  previousProperties: Readonly<PropsWithChildren<ViewCardProperties>>,\r\n  nextProperties: Readonly<PropsWithChildren<ViewCardProperties>>\r\n): boolean {\r\n  return true;\r\n}\r\n\r\nexport default React.memo(ViewCard);\r\n","import IXDrop from \"../DragAndDrop/IXDrop\";\nimport React, { useState } from \"react\";\nimport ViewCard from \"./ViewCard/ViewCard\";\nimport { DndTypes } from \"../../enums\";\nimport { Layout, Layouts, Responsive, WidthProvider } from \"react-grid-layout\";\nimport \"../../css/cardLayout.css\";\nimport appConfig from \"../../static/appConfig\";\nimport { GridPosition } from \"../../interfaces/GridPosition\";\n\ntype GuideGridSettings = Partial<ReactGridLayout.ResponsiveProps>;\n\nexport const GuideGrid = ({\n  gridSettings,\n}: {\n  gridSettings: GuideGridSettings;\n}): JSX.Element => {\n  const ResponsiveGridLayout = WidthProvider(Responsive);\n  const guideCards = generateFilledLayout(\n    appConfig.gridRows,\n    appConfig.gridCols\n  );\n  const justCardNames = guideCards.lg.map((c) => c.i);\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        zIndex: 0,\n      }}\n    >\n      <ResponsiveGridLayout\n        {...gridSettings}\n        className=\"card-layout\"\n        layouts={guideCards}\n        resizeHandles={[]}\n        preventCollision={true}\n        isDraggable={false}\n        isResizable={false}\n      >\n        {justCardNames.map((p, index) => {\n          return (\n            <div key={p}>\n              <IXDrop\n                key={index}\n                droppableId={p}\n                cardType={DndTypes.PLACEHOLDER}\n                className={\"droppable-guide\"}\n              >\n                <ViewCard\n                  key={p}\n                  cardId={p}\n                  cardType={DndTypes.PLACEHOLDER}\n                  useAnimation={false}\n                ></ViewCard>\n              </IXDrop>\n            </div>\n          );\n        })}\n      </ResponsiveGridLayout>\n    </div>\n  );\n};\nexport default React.memo(GuideGrid);\n\nfunction generateFilledLayout(rows: number, cols: number): Layouts {\n  const allGridSpots: GridPosition[] = [];\n  for (let y = 0; y < rows; y++) {\n    for (let x = 0; x < cols; x++) {\n      allGridSpots.push({ x: x, y: y });\n    }\n  }\n\n  const emptyCards = allGridSpots.map((rr) => {\n    return {\n      x: rr.x,\n      y: rr.y,\n      w: 1,\n      h: 1,\n      i: `empty_card_[${rr.x}, ${rr.y}]`,\n      minW: 1,\n      maxW: 1,\n      minH: 1,\n      maxH: 1,\n      static: false,\n      // static: true,\n      isDraggable: false,\n      isResizable: false,\n      resizeHandles: [],\n    } as Layout;\n  });\n\n  //TODO: MORE FUNCTIONAL SOLUTION\n  // const filled = layout.concat(emptyCards);\n  //pop off the first two positions where the clock is\n  // emptyCards.shift();\n  // emptyCards.shift();\n  return {\n    lg: emptyCards,\n    md: emptyCards,\n    sm: emptyCards,\n    xs: emptyCards,\n    xxs: emptyCards,\n  };\n}\n","import \"../../css/clock.css\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n/**\r\n * Simple clock widget for displaying the current time.\r\n * @component\r\n */\r\nconst Clock = (): JSX.Element => {\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  const containerStyle = {\r\n    height: \"100%\",\r\n    padding: \".25em\",\r\n    width: \"100%\",\r\n    // fontSize: \"max(4vw, 10px)\",\r\n    fontSize: \"400%\",\r\n    // fontSize: \"4vw\",\r\n    fontWeight: 600,\r\n    color: \"white\",\r\n    boxSizing: \"border-box\",\r\n  } as React.CSSProperties;\r\n\r\n  useEffect(() => {\r\n    const timerID = setInterval(() => tick(), 1000);\r\n    return function cleanup() {\r\n      clearInterval(timerID);\r\n    };\r\n  });\r\n\r\n  function tick(): void {\r\n    setDate(new Date());\r\n  }\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <div>Data Experience Lab</div>\r\n      <div>\r\n        {date.toLocaleTimeString(\"en-IT\", { hour12: true, timeStyle: \"short\" })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Clock;\r\n","import React, { useState, useEffect, useRef } from \"react\";\nimport WidgetData from \"../../../data_structs/WidgetData\";\nimport { DndTypes } from \"../../../enums\";\nimport Clock from \"../../Widgets/Clock\";\nimport ViewCard from \"./ViewCard\";\n\nconst WidgetWrapper = ({\n  widget,\n  scale,\n}: {\n  widget: WidgetData;\n  scale: number;\n}): JSX.Element => {\n  const renderWidget = (widgetData: WidgetData): JSX.Element => {\n    let widget = <div></div>;\n\n    switch (widgetData.id) {\n      case \"clock\":\n        widget = (\n          <ViewCard\n            useAnimation={false}\n            cardType={DndTypes.CLOCK}\n            onClick={() => {}}\n          >\n            {(scale) => {\n              return <Clock />;\n            }}\n          </ViewCard>\n        );\n\n        break;\n      case \"info\":\n        widget = (\n          <ViewCard useAnimation={false} cardType={DndTypes.CLOCK}>\n            {(scale) => {\n              return <div></div>;\n            }}\n          </ViewCard>\n        );\n        break;\n    }\n    console.log(widget);\n    return widget;\n  };\n\n  return <>{renderWidget(widget)}</>;\n};\n\nexport default WidgetWrapper;\n","import \"../../css/cardLayout.css\";\nimport \"../../css/libs/reactDraggable.css\";\n\nimport { Variants } from \"framer-motion\";\nimport React, { useEffect } from \"react\";\nimport { Layout, Responsive, WidthProvider } from \"react-grid-layout\";\n\nimport CardData from \"../../data_structs/CardData\";\nimport LayoutData from \"../../data_structs/LayoutData\";\nimport WidgetData from \"../../data_structs/WidgetData\";\nimport { AppMode, DndTypes } from \"../../enums\";\nimport appConfig from \"../../static/appConfig\";\nimport IXDrop from \"../DragAndDrop/IXDrop\";\nimport IFrameView from \"../IFrameView\";\nimport GuideGrid from \"./GuideGrid\";\nimport ViewCard from \"./ViewCard/ViewCard\";\nimport WidgetWrapper from \"./ViewCard/WidgetWrapper\";\n\nexport const CardLayout = ({\n  layout,\n  appMode,\n  width,\n  height,\n  margin,\n  onLayoutChange,\n  cards,\n  widgets,\n  isDraggable,\n  isResizable,\n  useControls,\n}: {\n  layout: LayoutData;\n  appMode: AppMode;\n  width: number;\n  height: number;\n  margin: [number, number];\n  onLayoutChange?: (l: Layout[]) => void;\n  cards: CardData[];\n  widgets: WidgetData[];\n  isDraggable?: boolean;\n  isResizable?: boolean;\n  useControls?: boolean;\n}): JSX.Element => {\n  const activeLayout = layout;\n\n  useEffect(() => {\n    console.log(activeLayout?.id);\n  }, [activeLayout?.id]);\n\n  console.log(activeLayout);\n\n  const ResponsiveGridLayout = WidthProvider(Responsive);\n\n  const sharedGridSettings = {\n    breakpoints: { lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 },\n    cols: {\n      lg: appConfig.gridCols,\n      md: appConfig.gridCols,\n      sm: appConfig.gridCols,\n      xs: appConfig.gridCols,\n      xxs: appConfig.gridCols,\n    },\n    rowHeight: (height - appConfig.gridBottomPadding) / appConfig.gridRows,\n    margin: margin,\n    preventCollision: true,\n    compactType: null,\n  };\n\n  return (\n    <div>\n      <div className=\"card-grid-container\">\n        <ResponsiveGridLayout\n          {...sharedGridSettings}\n          className=\"card-layout\"\n          isDraggable={isDraggable ?? false}\n          isResizable={isResizable ?? false}\n          layouts={activeLayout ? activeLayout.layout : { lg: [] }}\n          onDragStart={(layout, oldItem, newItem, placeholder, e, element) => {\n            const previousStyle = element.style;\n            previousStyle.border = \"2px solid cyan\";\n            element.style.border = \"4px solid cyan\";\n          }}\n          onLayoutChange={onLayoutChange}\n          preventCollision\n          resizeHandles={[\"se\"]}\n          verticalCompact\n        >\n          {[...cards, ...widgets].map(\n            (card: CardData | WidgetData, index: number) => {\n              return (\n                <div className=\"card-container\" draggable key={card.id}>\n                  <IXDrop\n                    cardType={DndTypes.IFRAME}\n                    className=\"droppable-card\"\n                    droppableId={card.id}\n                    key={index}\n                  >\n                    <ViewCard\n                      cardId={index.toString()}\n                      cardType={DndTypes.IFRAME}\n                      data={card}\n                      useAnimation={card.contentType !== \"widget\"}\n                    >\n                      {card.contentType !== \"widget\"\n                        ? (scale, cardView, onError, onLoad) => {\n                            const contentCard = card as CardData;\n                            return (\n                              <IFrameView\n                                card={contentCard}\n                                scale={scale}\n                                cardView={cardView}\n                                onError={onError}\n                                onLoad={onLoad}\n                              />\n                            );\n                          }\n                        : (scale) => {\n                            return (\n                              <WidgetWrapper\n                                widget={card as WidgetData}\n                                scale={scale}\n                              />\n                            );\n                          }}\n                      {}\n                    </ViewCard>\n                  </IXDrop>\n                </div>\n              );\n            }\n          )}\n        </ResponsiveGridLayout>\n      </div>\n      <GuideGrid gridSettings={sharedGridSettings} />\n    </div>\n  );\n};\nexport default React.memo(CardLayout);\n\nconst cardContainerClass = (card: CardData, appMode: AppMode): string => {\n  const isFailed = card.failed;\n  if (isFailed && appMode === AppMode.DISPLAY) {\n    return \"card-container-hidden\";\n  } else if (isFailed && appMode === AppMode.EDIT) {\n    return \"card-container-error\";\n  } else {\n    return \"card-container\";\n  }\n};\n","import React from \"react\";\nimport { DragDropContext, DropResult } from \"react-beautiful-dnd\";\n\nimport { DragSource } from \"../../enums\";\nimport { useLayout, useStoreState } from \"../../hooks\";\nimport { CardAddEvent, CardSwapEvent } from \"../../interfaces/CardEvents\";\nimport { GridPosition } from \"../../interfaces/GridPosition\";\n\n/**\n * Handles all functionality for dragging and dropping content into the layout\n */\n\nconst stringToGridPos = (cardId: string): GridPosition => {\n  //card id's of empty cards is of \"empty_card_[x, y]\" format\n\n  const posString = cardId.split(\"[\")[1];\n  //x,y]\n  const x = Number.parseInt(posString.charAt(0));\n  //x\n  const y = Number.parseInt(posString.charAt(3));\n  //y\n  return {\n    x: x,\n    y: y,\n  } as GridPosition;\n};\n\nconst cardIsEmpty = (cardId: string): boolean => {\n  return cardId.startsWith(\"empty\");\n};\n\nconst AppDragContext = ({\n  children,\n}: {\n  children: JSX.Element | JSX.Element[];\n}): JSX.Element => {\n  const { addCard, swapCard, addWidget, setActiveLayout } = useLayout();\n\n  const externalLayoutsState = useStoreState(\n    (state) => state.layoutsModel.externalLayouts\n  );\n\n  const onDragEnd = (response: DropResult) => {\n    if (response.destination?.droppableId == response.source?.droppableId)\n      return;\n    const { source, destination, draggableId } = response;\n    console.log(\n      `dragged from ${draggableId} to ${\n        destination?.droppableId\n      } current title: ${\"yes\"}`\n    );\n\n    if (!destination) return;\n    switch (source.droppableId) {\n      case DragSource.CARD_TABLE:\n        if (destination.droppableId) {\n          if (cardIsEmpty(destination.droppableId)) {\n            const cardPos = stringToGridPos(destination.droppableId);\n            const addEvent = {\n              sourceId: draggableId,\n              targetPosition: cardPos,\n            } as CardAddEvent;\n            addCard(addEvent);\n            console.log(\"dropped onto an empty card, adding card\");\n          } else {\n            swapCard({\n              sourceId: draggableId,\n              targetId: destination.droppableId,\n            } as CardSwapEvent);\n          }\n        }\n        break;\n      case DragSource.WIDGETS_TABLE:\n        // console.log(draggableId);\n        // console.log(destination.droppableId);\n        // console.log(\"DRAGGING FROM WIDGETS TABLE\");\n        const cardPos = stringToGridPos(destination.droppableId);\n        const addEvent = {\n          sourceId: draggableId,\n          targetPosition: cardPos,\n        } as CardAddEvent;\n        addWidget(addEvent);\n        break;\n      case DragSource.LAYOUT_TABLE:\n        const newLayout = externalLayoutsState.filter(\n          (l) => l.id === draggableId\n        )[0];\n        setActiveLayout(newLayout);\n        break;\n      default:\n        console.log(\"got unkown drag source\");\n    }\n  };\n\n  return <DragDropContext onDragEnd={onDragEnd}>{children}</DragDropContext>;\n};\n\nexport default AppDragContext;\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst FlexRow = ({\r\n  children,\r\n  padding,\r\n}: {\r\n  children: JSX.Element | JSX.Element[];\r\n  padding?: string;\r\n}): JSX.Element => {\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"row\", padding: padding }}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlexRow;\r\n","import React, { FC, ReactNode } from \"react\";\nimport { Draggable, DraggableProps } from \"react-beautiful-dnd\";\nimport { DndTypes } from \"../../enums\";\n\ninterface DraggableRowProperties extends Omit<DraggableProps, \"children\"> {\n  dndType: DndTypes;\n  className?: string;\n  children: ReactNode;\n  dragAll?: boolean;\n}\n\n/**\n * A draggable table row. Used for dragging card content or layouts into the grid.\n */\nconst DraggableRow = ({\n  dndType,\n  className,\n  children,\n  dragAll,\n  ...properties\n}: DraggableRowProperties) => {\n  // console.log(React.isValidElement(children));sss\n  // console.log(props);\n  if (!React.isValidElement(children)) return <div />;\n  // const child = React.memo(children, []);\n  return (\n    <Draggable {...properties}>\n      {(provided, snapshot) => {\n        const dragHandleProperties = dragAll ? provided.dragHandleProps : {};\n\n        return (\n          <>\n            <tr\n              className={className}\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...dragHandleProperties}\n            >\n              {React.cloneElement(children, { provided })}\n            </tr>\n            <tr\n              style={{\n                display: snapshot.isDragging ? \"table-row\" : \"none\",\n                backgroundColor: snapshot.isDragging ? \"green\" : \"none\",\n              }}\n            >\n              {React.cloneElement(children, { provided })}\n            </tr>\n          </>\n        );\n      }}\n    </Draggable>\n  );\n};\n\nDraggableRow.defaultProps = {\n  dragAll: true,\n};\n\nexport default React.memo(DraggableRow);\n","import React, { useState } from \"react\";\nimport { toTitleCase } from \"../../utils\";\n/**\n * <th> component with a arrow indicating the filter direction\n */\nconst TableHeader = ({\n  headerTitle,\n  setFilter,\n  setFilterDirection,\n  className,\n  activeFilter,\n}: {\n  headerTitle: string;\n  setFilterDirection: (direction: boolean) => void;\n  setFilter: (filter: string) => void;\n  className?: string;\n  activeFilter: string | undefined;\n}): JSX.Element => {\n\n  const [sortDirection, setSortDirection] = useState(true);\n\n  const showSortArrow =  headerTitle === activeFilter\n\n  return (\n    <th\n      className={className ?? \"editor-panel-table-header\"}\n      onClick={() => {\n        setFilter(headerTitle);\n        setSortDirection(!sortDirection);\n        setFilterDirection(sortDirection);\n      }}\n    >\n      {toTitleCase(headerTitle)}\n      {showSortArrow && sortDirection\n        ? \"▲\"\n        : showSortArrow && !sortDirection\n        ? \"▼\"\n        : \"\"}\n    </th>\n  );\n};\n\nexport default TableHeader;\n\n","import { AnimatePresence, motion } from \"framer-motion\";\nimport React from \"react\";\nimport { createPortal } from \"react-dom\";\n\nimport { useWindowSize } from \"../../hooks\";\n\nconst PopOver = ({\n  x,\n  y,\n  children,\n  visible,\n  width,\n  height,\n}: {\n  x: number;\n  y: number;\n  children: JSX.Element | JSX.Element[];\n  visible: boolean;\n  width?: number;\n  height?: number;\n}): JSX.Element => {\n  // console.log(x, y);\n  const windowSize = useWindowSize();\n  const scale = 0.4;\n  return createPortal(\n    // <AnimatePresence>\n    <>\n      {visible && (\n        <motion.div\n          animate={{\n            opacity: 1,\n            transition: {\n              delay: 0.1,\n              duration: 0.5,\n              ease: \"circIn\",\n            },\n          }}\n          exit={{ opacity: 0 }}\n          style={{\n            backgroundColor: \"white\",\n            boxShadow: \"0 8px 32px 0 rgba(49, 49, 49, 0.37)\",\n            width: width ?? windowSize.width * scale,\n            height: height ?? windowSize.height * scale,\n            position: \"absolute\",\n            x: x,\n            y: y,\n            transformBox: \"view-box\",\n            transformOrigin: \"top left\",\n            borderRadius: \".5em\",\n            overflow: \"hidden\",\n          }}\n        >\n          {children}\n        </motion.div>\n      )}\n    </>,\n    // </AnimatePresence>,\n    document.querySelector(\"#popup-container\") as HTMLDivElement\n  );\n};\n\nexport default React.memo(PopOver);\n","import \"../../../../css/table.css\";\n\nimport { SearchInput } from \"evergreen-ui\";\nimport fuzzysort from \"fuzzysort\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\n\nimport CardData from \"../../../../data_structs/CardData\";\nimport { DndTypes, DragSource } from \"../../../../enums\";\nimport {\n  useHover,\n  useLayout,\n  useStoreActions,\n  useStoreState,\n} from \"../../../../hooks\";\nimport { formatDate } from \"../../../../utils\";\nimport IXDrop from \"../../../DragAndDrop/IXDrop\";\nimport Button from \"../../../Shared/Button\";\nimport FlexRow from \"../../../Shared/FlexRow\";\nimport XDrag from \"../../../DragAndDrop/DraggableRow\";\nimport TableHeader from \"../../TableHeader\";\nimport ReactImageFallback from \"react-image-fallback\";\nimport ReactTooltip from \"react-tooltip\";\nimport { createPortal } from \"react-dom\";\nimport { motion } from \"framer-motion\";\nimport PopOver from \"../../PopOver\";\nimport { Column, Table, SortDirection, AutoSizer } from \"react-virtualized\";\nimport imageThumbnail from \"image-thumbnail\";\n\n/**\n * Content tab display a list of the availalbe cards, and search bar for quickly finding cards by their title.\n */\n\n//TODO: REFACTOR\n\nconst ContentsTab = (): JSX.Element => {\n  const availableCards = useStoreState(\n    (state) => state.appModel.availableCards\n  );\n\n  const { clearCards, resetLayout } = useLayout();\n\n  const [filterKey, setFilterKey] = useState<string | undefined>();\n  const [filterDirection, setFilterDirection] = useState(true);\n  const [cardItems, setCardItems] = useState(availableCards);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [filteredCards, setFilteredCards] =\n    useState<CardData[]>(availableCards);\n\n  //use search input to filter cards\n  useEffect(() => {\n    if (0 < searchTerm.length) {\n      const sortResult = fuzzysort.go(\n        searchTerm,\n        cardItems.map((c) => c.title)\n      );\n      const aboveThreshholdCardTitles: string[] = sortResult.map(\n        (s) => s.target\n      );\n      const filtered = cardItems.filter((c) =>\n        aboveThreshholdCardTitles.includes(c.title)\n      );\n      setFilteredCards(filtered);\n    } else {\n      setFilteredCards(cardItems);\n    }\n  }, [searchTerm, cardItems]);\n\n  //sort values by column attribute, if filterDirection is true, sort descending, else sort ascending\n  useEffect(() => {\n    const key = filterKey as keyof CardData;\n    const clone = [...availableCards];\n\n    const sortedItems = clone.sort((a, b) => {\n      const aText = a[key];\n      const bText = b[key];\n      if (aText && bText) {\n        if (aText < bText) {\n          return -1;\n        }\n        if (bText < aText) {\n          return 1;\n        }\n      }\n      return 0;\n    });\n    !filterDirection ? sortedItems.reverse() : null;\n    setCardItems(sortedItems);\n  }, [filterKey, availableCards, filterDirection]);\n\n  const contentTabHeader = \"contents-table-header\";\n  return (\n    <div className=\"contents-tab-container\">\n      <FlexRow padding=\"0.5em\">\n        <SearchInput\n          onChange={(event: React.FormEvent<HTMLInputElement>) =>\n            setSearchTerm(event.currentTarget.value)\n          }\n          placeholder=\"search title\"\n          width=\"80%\"\n        />\n        <Button\n          appearance=\"default\"\n          intent=\"danger\"\n          onClick={(event) => {\n            resetLayout();\n          }}\n          text=\"Reset Layout\"\n        />\n        <Button\n          appearance=\"minimal\"\n          intent=\"danger\"\n          onClick={(event) => {\n            clearCards();\n          }}\n          // width={\"10%\"}\n          text=\"Clear All\"\n        />\n      </FlexRow>\n      <IXDrop\n        cardType={DndTypes.CLOCK}\n        className=\"table-container\"\n        droppableId={DragSource.CARD_TABLE}\n        isDropDisabled\n      >\n        <table className=\"contents-tab-table\">\n          <tbody>\n            <tr>\n              {[\"title\", \"author\", \"added\"].map((s, index) => {\n                return (\n                  <TableHeader\n                    activeFilter={filterKey}\n                    className={contentTabHeader}\n                    headerTitle={s}\n                    key={index}\n                    setFilter={setFilterKey}\n                    setFilterDirection={setFilterDirection}\n                  ></TableHeader>\n                );\n              })}\n            </tr>\n          </tbody>\n        </table>\n        <Scrollbars autoHeight autoHeightMax={319} autoHeightMin={100}>\n          <table style={{ padding: \"2em\" }}>\n            <tbody>\n              {filteredCards.map((card, index) => {\n                const {\n                  added,\n                  src,\n                  author,\n                  interaction,\n                  sourceId,\n                  isActive,\n                  title,\n                } = card;\n                return (\n                  <XDrag\n                    className={\n                      isActive ? \"content-row-active\" : \"content-row-inactive\"\n                    }\n                    dndType={DndTypes.CARD_ROW}\n                    draggableId={sourceId}\n                    index={index}\n                    isDragDisabled={isActive}\n                    key={index.toString()}\n                  >\n                    <>\n                      <td>\n                        <TitleWithIcon card={card} />\n                      </td>\n                      <td>{author}</td>\n                      <td>{formatDate(added)}</td>\n                    </>\n                  </XDrag>\n                );\n              })}\n            </tbody>\n          </table>\n        </Scrollbars>\n      </IXDrop>\n    </div>\n  );\n};\n\n/**\n * Fetches a favicon for a card and displays the cards title\n */\nconst TitleWithIcon = ({ card }: { card: CardData }): JSX.Element => {\n  const { src, id } = card;\n  const [position, setPosition] = useState([0, 0]);\n  const [hovered, setHovered] = useState(false);\n\n  useEffect(() => {\n    console.log(position);\n  }, [position]);\n\n  // const tb = useMemo(() => {\n  //   if (card.contentType === \"image\") {\n  //     imageThumbnail(card.src)\n  //       .then((thumbnail: any) => {\n  //         console.log(thumbnail);\n  //       })\n  //       .catch((err: any) => console.error(err));\n  //   }\n  // }, []);\n\n  // const tb = useMemo(() => {\n  //   if (card.contentType === \"image\") {\n  //     return generate(card.src, { x: 50, y: 50 }, 50);\n  //   }\n  // }, []);\n  // console.log(tb);\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      <div\n        id={id}\n        onMouseEnter={(e) => {\n          const { pageX, pageY } = e;\n          setPosition([pageX, pageY]);\n          setHovered(true);\n        }}\n        onMouseLeave={(e) => {\n          setHovered(false);\n        }}\n        style={{ display: \"flex\", width: 20 }}\n      >\n        <ReactImageFallback\n          className={\n            card.isActive ? \"row-favicon-active\" : \"row-favicon-inactive\"\n          }\n          fallbackImage={`${process.env.PUBLIC_URL}/question_mark.svg`}\n          src={\n            card.contentType === \"image\"\n              ? src\n              : `https://s2.googleusercontent.com/s2/favicons?domain_url=${card.src}`\n          }\n          // onError={(e)=>}\n          style={{ width: \"100%\", maxWidth: 20 }}\n        />\n      </div>\n\n      <PopOver\n        x={position[0]}\n        y={position[1]}\n        visible={hovered && card.contentType === \"image\"}\n        // title={`Image Preview ${card.title}`}\n      >\n        <ReactImageFallback\n          style={{ width: \"100%\", height: \"100%\", objectFit: \"contain\" }}\n          fallbackImage={`${process.env.PUBLIC_URL}/question_mark.svg`}\n          // onError={(e)=>}\n          src={\n            card.contentType === \"image\"\n              ? src\n              : `https://s2.googleusercontent.com/s2/favicons?domain_url=${card.src}`\n          }\n        />\n      </PopOver>\n      <div\n        style={{\n          marginTop: \"auto\",\n          marginBottom: \"auto\",\n          textAlign: \"left\",\n          paddingLeft: \"1em\",\n        }}\n      >\n        {card.title}\n      </div>\n    </div>\n  );\n};\n\nexport default ContentsTab;\n\n// function ThumbnailGenerator() {\n\nfunction generate(\n  imgSrc: string,\n  thumbDims: { x: number; y: number },\n  compression: number\n): Promise<string> {\n  const resizeCanvas = document.createElement(\"canvas\") as HTMLCanvasElement;\n\n  [resizeCanvas.width, resizeCanvas.height] = [thumbDims.x, thumbDims.y];\n  const ctx = resizeCanvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\n  const tmp = new Image();\n  // tmp.setAttribute()\n  tmp.setAttribute(\"crossorigin\", \"anonymous\");\n  const ret = new Promise((resolve) => {\n    tmp.onload = () => {\n      ctx.drawImage(tmp, 0, 0, thumbDims.x, thumbDims.y);\n      resolve(resizeCanvas.toDataURL(\"image/jpeg\", compression || 0.5));\n    };\n  });\n  tmp.src = imgSrc;\n  return ret as Promise<string>;\n}\n\n// function generateBatch(imgSrcs: string[], thumbDims: {x: number, y: number}[], compression: number) {\n//   return Promise.all(imgSrcs.map(img =>generate(img, thumbDims, compression)));\n// }\n\n// return this;\n// }\n\n// const Popover = (): JSX.Element =>{\n\n//   return(\n//     <div>hello</div>\n//   )\n\n// }\n","enum IFrameLoadError {\n  CROSS_ORIGIN = \"CROSS_ORIGIN\",\n}\n\nenum IFrameLoadWarning {\n  MALFORMED_URL = \"MALFORMED_URL\",\n}\n\nclass IFrameValidator {\n  url!: string;\n  errors!: IFrameLoadError[];\n  warnings!: IFrameLoadWarning[];\n  constructor(url: string) {\n    this.errors = [];\n    this.warnings = [];\n    this.url = url;\n  }\n  validate(event: React.SyntheticEvent<HTMLIFrameElement, Event>): void {\n    console.log(this.errors);\n    const malformedUrlCheckArray = validURL(this.url);\n    this.warnings.push(...malformedUrlCheckArray);\n    console.log(malformedUrlCheckArray);\n  }\n  isValid(): boolean {\n    return this.errors.length == 0;\n  }\n  errorMessages(): string[] {\n    let errors: string[] = [];\n    this.errors.map((e) => {\n      switch (e) {\n        case IFrameLoadError.CROSS_ORIGIN:\n          errors.push(\n            `Blocked a frame with origin ${this.url}; from accessing a cross-origin frame.`\n          );\n          break;\n        default:\n          console.log(\"error did not match an error enum\");\n      }\n    });\n    return errors;\n  }\n}\n\nexport default IFrameValidator;\n\n\n\nfunction validURL(str: string): IFrameLoadWarning[] {\n  let warningsArray = [];\n  const pattern = new RegExp(\n    \"^(https?:\\\\/\\\\/)?\" + // protocol\n      \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|\" + // domain name\n      \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\n      \"(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*\" + // port and path\n      \"(\\\\?[;&a-z\\\\d%_.~+=-]*)?\" + // query string\n      \"(\\\\#[-a-z\\\\d_]*)?$\",\n    \"i\"\n  ); // fragment locator\n  if (!pattern.test(str)) {\n    warningsArray.push(IFrameLoadWarning.MALFORMED_URL);\n  }\n  return warningsArray;\n}\n","import React from \"react\";\nimport \"../../css/panel.css\";\nimport { AddIcon } from \"evergreen-ui\";\n\ninterface PanelProperties{\n    children: JSX.Element | JSX.Element[]\n    padding?: string;\n    flexDirection?: \"column\" | \"row\"; \n    className?: string;\n\n}\n\nconst Panel = ({children, className, padding, flexDirection}:PanelProperties): JSX.Element => {\n  const panelStyle = {\n      padding: padding??\"0em\",\n      flexDirection: flexDirection??\"column\"\n  } as React.CSSProperties\n\n  return (\n    <div style = {panelStyle} className={\"panel\"+ \" \" + className??\"\"}>\n        {children}\n    </div>\n  );\n};\n\nexport default Panel;\n","import React, { useState, useRef, useEffect } from \"react\";\n//TODO: UNIFY MODAL CSS\nimport \"../../css/howToUse.css\";\nimport \"../../css/popup.css\";\n\nconst Modal = ({\n  children,\n  active,\n  containerClassName,\n  onClose,\n  backdropOpacity,\n}: {\n  active: boolean;\n  children: JSX.Element | JSX.Element[];\n\n  onClose: () => void;\n  backdropOpacity?: number;\n  containerClassName?: string;\n}): JSX.Element => {\n  return (\n    <div\n      className={\"modal-container\"}\n      style={{\n        display: active ? \"flex\" : \"none\",\n        width: \"100vw\",\n        height: \"100vh\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <MyBackdrop onClose={onClose} backdropOpacity={backdropOpacity ?? 0} />\n      <div style={{ zIndex: 1000 }} className={containerClassName}>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n\ninterface BackdropProperties {\n  backdropOpacity: number;\n  onClose: () => void;\n}\nconst MyBackdrop = ({ onClose, backdropOpacity }: BackdropProperties) => {\n  return (\n    <div\n      onMouseUp={onClose}\n      style={{ opacity: backdropOpacity, zIndex: 200 }}\n      className={\"pop-up-background\"}\n    ></div>\n  );\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport ReactDom from \"react-dom\";\nimport \"../../../../css/googleFormPopup.css\";\nimport { Pane, Dialog } from \"evergreen-ui\";\nimport Modal from \"../../../Shared/Modal\";\nimport formEmbedUrl from \"../../../../static/formEmbedUrl\";\nimport { useLayout, useStoreState } from \"../../../../hooks\";\nimport classNames from \"classnames\";\nimport Button from \"../../../Shared/Button\";\nimport { ClipboardIcon, InlineAlert, CrossIcon, Heading } from \"evergreen-ui\";\nimport \"../../../../css/copyField.css\";\nimport Scrollbars from \"react-custom-scrollbars\";\n\n/**\n * Modal popup for displaying cards when in preview mode. Displays on top of the CardLayout, and renders\n * to <div id=\"google-form-popup\"></div> in index.html.\n * @component\n */\n\ninterface GoogleFormPopupProperties {\n  visible: boolean;\n  onCloseComplete: () => void;\n}\n\nconst GoogleFormPopup = ({\n  visible,\n  onCloseComplete,\n}: GoogleFormPopupProperties): JSX.Element => {\n  const layoutState = useStoreState((state) => state.layoutsModel.activeLayout);\n  const ls = useStoreState((state) => state.layoutsModel.layoutsString);\n  // console.log(layoutState?.extendedLayout);\n  // console.log(layoutState?.extendedLayout.layoutSettings);\n\n  const [isShown, setIsShown] = useState(visible);\n  const [isCopiedJSON, setIsCopiedJson] = useState(false);\n  console.log(\"HELLO IM HERE\");\n  useEffect(() => {\n    console.log(ls);\n  }, [ls]);\n  // const [layoutString, setLayoutString] = useState(\n  //   JSON.stringify(layoutState?.layout)\n  // );\n\n  // const [layoutString, setLayoutString] = useState(\n  //   JSON.stringify(layoutState?.extendedLayout)\n  // );\n  const { activeLayout } = useLayout();\n  const layoutString = useStoreState((state) =>\n    JSON.stringify(state.layoutsModel.activeLayout)\n  );\n  const bufferLayout = useStoreState((state) =>\n    JSON.stringify(state.layoutsModel.bufferLayout)\n  );\n  useEffect(() => {\n    // console.log(state.layoutsModel.activeLayout);\n    // activeLayout?.layout;\n    // bufferLayout;\n    console.log(bufferLayout);\n  }, [bufferLayout]);\n  useEffect(() => {\n    // console.log(state.layoutsModel.activeLayout);\n    // activeLayout?.layout;\n    // bufferLayout;\n    console.log(layoutString);\n  }, [layoutString]);\n  // useEffect(() => {\n  //   // console.log(state.layoutsModel.activeLayout);\n  //   activeLayout?.layout;\n  // }, [activeLayout?.layout]);\n  console.log(layoutString);\n  const copyFieldContainerClass = classNames(\"copy-field-container\", {\n    \"copy-field-container-closed\": isCopiedJSON,\n  });\n\n  return ReactDom.createPortal(\n    <Modal\n      onClose={onCloseComplete}\n      active={isShown}\n      containerClassName=\"google-form-popup\"\n      backdropOpacity={0.5}\n    >\n      <div className={\"google-form-popup-inner-container\"}>\n        <Heading color={isCopiedJSON ? \"green\" : \"\"}>\n          1. Press the Copy Button\n        </Heading>\n        <Heading>\n          {isCopiedJSON\n            ? \"2. Fill out the form, and paste the copied text into the Content field, then submit\"\n            : \"\"}\n        </Heading>\n        <div className={copyFieldContainerClass}>\n          <CopyField\n            onCopy={(e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n              setIsCopiedJson(true);\n            }}\n            onCloseComplete={onCloseComplete}\n            text={layoutString}\n          />\n        </div>\n      </div>\n      {isCopiedJSON ? <GoogleFormIframe src={formEmbedUrl} /> : <></>}\n    </Modal>,\n    document.querySelector(\"#google-form-popup\") as HTMLElement\n  );\n};\nexport default GoogleFormPopup;\n//TODO: IMPROVE INHERITANCE OF BUTTONS\nconst CopyField = ({\n  text,\n  onCloseComplete,\n  onCopy,\n  isCurrentClipBoardContent,\n}: {\n  text: string;\n  isCurrentClipBoardContent?: boolean;\n  onCloseComplete: () => void;\n  onCopy: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n}): JSX.Element => {\n  const [isClipBoardCorrect, setIsClipBoardCorrect] = useState(false);\n  const [isCopied, setIsCopied] = useState(false);\n\n  const copyFieldClass = classNames(\"copy-field\", {\n    \"copy-field-success\": isCopied && isClipBoardCorrect,\n    \"copy-field-failure\": !isCopied && !isClipBoardCorrect,\n  });\n\n  useEffect(() => {\n    navigator.clipboard\n      .readText()\n      .then((clipboardText) => {\n        if (text === clipboardText) {\n          setIsClipBoardCorrect(true);\n          setIsCopied(true);\n        } else {\n          setIsCopied(false);\n          setIsClipBoardCorrect(false);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Failed to read clipboard contents:\", error);\n      });\n  }, [text]);\n  return (\n    <div>\n      <Button\n        iconBefore={<ClipboardIcon />}\n        text={\"Copy Layout To Clip Board\"}\n        onClick={(e) => {\n          navigator.clipboard.writeText(text);\n          setIsCopied(true);\n          onCopy(e);\n        }}\n        width={\"100%\"}\n        intent={\"success\"}\n        appearance={\"primary\"}\n      />\n      {!isClipBoardCorrect ? (\n        <InlineAlert intent=\"warning\">\n          Current clipboard content is out of sync with current layout, copy the\n          layout to clipboard again.\n        </InlineAlert>\n      ) : (\n        <InlineAlert intent=\"success\">Clipboard is current</InlineAlert>\n      )}\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          paddingTop: \"1em\",\n        }}\n      >\n        <Button\n          iconBefore={<CrossIcon />}\n          text={\"Return\"}\n          onClick={onCloseComplete}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst GoogleFormIframe = ({ src }: { src: string }): JSX.Element => {\n  return (\n    <iframe\n      src={src}\n      className={\"google-form-iframe\"}\n      width={\"100%\"}\n      frameBorder={0}\n      marginHeight={0}\n      marginWidth={0}\n      // style={{ height: \"60em\" }}\n    ></iframe>\n  );\n};\n","const formEmbedUrl =\n  \"https://docs.google.com/forms/d/e/1FAIpQLSeKP2imQv_UCj4qrGNk7mT6Rzz83F30IvEl8ZFdERIdzSnvig/viewform?usp=sf_link\";\n\nexport default formEmbedUrl;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  useStoreState,\n  useStoreActions,\n  useWindowSize,\n  useApp,\n} from \"../../../../hooks\";\nimport IXDrop from \"../../../DragAndDrop/IXDrop\";\nimport { AppMode, DndTypes, DragSource } from \"../../../../enums\";\nimport { StatusIndicator } from \"evergreen-ui\";\nimport { formatDate } from \"../../../../utils\";\nimport \"../../../../css/table.css\";\nimport PopOver from \"../../PopOver\";\nimport CardLayout from \"../../../CardLayout/CardLayout\";\nimport LayoutData from \"../../../../data_structs/LayoutData\";\n/**\n * Displays the available layouts.\n */\n\nconst LayoutTable = (): JSX.Element => {\n  const externalLayoutsState = useStoreState(\n    (state) => state.layoutsModel.externalLayouts\n  );\n  const activeLayoutState = useStoreState(\n    (state) => state.layoutsModel.activeLayout\n  );\n\n  const setActiveLayoutAction = useStoreActions(\n    (actions) => actions.layoutsModel.setActiveLayout\n  );\n  return (\n    <div>\n      <IXDrop\n        className={\"table-container\"}\n        droppableId={DragSource.LAYOUT_TABLE}\n        isDropDisabled={false}\n        cardType={DndTypes.CLOCK}\n      >\n        <table>\n          <tbody>\n            <tr>\n              <th>Title</th>\n              <th>Date Added</th>\n              <th>Author</th>\n            </tr>\n          </tbody>\n        </table>\n        <table>\n          <tbody>\n            {externalLayoutsState.map((l, index) => {\n              const { id, title, author, added } = l;\n              return (\n                <tr key={index} onClick={(e) => setActiveLayoutAction(l)}>\n                  <td\n                    key={index}\n                    style={{ display: \"flex\", justifyContent: \"center\" }}\n                  >\n                    {id === activeLayoutState?.id && (\n                      <StatusIndicator color=\"success\" />\n                    )}\n                    <LayoutTitle layout={l} />\n                  </td>\n                  <td>{formatDate(added)}</td>\n                  <td>{author}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </IXDrop>\n    </div>\n  );\n};\n\nexport default LayoutTable;\n\nconst LayoutTitle = ({ layout }: { layout: LayoutData }): JSX.Element => {\n  const [hovered, setHovered] = useState(false);\n\n  const [position, setPosition] = useState([0, 0]);\n  const { title } = layout;\n  const { width, height } = useWindowSize();\n  const scale = 0.5;\n  const { appMode } = useApp();\n\n  const layoutCardIds = layout.sources();\n  const layoutWidgetsIds = layout.widgets();\n\n  const cards = useStoreState((state) =>\n    state.appModel.availableCards.filter((c) => layoutCardIds.includes(c.src))\n  );\n\n  const widgets = useStoreState((state) =>\n    state.appModel.availableWidgets.filter((c) =>\n      layoutWidgetsIds.includes(c.id)\n    )\n  );\n\n  // const appMod\n  return (\n    <div>\n      <div\n        onMouseEnter={(e) => {\n          const { pageX, pageY } = e;\n          setPosition([pageX, pageY]);\n          setHovered(true);\n        }}\n        onMouseLeave={(e) => {\n          setHovered(false);\n        }}\n        style={{\n          textDecoration: hovered ? \"underline\" : \"\",\n        }}\n      >\n        {title}\n      </div>\n\n      {appMode === AppMode.EDIT && hovered && (\n        <PopOver\n          width={width * scale}\n          height={height * scale}\n          x={position[0]}\n          y={position[1]}\n          visible={hovered}\n        >\n          <div\n            style={{\n              transform: `scale(${scale})`,\n              transformOrigin: \"inherit\",\n              height,\n              width,\n            }}\n          >\n            <CardLayout\n              width={width}\n              height={height}\n              layout={layout}\n              margin={[20, 20]}\n              appMode={AppMode.DISPLAY}\n              onLayoutChange={(l) => {}}\n              cards={cards}\n              widgets={widgets}\n            />\n          </div>\n        </PopOver>\n      )}\n    </div>\n  );\n};\n","import { AddIcon } from \"evergreen-ui\";\nimport React, { FC, useEffect, useState } from \"react\";\n\nimport { useStoreActions, useStoreState } from \"../../../../hooks\";\nimport formEmbedUrl from \"../../../../static/formEmbedUrl\";\nimport Button from \"../../../Shared/Button\";\nimport Panel from \"../../../Shared/Panel\";\nimport GoogleFormPopup from \"./GoogleFormPopup\";\nimport LayoutTable from \"./LayoutTable\";\n\nconst LayoutTab = (): JSX.Element => {\n  const layoutState = useStoreState((state) => state.layoutsModel.activeLayout);\n  const bufferState = useStoreState((state) => state.layoutsModel.bufferLayout);\n  const [showNewLayoutPopup, setShowNewLayoutPopup] = useState(false);\n  const fetchCardDataGoogleSheetThunk = useStoreActions(\n    (actions) => actions.googleSheetsModel.fetchAppGoogleSheet\n  );\n  const fetchTopLevelSheetThunk = useStoreActions(\n    (actions) => actions.googleSheetsModel.fetchTopLevelSheet\n  );\n  const [layoutString, setLayoutString] = useState(JSON.stringify(layoutState));\n  useEffect(() => {\n    setLayoutString(JSON.stringify(bufferState));\n  }, [layoutState, bufferState]);\n\n  const newLayoutPopup = (): JSX.Element => {\n    return showNewLayoutPopup ? (\n      <GoogleFormPopup\n        onCloseComplete={() => {\n          //reload the layouts after closing the add layout dialog\n          fetchTopLevelSheetThunk();\n          // fetchCardDataGoogleSheetThunk()\n          setShowNewLayoutPopup(false);\n        }}\n        visible={showNewLayoutPopup}\n      />\n    ) : (\n      <></>\n    );\n  };\n  return (\n    <Panel>\n      <div\n        style={{\n          display: \"flex\",\n          // justifyContent: \"center\",\n          width: \"100%\",\n          padding: \".5em\",\n          justifyContent: \"flex-start\",\n        }}\n      >\n        <Button\n          iconBefore={<AddIcon />}\n          onClick={(e) => {\n            setShowNewLayoutPopup(true);\n          }}\n          text=\"Add New Layout\"\n          width=\"55%\"\n          intent=\"success\"\n          appearance=\"primary\"\n        />\n      </div>\n      {newLayoutPopup()}\n      <div>\n        <LayoutTable />\n      </div>\n    </Panel>\n  );\n};\n\nexport default LayoutTab;\n","import React, { ReactNode, useEffect } from \"react\";\nimport { Draggable, DraggableProps } from \"react-beautiful-dnd\";\n\nimport { DndTypes } from \"../../enums\";\nimport { useStoreState } from \"../../hooks\";\n\ninterface DraggableDiv extends Omit<DraggableProps, \"children\"> {\n  dndType: DndTypes;\n  className?: string;\n  children: ReactNode;\n  dragAll?: boolean;\n}\n\n/**\n * A draggable div for wrapping draggable widgets in the editor panel.\n */\nconst DraggableWidget = ({\n  dndType,\n  className,\n  children,\n  dragAll,\n  draggableId,\n  index,\n}: DraggableDiv): JSX.Element => {\n  const currentLayoutState = useStoreState(\n    (state) => state.layoutsModel.activeLayout\n  );\n\n  let isInLayout = currentLayoutState?.layout.lg\n    .map((l) => l.i)\n    .includes(draggableId);\n\n  useEffect(() => {\n    isInLayout = currentLayoutState?.layout.lg\n      .map((l) => l.i)\n      .includes(draggableId);\n  }, [currentLayoutState]);\n  const getItemStyle = () => ({\n    display: isInLayout ? \"none\" : \"block\",\n  });\n\n  if (!React.isValidElement(children)) return <div />;\n  return (\n    <div style={{ display: isInLayout ? \"none\" : \"block\" }}>\n      <Draggable draggableId={draggableId} index={index}>\n        {(provided, snapshot) => {\n          console.log(isInLayout);\n          return (\n            <div\n              className={className}\n              ref={provided.innerRef}\n              style={getItemStyle()}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              {React.cloneElement(children, { provided })}\n            </div>\n          );\n        }}\n      </Draggable>\n    </div>\n  );\n};\n\nexport default DraggableWidget;\n","import \"../../../../css/table.css\";\n\nimport React, { useEffect } from \"react\";\n\nimport { DndTypes, DragSource } from \"../../../../enums\";\nimport DraggableDiv from \"../../../DragAndDrop/DraggableWidget\";\nimport IXDrop from \"../../../DragAndDrop/IXDrop\";\nimport Clock from \"../../../Widgets/Clock\";\nimport { useStoreState } from \"../../../../hooks\";\n/**\n * Table for displaying the available card layouts\n */\n\nconst WidgetsTab = (): JSX.Element => {\n  const currentLayoutState = useStoreState(\n    (state) => state.layoutsModel.activeLayout\n  );\n\n  // console.log(\"ADDING WIDGET AT LAYOUT DATA\", toAdd);\n  // console.log(this.layout);\n  // const lg = Object.entries(this.layout)[0][1];\n  // if (lg.map(l=>l.i).includes(toAdd.id)){\n  //   console.log(\"ADDING A WIDGET THAT'S ALREADY PRESENT\");\n  // }\n  // for (const [k, v] of Object.entries(this.layout)) {\n  //   const newItem: Layout = {\n  //     x: pos.x,\n  //     y: pos.y,\n  //     w: 1,\n  //     h: 1,\n  //     i: toAdd.id,\n  //   };\n  //   this.layout[k].push(newItem);\n  // }\n\n  return (\n    <div>\n      <IXDrop\n        cardType={DndTypes.CLOCK}\n        className=\"table-container\"\n        droppableId={DragSource.WIDGETS_TABLE}\n        isDropDisabled={false}\n      >\n        <DraggableDiv\n          className=\"draggable-widget\"\n          dndType={DndTypes.WIDGET}\n          draggableId=\"clock\"\n          index={0}\n          isDragDisabled={false}\n        >\n          <Clock />\n        </DraggableDiv>\n        <DraggableDiv\n          className=\"draggable-widget\"\n          dndType={DndTypes.WIDGET}\n          draggableId=\"info\"\n          index={1}\n          isDragDisabled={false}\n        >\n          <button>HELLO</button>\n        </DraggableDiv>\n      </IXDrop>\n    </div>\n  );\n};\n\nexport default WidgetsTab;\n","import \"../../../../css/table.css\";\nimport \"../../../../css/editorPanel.css\";\n\nimport React from \"react\";\nimport Scrollbars from \"react-custom-scrollbars\";\n\nimport { useElementSize, useErrors } from \"../../../../hooks\";\n\n/**\n * Table for displaying app errors\n */\n\nconst AppErrorTable = (): JSX.Element => {\n  const { appErrors, layoutErrors, googleSheetsErrors } = useErrors();\n  const [squareReference, { height }] = useElementSize();\n  return (\n    <div className=\"table-container\" style={{ height: \"100%\" }}>\n      <table>\n        <tbody>\n          <tr>\n            <th>Error</th>\n            <th>Source</th>\n            <th>Link</th>\n          </tr>\n        </tbody>\n      </table>\n      <div\n        ref={squareReference}\n        style={{ border: \"1px solid red\", height: \"100%\" }}\n      >\n        <Scrollbars\n          autoHide={false}\n          id=\"app-error-scroll-container\"\n          style={{ width: \"100%\", height: height - 20 }}\n        >\n          <table>\n            <tbody>\n              {[...appErrors, ...layoutErrors, ...googleSheetsErrors].map(\n                (error, index) => {\n                  const { errorType, link, source } = error;\n\n                  return (\n                    <tr\n                      key={index}\n                      style={{ display: \"flex\", flexDirection: \"column\" }}\n                    >\n                      <td key={index} style={{ color: \"#D14343\" }}>\n                        {`⚠ ${errorType}`}\n                      </td>\n                      <td>{source}</td>\n                      <td>\n                        <a\n                          href={link}\n                          rel=\"noreferrer\"\n                          style={{ color: \"lightblue\" }}\n                          target=\"_blank\"\n                        >\n                          {link}\n                        </a>\n                      </td>\n                    </tr>\n                  );\n                }\n              )}\n            </tbody>\n          </table>\n        </Scrollbars>\n      </div>\n    </div>\n  );\n};\n\nexport default AppErrorTable;\n","import { Switch, TextInputField } from \"evergreen-ui\";\r\nimport React, { useState, useEffect, useRef, ChangeEvent } from \"react\";\r\nimport { useApp, useElementSize, useStoreState } from \"../../../../hooks\";\r\nimport appConfig from \"../../../../static/appConfig\";\r\nimport AppErrorTable from \"./AppErrorTable\";\r\nimport { AutoSizer } from \"react-virtualized\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport FlexRow from \"../../../Shared/FlexRow\";\r\n\r\nconst AppTab = (): JSX.Element => {\r\n  const { rotationSpeed, setRotationSpeed, setRotateLayouts } = useApp();\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRotationSpeed(parseInt(e.target.value));\r\n  };\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) =>\r\n    //@ts-ignore\r\n    console.log(e.target.value);\r\n  // setval(e.target.value);\r\n  const [val, setval] = useState(\"\");\r\n  const [checked, setChecked] = React.useState(true);\r\n\r\n  useEffect(() => {\r\n    console.log(checked);\r\n    setRotateLayouts(checked);\r\n    if (checked) {\r\n      //   setRotationSpeed(4000);\r\n      //   setRotationSpeed(appConfig.rotationDuration);\r\n    } else {\r\n      setRotationSpeed(10000);\r\n    }\r\n  }, [checked]);\r\n\r\n  useEffect(() => {\r\n    console.log(val);\r\n  }, [val]);\r\n\r\n  const [squareRef, { width, height }] = useElementSize();\r\n\r\n  return (\r\n    <div style={{ height: \"100%\", pointerEvents: \"all\" }}>\r\n      <div style={{ margin: \".5em\" }}>\r\n        <FlexRow>\r\n          <Label>Rotate Layouts</Label>\r\n          <div style={{ paddingLeft: \".5em\" }}>\r\n            <Switch\r\n              checked={checked}\r\n              onChange={(e) => setChecked(e.target.checked)}\r\n            />\r\n          </div>\r\n        </FlexRow>\r\n      </div>\r\n\r\n      <AppErrorTable />\r\n      {/* </div> */}\r\n\r\n      {/* <input\r\n        // label={<Label>Layout Duration</Label>}\r\n        // description=\"Duration that layout is displayed\"\r\n        // placeholder={rotationSpeed.toString()}\r\n        // type=\"text\"\r\n        required\r\n        // value={rotationSpeed.toString()}\r\n        // validationMessage=\"This field is required\"\r\n        // pattern=\"[0-9]*\"\r\n        // disabled={false}\r\n        // onChange={onChange}\r\n        // defaul\r\n        value={val}\r\n        type=\"text\"\r\n        defaultValue={\"hello\"}\r\n        //@ts-ignore\r\n        // onChange={(e) => setRotationSpeed(parseInt(e.target.value))}\r\n        onChange={(e) => setval(e.target.value)}\r\n        //   // e()\r\n        // }}\r\n      /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Label = ({ children }: { children: string }) => {\r\n  return <div style={{ color: \"white\" }}>{children}</div>;\r\n};\r\n\r\nexport default AppTab;\r\n","import React from \"react\";\nimport { Heading } from \"evergreen-ui\";\nimport \"../../css/editorPanel.css\";\nimport ContentTab from \"./EditorTabs/ContentsTab/ContentsTab\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\nimport LayoutTab from \"./EditorTabs/LayoutTab/LayoutTab\";\nimport WidgetsTab from \"./EditorTabs/WidgetsTab/WidgetsTab\";\nimport AppTab from \"./EditorTabs/AppTab/AppTab\";\n// https://github.com/goodoldneon/react-drag-and-dock#api\n\nconst Editor = (): JSX.Element => {\n  return (\n    <Tabs>\n      <TabList>\n        <Tab>Content</Tab>\n        <Tab>Widgets</Tab>\n        <Tab>Layouts</Tab>\n        <Tab>App Settings</Tab>\n      </TabList>\n      <TabPanel>\n        <ContentTab />\n      </TabPanel>\n      <TabPanel>\n        <WidgetsTab />\n      </TabPanel>\n      <TabPanel>\n        <LayoutTab />\n      </TabPanel>\n      <TabPanel>\n        <AppTab />\n      </TabPanel>\n    </Tabs>\n  );\n};\n\nexport default Editor;\n","import \"../../css/editorPanel.css\";\n\nimport classNames from \"classnames\";\nimport { MinusIcon, PlusIcon } from \"evergreen-ui\";\nimport React, { useState } from \"react\";\nimport ReactDom from \"react-dom\";\nimport Draggable from \"react-draggable\";\n\nimport { AppMode } from \"../../enums\";\nimport { useStoreState } from \"../../hooks\";\nimport Editor from \"./Editor\";\n\n/**Draggable panel which contains the editor body, as well as a header bar with a min/max button for resizing the panel. Renders to \"editor-panel-container\" div in index.html*/\n\nconst EditorPanel = (): JSX.Element => {\n  const viewModeState = useStoreState((state) => state.appModel.appMode);\n\n  const [minimized, setMinimized] = useState(false);\n\n  const editorPanelClass = classNames(\"editor-panel\", {\n    \"editor-panel-full\": !minimized,\n    hidden: viewModeState === AppMode.DISPLAY,\n    \"editor-panel-minimized\": minimized,\n  });\n  const editorClass = classNames(\"editor\", {\n    \"editor-visible\": viewModeState === AppMode.EDIT,\n  });\n\n  return ReactDom.createPortal(\n    <Draggable\n      bounds={{\n        left: 0,\n        top: 0,\n        right: window.innerWidth - 50,\n        bottom: window.innerHeight - 50,\n      }}\n      defaultClassName={editorPanelClass}\n      defaultPosition={{ x: 100, y: 100 }}\n      handle=\".editor-panel-handle\"\n    >\n      <div className={editorClass}>\n        <PanelHeader>\n          <BarButton\n            icon={<PlusIcon />}\n            onMouseUp={() => {\n              setMinimized(false);\n            }}\n          />\n          <BarButton\n            icon={<MinusIcon />}\n            onMouseUp={() => {\n              setMinimized(true);\n            }}\n          />\n        </PanelHeader>\n        <Editor />\n      </div>\n    </Draggable>,\n    document.querySelector(\"#editor-panel-container\") as HTMLDivElement\n  );\n};\n\nexport default React.memo(EditorPanel);\n\ninterface PanelHeaderProperties {\n  children: JSX.Element | JSX.Element[];\n}\nconst PanelHeader = ({ children }: PanelHeaderProperties): JSX.Element => {\n  return <div className=\"editor-panel-handle panel-header\">{children}</div>;\n};\n\nconst BarButton = ({\n  icon,\n  onMouseUp,\n}: {\n  icon: JSX.Element;\n  onMouseUp: React.MouseEventHandler<HTMLDivElement>;\n}): JSX.Element => {\n  return (\n    <div className=\"window-button\" onMouseUp={onMouseUp}>\n      {icon}\n    </div>\n  );\n};\n","import \"../../css/howToUse.css\";\n\nimport { Heading, Text } from \"evergreen-ui\";\nimport { motion } from \"framer-motion\";\nimport React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Modal from \"../Shared/Modal\";\nimport Panel from \"../Shared/Panel\";\n\nconst HowToUsePopUp = ({\n  active,\n  onClose,\n}: {\n  active: boolean;\n  onClose: () => void;\n}): JSX.Element => {\n  const variants = {\n    hidden: {\n      y: 100,\n      opacity: 0,\n    },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        duration: 0.5,\n      },\n    },\n  };\n\n  useEffect(() => {\n    console.log(active);\n  }, [active]);\n  return ReactDOM.createPortal(\n    <Modal\n      active={active}\n      // containerClassName=\"how-to-use-popup\"\n      onClose={onClose}\n      backdropOpacity={0}\n    >\n      <motion.div\n        variants={variants}\n        style={{\n          width: \"30vw\",\n          height: \"80vh\",\n          backgroundColor: \"white\",\n          borderRadius: 10,\n          padding: \"1em\",\n        }}\n        animate={active ? \"visible\" : \"hidden\"}\n      >\n        <Panel>\n          <Heading>Connect Labtop</Heading>\n          <hr></hr>\n          <Text>Connect your labtop to use this screen as a display.</Text>\n          <img\n            className=\"how-to-image\"\n            src={process.env.PUBLIC_URL + \"/labtopdiagram.png\"}\n          />\n          <Heading>Explore Content</Heading>\n          <hr></hr>\n          <Text>Click on a card to explore data related content.</Text>\n          <img\n            className=\"how-to-image\"\n            src={process.env.PUBLIC_URL + \"/masonary.png\"}\n          />\n        </Panel>\n      </motion.div>\n    </Modal>,\n    document.getElementById(\"popup-container\") as HTMLDivElement\n  );\n};\n\nexport default HowToUsePopUp;\n","import \"../../css/howToUse.css\";\r\n\r\nimport classNames from \"classnames\";\r\nimport { HandUpIcon, Heading, InfoSignIcon, Text } from \"evergreen-ui\";\r\nimport { motion } from \"framer-motion\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { AppMode } from \"../../enums\";\r\nimport { useApp, useStoreState, useToggle } from \"../../hooks\";\r\nimport Button from \"../Shared/Button\";\r\nimport HowToUsePopUp from \"./HowToUsePopUp\";\r\n\r\nconst HowToUse = (): JSX.Element => {\r\n  const [visible, toggleVisible] = useToggle(false);\r\n\r\n  const { appMode } = useApp();\r\n\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      {appMode === AppMode.DISPLAY && (\r\n        <HowToUsePopUp active={visible} onClose={toggleVisible} />\r\n      )}\r\n      {appMode === AppMode.DISPLAY && (\r\n        <Button\r\n          appearance=\"primary\"\r\n          className=\"how-to-use-button\"\r\n          fontSize=\"xx-large\"\r\n          height=\"4vh\"\r\n          iconBefore={<HandUpIcon />}\r\n          onClick={toggleVisible}\r\n          text=\"Learn how to use this display\"\r\n          width=\"35vw\"\r\n        />\r\n      )}\r\n    </>,\r\n    document.querySelector(\"#how-to-use-button\") as HTMLDivElement\r\n  );\r\n};\r\n\r\nexport default HowToUse;\r\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useStoreActions } from \"../hooks\";\nimport { useLongPress } from \"react-use\";\nimport appConfig from \"../static/appConfig\";\nimport { motion } from \"framer-motion\";\n\n/**Invisible button in the bottom left corner of the screen. Hold touch/click to toggle app mode */\nconst ModeChangeButton = (): JSX.Element => {\n  const toggleModeAction = useStoreActions(\n    (actions) => actions.appModel.toggleAppMode\n  );\n\n  const longPressEvent = useLongPress(() => {\n    toggleModeAction();\n  });\n\n  const modeChangeButtonStyle = {\n    position: \"absolute\",\n    width: 50,\n    height: 50,\n    border: appConfig.showModeSwitchButton ? \"1px solid red\" : \"none\",\n    bottom: 0,\n    left: 0,\n    opacity: 0,\n  } as React.CSSProperties;\n\n  // const [mosued, setmosue] = useState(initialState)\n  return ReactDOM.createPortal(\n    <motion.div\n      style={{ ...modeChangeButtonStyle, backgroundColor: \"white\" }}\n      whileTap={{ backgroundColor: \"green\", opacity: 1 }}\n    >\n      <div style={modeChangeButtonStyle} {...longPressEvent}></div>,\n    </motion.div>,\n    document.querySelector(\"#mode-change-button\") as HTMLElement\n  );\n};\n\nexport default ModeChangeButton;\n","import React, { useState, useEffect } from \"react\";\n\nconst Screen = ({\n  children,\n  padding,\n}: {\n  children: JSX.Element | JSX.Element[];\n  padding?: string;\n}): JSX.Element => {\n  return (\n    <div style={{width: \"100vw\", height: \"100vh\"}}>\n      {children}\n    </div>\n  );\n};\n\nexport default Screen;\n","import \"./App.global.css\";\nimport \"./css/global.css\";\n\nimport { DndContext } from \"@dnd-kit/core\";\nimport React, { useEffect } from \"react\";\nimport { useIdle, useInterval } from \"react-use\";\n\nimport Background from \"./components/Background\";\nimport CardLayout from \"./components/CardLayout/CardLayout\";\nimport AppDragContext from \"./components/DragAndDrop/AppDragContext\";\nimport EditorPanel from \"./components/EditorPanel/EditorPanel\";\nimport HowToUse from \"./components/HowToUse/HowToUse\";\nimport ModeChangeButton from \"./components/ModeChangeButton\";\nimport Screen from \"./components/Shared/Screen\";\nimport { AppMode } from \"./enums\";\nimport {\n  useApp,\n  useEffectOnce,\n  useLayout,\n  useStoreActions,\n  useWindowSize,\n} from \"./hooks\";\nimport appConfig from \"./static/appConfig\";\nimport { Layouts } from \"react-grid-layout\";\n\n/**\n * High level container, the root component. Initial fetch requests to spreadsheets are made here via a useEffect hook.\n */\n\nconst App = (): JSX.Element => {\n  const isIdle = useIdle(appConfig.idleTime, false);\n\n  const fetchTopLevelSheetThunk = useStoreActions(\n    (actions) => actions.googleSheetsModel.fetchTopLevelSheet\n  );\n\n  const { activeLayout, setBufferLayout, activeCards, activeWidgets } =\n    useLayout();\n\n  const { appMode, toggleAppMode, rotateLayouts } = useApp();\n\n  useInterval(() => {\n    if (appMode === AppMode.DISPLAY && rotateLayouts) {\n      // setRandomLayout();\n    }\n  }, appConfig.rotationDuration);\n\n  useEffect(() => {\n    if (appMode === AppMode.EDIT) {\n      toggleAppMode();\n    }\n  }, [isIdle]);\n\n  useEffectOnce(() => {\n    fetchTopLevelSheetThunk();\n  });\n\n  console.log(activeWidgets);\n\n  // const { activeLayout, setBufferLayout, activeCards, activeWidgets } =\n  useLayout();\n\n  const { width, height } = useWindowSize();\n  return (\n    <>\n      <HowToUse />\n      <Background />\n      <ModeChangeButton />\n      <AppDragContext>\n        <EditorPanel />\n        <Screen>\n          <DndContext>\n            {activeLayout && (\n              <CardLayout\n                appMode={appMode}\n                cards={[...activeCards]}\n                widgets={[...activeWidgets]}\n                height={height}\n                isDraggable={appMode === AppMode.EDIT}\n                isResizable={appMode === AppMode.EDIT}\n                layout={activeLayout}\n                margin={[20, 20]}\n                onLayoutChange={(l) => {\n                  const newLayout: Layouts = {\n                    lg: l,\n                    md: l,\n                    sm: l,\n                    xs: l,\n                    xxs: l,\n                  };\n                  console.log(newLayout);\n                  if (l.length > 3) {\n                    activeLayout.layout = newLayout;\n                  }\n                  setBufferLayout(newLayout);\n                }}\n                width={width}\n              />\n            )}\n          </DndContext>\n        </Screen>\n      </AppDragContext>\n    </>\n  );\n};\n\nexport default App;\n","import { InteractionType } from \"../enums\";\nimport IFrameValidator from \"../IFrameValidator\";\nimport type RawCardRow from \"../interfaces/RawCardRow\";\nimport { WidgetType } from \"./WidgetData\";\nimport imageThumbnail from \"image-thumbnail\";\n\nexport type ContentType = \"video\" | \"image\" | \"website\" | \"embed\" | \"widget\";\n\ninterface ContentCardData {\n  src: string;\n  title: string;\n  added: Date;\n  sourceId: string;\n  author: string;\n}\n\ninterface WidgetCardData {\n  widgetType: WidgetType;\n}\n/**Contains all the information needed to create a display card */\nexport default class CardData {\n  readonly id: string;\n  readonly src: string;\n  readonly title: string;\n  readonly added?: Date;\n  readonly sourceId: string;\n  readonly author: string;\n  readonly interaction: InteractionType;\n  readonly contentType: ContentType;\n  readonly metaData: ContentCardData | WidgetCardData;\n  validator!: IFrameValidator;\n  isActive!: boolean;\n  failed!: boolean;\n\n  constructor(row: RawCardRow) {\n    // console.log(`GOT IMAGE CARD ROW: ${isImgLink(row.src)}`);\n    this.id = row.src;\n    this.src = row.src;\n    this.title = row.title;\n    this.added = new Date(row.added);\n    this.sourceId = row.src;\n    this.author = row.author;\n    this.interaction =\n      InteractionType[row.interaction as keyof typeof InteractionType];\n    this.contentType = getContentType(this.src);\n    if (this.contentType === \"widget\" && row.widgetType) {\n      this.metaData = {\n        widgetType: row.widgetType,\n      };\n      this.id = row.widgetType;\n    } else {\n      this.metaData = {\n        src: row.src,\n        title: row.title,\n        added: new Date(row.added),\n        sourceId: row.src,\n        author: row.author,\n      };\n      this.id = row.src;\n    }\n\n    this.isActive = false;\n    this.validator = new IFrameValidator(this.src);\n    this.failed = false;\n\n    // if ()\n  }\n  setActive(b: boolean): void {\n    this.isActive = b;\n  }\n\n  fail(): void {\n    console.log(this.validator.errors);\n    this.failed = true;\n    // this.error =\n  }\n  // generateThumbnail(): void {\n  //   imageThumbnail('resources/images/dog.jpg')\n  //   .then(thumbnail => { console.log(thumbnail) })\n  //   .catch(err => console.error(err));\n  //   // try {\n  //   //   const thumbnail = await imageThumbnail();\n  //   //   console.log(thumbnail);\n  //   // } catch (err) {\n  //   //   console.error(err);\n  //   // }\n  // }\n}\n\nfunction getContentType(url: string): ContentType {\n  if (isImgLink(url)) return \"image\";\n  if (isVideo(url)) return \"video\";\n  if (isEmbed(url)) return \"embed\";\n  if (isWebsite(url)) return \"website\";\n  return \"widget\";\n}\n\nfunction isImgLink(url: string) {\n  if (typeof url !== \"string\") return false;\n  const imageReg = /[./](gif|jpg|jpeg|tiff|png)$/i;\n  return imageReg.test(url);\n}\n\nfunction isVideo(url: string) {\n  if (typeof url !== \"string\") return false;\n  const videoReg = /[./](mp4|webm|mov)$/i;\n  return videoReg.test(url);\n  // url.match(/^http[^\\?]*.(jpg|jpeg|gif|png|tiff|bmp)(\\?(.*))?$/gim) != null\n}\n\nfunction isEmbed(url: string) {\n  if (typeof url !== \"string\") return false;\n  return url.includes(\"embed\");\n}\n\nfunction isWebsite(url: string) {\n  if (typeof url !== \"string\") return false;\n  return url.includes(\"https\");\n}\n","import { ContentType } from \"./CardData\";\n\nexport type WidgetType = \"clock\"|\"group label\"|\"info\"\n\ninterface WidgetCardData{\n  widgetType: WidgetType;\n}\n/**Contains all the information needed to create a display card */\nexport default class WidgetData {\n  readonly id: string;\n  readonly contentType: ContentType\n  isActive: boolean;\n\n\n  constructor(name: WidgetType) {\n    this.id = name as string\n    this.isActive = false;\n    this.contentType = \"widget\"\n  }\n  setActive(b: boolean): void {\n    this.isActive = b;\n  }\n\n}\n \n","import {\r\n  Action,\r\n  action,\r\n  debug,\r\n  Thunk,\r\n  thunk,\r\n  ThunkOn,\r\n  thunkOn,\r\n} from \"easy-peasy\";\r\nimport _ from \"lodash\";\r\n// import type {Action, Thunk, ThunkOn} from \"easy-peasy/types\"\r\n\r\nimport CardData from \"../data_structs/CardData\";\r\nimport WidgetData, { WidgetType } from \"../data_structs/WidgetData\";\r\nimport type { SheetNames } from \"../enums\";\r\nimport { AppMode } from \"../enums\";\r\nimport AppError from \"../interfaces/AppError\";\r\nimport type RawCardRow from \"../interfaces/RawCardRow\";\r\nimport appConfig from \"../static/appConfig\";\r\n// import defaultGridLayout from \"../static/defaultStaticLayout\";\r\nimport { StoreModel } from \"./index\";\r\n/**\r\n * Core app model\r\n * @param\r\n */\r\n\r\nexport interface AppDataModel {\r\n  //state\r\n  availableCards: CardData[];\r\n  availableWidgets: WidgetData[];\r\n  activeWidgets: WidgetData[];\r\n  activeCards: CardData[];\r\n  rotationSpeed: number;\r\n  rotateLayouts: boolean;\r\n  // currentLayout: Layouts;\r\n  appMode: AppMode;\r\n  appErrors: AppError[];\r\n\r\n  //listeners\r\n  onCardSheetLoadSuccess: ThunkOn<AppDataModel, never, StoreModel>;\r\n  onSwapCardContent: ThunkOn<AppDataModel, never, StoreModel>;\r\n  onSetActiveLayout: ThunkOn<AppDataModel, never, StoreModel>;\r\n  //managers\r\n  manageViewModeChange: Thunk<AppDataModel, AppMode>;\r\n  toggleAppMode: Thunk<AppDataModel, never>;\r\n  //simple setters\r\n  addAppError: Action<AppDataModel, AppError>;\r\n  setRotationSpeed: Action<AppDataModel, number>;\r\n  setRotateLayouts: Action<AppDataModel, boolean>;\r\n  setAppMode: Action<AppDataModel, AppMode>;\r\n  setActiveCards: Action<AppDataModel, CardData[]>;\r\n  setActiveWidgets: Action<AppDataModel, WidgetData[]>;\r\n  setAvailableCards: Action<AppDataModel, CardData[]>;\r\n}\r\n\r\nconst availableWidgets = appConfig.widgetIds.map(\r\n  (n) => new WidgetData(n as WidgetType)\r\n);\r\n\r\nconst appModel: AppDataModel = {\r\n  //state\r\n  availableCards: [],\r\n  availableWidgets: availableWidgets,\r\n  activeWidgets: [],\r\n  activeCards: [],\r\n  appErrors: [],\r\n  rotateLayouts: true,\r\n  rotationSpeed: appConfig.rotationDuration,\r\n  appMode: AppMode.DISPLAY,\r\n  //managers\r\n  /**Control side effects for altering the view state of the app, and dispatch a setter for the state */\r\n  manageViewModeChange: thunk((actions, viewModeEnum) => {\r\n    // console.log(viewModeEnum);\r\n    actions.setAppMode(viewModeEnum);\r\n    switch (viewModeEnum) {\r\n      case AppMode.EDIT:\r\n        break;\r\n      case AppMode.DISPLAY:\r\n        break;\r\n      case AppMode.CYCLE:\r\n        break;\r\n      default:\r\n        console.log(\"reached default in set view mode thunk\");\r\n    }\r\n  }),\r\n  toggleAppMode: thunk((actions, _, { getState }) => {\r\n    // console.log(\"toggling view mod \");\r\n\r\n    switch (getState().appMode) {\r\n      case AppMode.EDIT:\r\n        actions.setAppMode(AppMode.DISPLAY);\r\n        break;\r\n      case AppMode.DISPLAY:\r\n        actions.setAppMode(AppMode.EDIT);\r\n        break;\r\n      case AppMode.CYCLE:\r\n        break;\r\n      default:\r\n        console.log(\"reached default in set view mode thunk\");\r\n    }\r\n    console.log(getState().appMode);\r\n  }),\r\n  setAvailableCards: action((state, cardDataArray) => {\r\n    state.availableCards = cardDataArray;\r\n  }),\r\n  setActiveCards: action((state, cardDataArray) => {\r\n    state.activeCards = cardDataArray;\r\n  }),\r\n  setActiveWidgets: action((state, widgetDataArray) => {\r\n    state.activeWidgets = widgetDataArray;\r\n  }),\r\n  setAppMode: action((state, viewModeEnum) => {\r\n    state.appMode = viewModeEnum;\r\n  }),\r\n  setRotationSpeed: action((state, speed) => {\r\n    state.rotationSpeed = speed;\r\n  }),\r\n  setRotateLayouts: action((state, should) => {\r\n    state.rotateLayouts = should;\r\n  }),\r\n  addAppError: action((state, error) => {\r\n    const errorsString = state.appErrors.map(\r\n      (error) => JSON.stringify(error) as string\r\n    );\r\n    const newError = JSON.stringify(error);\r\n    // const errorBasic = error.\r\n    if (!errorsString.includes(newError)) {\r\n      state.appErrors.push(error);\r\n    }\r\n  }),\r\n\r\n  //listeners\r\n  onCardSheetLoadSuccess: thunkOn(\r\n    // targetResolver:\r\n    (actions, storeActions) =>\r\n      storeActions.googleSheetsModel.setAppGoogleSheetData,\r\n    // handler:\r\n    async (actions, target) => {\r\n      target.payload.getSheetRows<RawCardRow>(\"CARDS\").then((rows) => {\r\n        const rawCardRowsArray = rows.map((row) => {\r\n          return {\r\n            src: row.src,\r\n            title: row.title,\r\n            added: row.added,\r\n            sourceid: row.sourceid,\r\n            author: row.author,\r\n            interaction: row.interaction,\r\n          } as RawCardRow;\r\n        });\r\n\r\n        const cards = rawCardRowsArray.map((c: RawCardRow) => new CardData(c));\r\n        actions.setAvailableCards(cards);\r\n      });\r\n    }\r\n  ),\r\n  onSetActiveLayout: thunkOn(\r\n    (actions, storeActions) => storeActions.layoutsModel.setActiveLayout,\r\n    async (actions, layout, { getState }) => {\r\n      const activeSourceIds = new Set(layout.payload.sources());\r\n      const activeWidgetIds = new Set(\r\n        layout.payload.layoutWidgets.map((w) => w.id) ?? []\r\n      );\r\n\r\n      const availableCardsUpdated = getState().availableCards.map((card) => {\r\n        if (activeSourceIds.has(card.sourceId)) {\r\n          card.setActive(true);\r\n        } else {\r\n          card.setActive(false);\r\n        }\r\n        return card;\r\n      });\r\n\r\n      const availableWidgetsUpdated = getState().availableWidgets.map(\r\n        (widget) => {\r\n          if (activeSourceIds.has(widget.id)) {\r\n            widget.setActive(true);\r\n          } else {\r\n            widget.setActive(false);\r\n          }\r\n          return widget;\r\n        }\r\n      );\r\n\r\n      const activeCards = getState().availableCards.filter((card) => {\r\n        return activeSourceIds.has(card.sourceId);\r\n      });\r\n      const activeWidgets = availableWidgets.filter((card) => {\r\n        return activeWidgetIds.has(card.id);\r\n      });\r\n      actions.setAvailableCards(availableCardsUpdated);\r\n      actions.setActiveWidgets(availableWidgetsUpdated);\r\n      actions.setActiveCards(activeCards);\r\n      console.log(activeWidgets);\r\n      actions.setActiveWidgets(activeWidgets);\r\n    }\r\n  ),\r\n\r\n  onSwapCardContent: thunkOn(\r\n    (actions, storeActions) => storeActions.layoutsModel.swapCardContent,\r\n    async (actions, payload, { getState }) => {\r\n      console.log(\"got swap card content\");\r\n      console.log(payload.payload);\r\n      console.log(getState().activeCards);\r\n      const newCards = getState().activeCards.map((c) => {\r\n        if (c.sourceId === payload.payload.targetId) {\r\n          const newSource = getState().availableCards.find(\r\n            (c) => c.sourceId === payload.payload.sourceId\r\n          );\r\n          console.log(newSource);\r\n          return newSource;\r\n        } else {\r\n          return c;\r\n        }\r\n      });\r\n      if (newCards) {\r\n        actions.setActiveCards(newCards as CardData[]);\r\n      }\r\n      console.log(debug(payload));\r\n    }\r\n  ),\r\n  // getLayoutCards: action((state, layoutId)=>{\r\n  //   return\r\n  // })\r\n};\r\n\r\nexport default appModel;\r\n","import { ExtendedLayout, GridSettings, LayoutSettings } from \"../data_structs/LayoutData\"\n\nconst layout = { \"lg\": [{ \"w\": 2, \"h\": 1, \"x\": 0, \"y\": 0, \"i\": \"clock\", \"moved\": false, \"static\": true }, { \"w\": 2, \"h\": 2, \"x\": 2, \"y\": 0, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/DuBois_Racism.png\", \"moved\": false, \"static\": false }, { \"w\": 1, \"h\": 2, \"x\": 0, \"y\": 1, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/VideoGames.jpeg\", \"moved\": false, \"static\": false }], \"md\": [{ \"w\": 2, \"h\": 1, \"x\": 0, \"y\": 0, \"i\": \"clock\", \"moved\": false, \"static\": true }, { \"w\": 2, \"h\": 2, \"x\": 2, \"y\": 0, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/DuBois_Racism.png\", \"moved\": false, \"static\": false }, { \"w\": 1, \"h\": 2, \"x\": 0, \"y\": 1, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/VideoGames.jpeg\", \"moved\": false, \"static\": false }], \"sm\": [{ \"w\": 2, \"h\": 1, \"x\": 0, \"y\": 0, \"i\": \"clock\", \"moved\": false, \"static\": true }, { \"w\": 2, \"h\": 2, \"x\": 2, \"y\": 0, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/DuBois_Racism.png\", \"moved\": false, \"static\": false }, { \"w\": 1, \"h\": 2, \"x\": 0, \"y\": 1, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/VideoGames.jpeg\", \"moved\": false, \"static\": false }], \"xs\": [{ \"w\": 2, \"h\": 1, \"x\": 0, \"y\": 0, \"i\": \"clock\", \"moved\": false, \"static\": true }, { \"w\": 2, \"h\": 2, \"x\": 2, \"y\": 0, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/DuBois_Racism.png\", \"moved\": false, \"static\": false }, { \"w\": 1, \"h\": 2, \"x\": 0, \"y\": 1, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/VideoGames.jpeg\", \"moved\": false, \"static\": false }], \"xxs\": [{ \"w\": 2, \"h\": 1, \"x\": 0, \"y\": 0, \"i\": \"clock\", \"moved\": false, \"static\": true }, { \"w\": 2, \"h\": 2, \"x\": 2, \"y\": 0, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/DuBois_Racism.png\", \"moved\": false, \"static\": false }, { \"w\": 1, \"h\": 2, \"x\": 0, \"y\": 1, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/VideoGames.jpeg\", \"moved\": false, \"static\": false }] }\n\nconst gridSettings: GridSettings = {\n    defaultBackgroundColor: \"red\"\n}\nconst layoutSettings: LayoutSettings  = {\n    gridSettings: gridSettings,\n    cardSettings: [],\n}\n\nconst extendedLayoutTest: ExtendedLayout = {\n    layout: layout,\n    layoutSettings: layoutSettings,\n    widgets: [],\n}\n\nexport default extendedLayoutTest","import { Layout, Layouts } from \"react-grid-layout\";\n\nimport type { CardSwapEvent } from \"../interfaces/CardEvents\";\nimport type { GridPosition } from \"../interfaces/GridPosition\";\nimport type RawLayoutRow from \"../interfaces/RawLayoutRow\";\nimport appConfig from \"../static/appConfig\";\nimport extendedLayoutTest from \"../static/extendedLayoutTest\";\nimport CardData from \"./CardData\";\nimport WidgetData from \"./WidgetData\";\nimport imageThumbnail from \"image-thumbnail\";\n\nexport interface CardOptions {\n  id: string;\n  scale: number;\n  backgroundColor: string;\n  objectPosition: string;\n}\n\nexport interface GridSettings {\n  defaultBackgroundColor: string;\n}\nexport interface LayoutSettings {\n  cardSettings: CardOptions[];\n  gridSettings: GridSettings;\n}\n\nexport interface ExtendedLayout {\n  layout: Layouts;\n  layoutSettings: LayoutSettings;\n  widgets: WidgetData[];\n}\n\nexport default class LayoutData {\n  readonly title: string;\n  readonly author: string;\n  readonly added: Date;\n  readonly id: string;\n  readonly sourceLayout: ExtendedLayout;\n  layout: Layouts;\n  layoutWidgets: WidgetData[];\n\n  constructor(row: RawLayoutRow) {\n    const { layout } = testGetLayout(row);\n    this.id = row.title + \"_\" + row.timestamp;\n    this.title = row.title;\n    this.author = row.author;\n    this.added = new Date(row.timestamp.split(\" \")[0]);\n    this.sourceLayout = JSON.parse(row.layout).layout;\n    console.log(JSON.parse(row.layout));\n\n    this.layoutWidgets = JSON.parse(row.layout).layoutWidgets\n      ? JSON.parse(row.layout).layoutWidgets\n      : [];\n    this.layout = layout;\n  }\n\n  swapCard(swapInfo: CardSwapEvent): void {\n    for (const [k, v] of Object.entries(this.layout)) {\n      for (const [index, layoutValue] of v.entries()) {\n        if (layoutValue.i == swapInfo.targetId) {\n          v[index].i = swapInfo.sourceId;\n        }\n      }\n      this.layout[k] = v;\n    }\n  }\n\n  removeCard(toRemoveId: string): void {\n    console.log(this.layout);\n    for (const [k, v] of Object.entries(this.layout)) {\n      for (const [index, layoutValue] of v.entries()) {\n        this.layout[k] = v.filter((l) => l.i !== toRemoveId);\n      }\n    }\n  }\n\n  clearCards(): void {\n    console.log(this.layout);\n    for (const [k, v] of Object.entries(this.layout)) {\n      for (const [index, layoutValue] of v.entries()) {\n        this.layout[k] = [];\n      }\n    }\n  }\n\n  addCard(toAdd: CardData, pos: GridPosition): void {\n    console.log(\"ADDING CARD AT LAYOUT DATA\");\n    console.log(this.layout);\n    const lg = Object.entries(this.layout)[0][1];\n    if (lg.map((l) => l.i).includes(toAdd.sourceId)) {\n      console.log(\"ADDING SOMETHING THAT'S ALREADY PRESENT\");\n    }\n    for (const [k, v] of Object.entries(this.layout)) {\n      const newItem: Layout = {\n        x: pos.x,\n        y: pos.y,\n        w: 1,\n        h: 1,\n        i: toAdd.sourceId,\n      };\n      this.layout[k].push(newItem);\n    }\n  }\n  addWidget(toAdd: WidgetData, pos: GridPosition): void {\n    // console.log(\"ADDING WIDGET AT LAYOUT DATA\", toAdd);\n    // console.log(this.layout);\n    const lg = Object.entries(this.layout)[0][1];\n    if (lg.map((l) => l.i).includes(toAdd.id)) {\n      console.log(\"ADDING A WIDGET THAT'S ALREADY PRESENT\");\n    }\n    this.layoutWidgets.push(toAdd);\n    for (const [k, v] of Object.entries(this.layout)) {\n      const newItem: Layout = {\n        x: pos.x,\n        y: pos.y,\n        w: 1,\n        h: 1,\n        i: toAdd.id,\n      };\n      this.layout[k].push(newItem);\n    }\n  }\n  resetLayout(): void {\n    this.layout = JSON.parse(JSON.stringify(this.sourceLayout));\n  }\n  setGridLayout(newGridLayout: Layouts): void {\n    console.log(newGridLayout);\n    for (const [k, v] of Object.entries(this.layout)) {\n      for (const [index, layoutValue] of v.entries()) {\n        this.layout[k] = newGridLayout[k];\n      }\n    }\n  }\n  sources(): string[] {\n    const lg = Object.entries(this.layout)[0][1];\n    return lg.map((l: any) => l.i);\n  }\n  widgets(): string[] {\n    console.log(\"GETTING WIDGETS AT WIDGET LAYOUTDATA\");\n    const lg = Object.entries(this.layout)[0][1];\n    console.log(lg);\n    const justWidgets = lg.filter((l: any) =>\n      appConfig.widgetIds.includes(l.i)\n    );\n    console.log(\"just widgets\", justWidgets);\n    return justWidgets.map((l: any) => l.i);\n  }\n}\nfunction testGetLayout(row: RawLayoutRow): ExtendedLayout {\n  const test = JSON.parse(row.layout);\n  return test.layout ? test : extendedLayoutTest;\n}\n","import {\r\n  Action,\r\n  action,\r\n  computed,\r\n  Computed,\r\n  Thunk,\r\n  thunk,\r\n  ThunkOn,\r\n  thunkOn,\r\n} from \"easy-peasy\";\r\nimport { Layouts } from \"react-grid-layout\";\r\n\r\nimport CardData from \"../data_structs/CardData\";\r\nimport LayoutData from \"../data_structs/LayoutData\";\r\nimport type { SheetNames } from \"../enums\";\r\nimport { AppMode } from \"../enums\";\r\nimport { CardAddEvent, CardSwapEvent } from \"../interfaces/CardEvents\";\r\nimport RawLayoutRow from \"../interfaces/RawLayoutRow\";\r\nimport appConfig from \"../static/appConfig\";\r\nimport defaultStaticLayout from \"../static/defaultStaticLayout\";\r\nimport { StoreModel } from \"./index\";\r\nimport backupData from \"../static/backupLayout.json\";\r\nimport AppError from \"../interfaces/AppError\";\r\nexport interface LayoutsModel {\r\n  //state\r\n  activeLayout: LayoutData | undefined;\r\n  externalLayouts: LayoutData[];\r\n  bufferLayout: Layouts;\r\n  layoutErrors: AppError[];\r\n\r\n  //listeners\r\n  onSetAppGoogleSheetData: ThunkOn<LayoutsModel, never, StoreModel>;\r\n  onToggleViewMode: ThunkOn<LayoutsModel, never, StoreModel>;\r\n\r\n  //simple setters\r\n  setActiveLayout: Action<LayoutsModel, LayoutData>;\r\n  setExternalLayouts: Action<LayoutsModel, LayoutData[]>;\r\n  setBufferLayout: Action<LayoutsModel, Layouts>;\r\n  // setTempLayout: Action<LayoutsModel, Layouts>;\r\n  updateLayout: Action<LayoutsModel, CardSwapEvent>;\r\n\r\n  layoutsString: Computed<LayoutsModel, string>;\r\n\r\n  //update\r\n  setRandomLayout: Thunk<LayoutsModel, never, StoreModel>;\r\n  swapCardContent: Thunk<LayoutsModel, CardSwapEvent, StoreModel>;\r\n  deleteCard: Thunk<LayoutsModel, string, StoreModel>;\r\n  clearCards: Thunk<LayoutsModel, never, StoreModel>;\r\n  addCard: Thunk<LayoutsModel, CardAddEvent, never, StoreModel>;\r\n  addWidget: Thunk<LayoutsModel, CardAddEvent, never, StoreModel>;\r\n  resetLayout: Thunk<LayoutsModel, never, StoreModel>;\r\n  addLayoutError: Action<LayoutsModel, AppError>;\r\n}\r\n\r\nconst layoutsModel: LayoutsModel = {\r\n  //state\r\n  activeLayout: undefined,\r\n  externalLayouts: [],\r\n  layoutErrors: [],\r\n  bufferLayout: backupData as unknown as Layouts,\r\n  layoutsString: computed([(state) => state.bufferLayout], (bufferLayout) => {\r\n    const val = JSON.stringify(bufferLayout);\r\n    return val;\r\n  }),\r\n\r\n  //listeners\r\n  /**On setAppGoogleSheetData, create an array of LayoutData objects from the provided rows */\r\n  onSetAppGoogleSheetData: thunkOn(\r\n    (actions, storeActions) =>\r\n      storeActions.googleSheetsModel.setAppGoogleSheetData,\r\n    (actions, target, { getState }) => {\r\n      //TODO: ERROR HANDLING FOR LAYOUTS\r\n      target.payload.getSheetRows<RawLayoutRow>(\"LAYOUTS\").then((rows) => {\r\n        const rawLayoutRows = rows;\r\n        const layouts: LayoutData[] = [];\r\n        rawLayoutRows.forEach((row) => {\r\n          try {\r\n            const l = new LayoutData(row);\r\n            layouts.push(l);\r\n          } catch (error) {\r\n            actions.addLayoutError({\r\n              errorType: \"failed to read layout row\",\r\n              description: `failed to read layout row ${\r\n                row.title ?? \"NO TITLE PROVIDED\"\r\n              }`,\r\n              source: row.title ?? \"NO TITLE PROVIDED\",\r\n              link: \"none\",\r\n            });\r\n            console.log(error);\r\n          }\r\n        });\r\n        let defaultLayout: LayoutData;\r\n        if (appConfig.useStaticLayout) {\r\n          // actions.setActiveLayout(defaultLayout);\r\n          // actions.setBufferLayout(defaultLayout.layout);\r\n        } else {\r\n          const defaultLayout = layouts.filter(\r\n            (layout) => layout.title === appConfig.defaultLayoutName\r\n          )[0];\r\n          if (defaultLayout) {\r\n            console.log(defaultLayout);\r\n            actions.setActiveLayout(defaultLayout);\r\n            actions.setBufferLayout(defaultLayout.layout);\r\n          }\r\n        }\r\n        actions.setExternalLayouts(layouts);\r\n      });\r\n    }\r\n  ),\r\n  addLayoutError: action((state, error) => {\r\n    const errorsString = state.layoutErrors.map(\r\n      (error) => JSON.stringify(error) as string\r\n    );\r\n    const newError = JSON.stringify(error);\r\n    if (!errorsString.includes(newError)) {\r\n      state.layoutErrors.push(error);\r\n    }\r\n  }),\r\n  onToggleViewMode: thunkOn(\r\n    // targetResolver:toggleAppMode\r\n    (actions, storeActions) => storeActions.appModel.manageViewModeChange,\r\n    // handler:\r\n    (actions, target, { getState, getStoreState }) => {\r\n      const { activeLayout, bufferLayout } = getState();\r\n      if (activeLayout) {\r\n        const buf = getState().bufferLayout;\r\n        activeLayout.layout = buf;\r\n        activeLayout.setGridLayout(buf);\r\n        actions.setActiveLayout(activeLayout);\r\n      }\r\n    }\r\n  ),\r\n  //simple setters\r\n  setActiveLayout: action((state, newActiveLayout) => {\r\n    console.log(newActiveLayout);\r\n    state.activeLayout = newActiveLayout;\r\n    state.bufferLayout = JSON.parse(JSON.stringify(newActiveLayout.layout));\r\n  }),\r\n  setRandomLayout: thunk((actions, _, { getState }) => {\r\n    const { externalLayouts, activeLayout } = getState();\r\n\r\n    // const possibleLayouts = externalLayouts.filter(\r\n    //   (l) => l.id !== activeLayout?.id\r\n    // );\r\n    if (activeLayout) {\r\n      const curIndex = externalLayouts\r\n        .map((l) => l.id)\r\n        .indexOf(activeLayout?.id);\r\n      console.log(curIndex);\r\n      const nextIndex = (curIndex + 1) % externalLayouts.length;\r\n      console.log(\r\n        `SETTING LAYOUT INDEX TO ${nextIndex} - ${externalLayouts[nextIndex].id} `\r\n      );\r\n      const selectedRandom = externalLayouts[nextIndex];\r\n      // console.log(selectedRandom);\r\n      actions.setActiveLayout(selectedRandom);\r\n    }\r\n    // state.activeLayout = selectedRandom;\r\n  }),\r\n  setExternalLayouts: action((state, newLayoutArray) => {\r\n    console.log(\"setting external layouts\");\r\n    state.externalLayouts = newLayoutArray;\r\n  }),\r\n  //mutators\r\n  swapCardContent: thunk((actions, swapInfo, { getState }) => {\r\n    const { activeLayout } = getState();\r\n    if (activeLayout) {\r\n      const buf = getState().bufferLayout;\r\n      activeLayout.layout = buf;\r\n      activeLayout.swapCard(swapInfo);\r\n      actions.setActiveLayout(activeLayout);\r\n    }\r\n  }),\r\n  deleteCard: thunk((actions, cardToDelete, { getState }) => {\r\n    const { activeLayout } = getState();\r\n    if (activeLayout) {\r\n      const buf = getState().bufferLayout;\r\n      activeLayout.layout = buf;\r\n      activeLayout.removeCard(cardToDelete);\r\n      actions.setActiveLayout(activeLayout);\r\n    }\r\n  }),\r\n  clearCards: thunk((actions, _, { getState }) => {\r\n    const { activeLayout } = getState();\r\n    if (activeLayout) {\r\n      const buf = getState().bufferLayout;\r\n      activeLayout.layout = buf;\r\n      activeLayout.clearCards();\r\n      actions.setActiveLayout(activeLayout);\r\n    }\r\n  }),\r\n  addCard: thunk((actions, cardAddEvent, { getState, getStoreState }) => {\r\n    const { availableCards } = getStoreState().appModel;\r\n    const { sourceId, targetPosition } = cardAddEvent;\r\n    const cardToAdd = availableCards.find((c) => c.sourceId == sourceId);\r\n    const { activeLayout } = getState();\r\n    if (activeLayout && cardToAdd) {\r\n      const buf = getState().bufferLayout;\r\n      activeLayout.setGridLayout(buf);\r\n      activeLayout?.addCard(cardToAdd, targetPosition);\r\n      actions.setActiveLayout(activeLayout);\r\n    }\r\n  }),\r\n  addWidget: thunk((actions, cardAddEvent, { getState, getStoreState }) => {\r\n    console.log(\"ADDING NEW WIDGET!!!\");\r\n    const { availableWidgets } = getStoreState().appModel;\r\n    const { sourceId, targetPosition } = cardAddEvent;\r\n    const widgetToAdd = availableWidgets.find((c) => c.id == sourceId);\r\n    const { activeLayout } = getState();\r\n    if (activeLayout && widgetToAdd) {\r\n      const buf = getState().bufferLayout;\r\n      activeLayout.setGridLayout(buf);\r\n      activeLayout?.addWidget(widgetToAdd, targetPosition);\r\n      actions.setActiveLayout(activeLayout);\r\n    }\r\n  }),\r\n\r\n  resetLayout: thunk((actions, _, { getState }) => {\r\n    const { activeLayout } = getState();\r\n    if (activeLayout) {\r\n      const buf = getState().activeLayout;\r\n      buf?.resetLayout();\r\n      if (buf) {\r\n        actions.setActiveLayout(buf);\r\n      }\r\n    }\r\n  }),\r\n  setBufferLayout: action((state, layouts) => {\r\n    console.log(layouts);\r\n    state.bufferLayout = layouts;\r\n  }),\r\n  updateLayout: action((state, swap) => {\r\n    const old = state.activeLayout;\r\n    if (old) {\r\n      old.swapCard(swap);\r\n      state.activeLayout = old;\r\n    }\r\n  }),\r\n};\r\n\r\nexport default layoutsModel;\r\n","import { SheetNames } from \"../enums\";\r\n\r\nexport default class GoogleSheetData {\r\n  title!: string;\r\n  sheetId!: string;\r\n  sheets!: Map<SheetNames, unknown[]>;\r\n  constructor(\r\n    title: string,\r\n    sheetId: string,\r\n  ) {\r\n    this.title = title;\r\n    this.sheetId = sheetId;\r\n    this.sheets = new Map();\r\n  }\r\n  getSheetRows<P>(title: SheetNames): Promise<P[]>{\r\n    // const typedArr = this.rows.map(r=>r as P)\r\n    return new Promise<P[]>((resolve, reject)=>{\r\n      const rowArray = this.sheets.get(title);\r\n      if (rowArray){\r\n        resolve(rowArray.map(r=>r as P))\r\n      } else {\r\n        reject(`sheet with title ${title} did not exist`)\r\n      }\r\n    })\r\n  }\r\n  addSheet(title: SheetNames, rows: unknown[]){\r\n    this.sheets.set(title, rows);\r\n  }\r\n}\r\n","import type SheetId from \"../interfaces/SheetId\";\n\nconst cardDataSheetKey: SheetId = {\n  key: \"181P-SDszUOj_xn1HJ1DRrO8pG-LXyXNmINcznHeoK8k\",\n  gid: 0,\n};\nexport default cardDataSheetKey;\n\n\n\n// 1o-R04VC8cIbcmqM68q4ESguaaNYb-0jhoPNgEuKa0i4\n// key: \"181P-SDszUOj_xn1HJ1DRrO8pG-LXyXNmINcznHeoK8k\",\n","import type { Action, Thunk } from \"easy-peasy\";\r\nimport { action, thunk } from \"easy-peasy\";\r\nimport Papa from \"papaparse\";\r\n\r\nimport GoogleSheetData from \"../data_structs/GoogleSheetData\";\r\nimport { SheetNames } from \"../enums\";\r\nimport AppError from \"../interfaces/AppError\";\r\nimport PrincipleSheetRow from \"../interfaces/PrincipleSheetRow\";\r\nimport type RawCardRow from \"../interfaces/RawCardRow\";\r\nimport type RawLayoutRow from \"../interfaces/RawLayoutRow\";\r\nimport cardDataSheetKey from \"../static/cardDataSheetKey\";\r\n\r\n/**\r\n * Responsible for making requests to google sheets. Other models must listen this model to intercept the sheet payload.\r\n * Also stores the fetch data purely for debugging purposes.\r\n */\r\n\r\nexport interface GoogleSheetsModel {\r\n  //state\r\n  appGoogleSheet: GoogleSheetData | undefined;\r\n  cardDataGoogleSheet: RawCardRow[] | null;\r\n  layoutDataGoogleSheet: RawLayoutRow[] | null;\r\n  formUrl: string | undefined;\r\n  layoutSheetUrl: string | undefined;\r\n  cardSheetUrl: string | undefined;\r\n  googleSheetsErrors: AppError[];\r\n  //requests\r\n  fetchTopLevelSheet: Thunk<GoogleSheetsModel>;\r\n  fetchAppGoogleSheet: Thunk<GoogleSheetsModel>;\r\n  fetchSheet: Thunk<GoogleSheetsModel, { url: string; name: SheetNames }[]>;\r\n  //setters\r\n  setFormUrl: Action<GoogleSheetsModel, string>;\r\n  setCardSheetUrl: Action<GoogleSheetsModel, string>;\r\n  setLayoutsSheetUrl: Action<GoogleSheetsModel, string>;\r\n  setAppGoogleSheetData: Action<GoogleSheetsModel, GoogleSheetData>;\r\n  setCardDataGoogleSheet: Action<GoogleSheetsModel, RawCardRow[]>;\r\n  setLayoutDataGoogleSheet: Action<GoogleSheetsModel, RawLayoutRow[]>;\r\n  addGoogleSheetError: Action<GoogleSheetsModel, AppError>;\r\n}\r\n\r\ninterface LoadSheetResult {\r\n  rows: unknown[];\r\n  sheetTitle: SheetNames;\r\n}\r\n\r\nconst googleSheetsModel: GoogleSheetsModel = {\r\n  //state\r\n  layoutDataGoogleSheet: null,\r\n  cardDataGoogleSheet: null,\r\n  appGoogleSheet: undefined,\r\n  formUrl: undefined,\r\n  layoutSheetUrl: undefined,\r\n  cardSheetUrl: undefined,\r\n  googleSheetsErrors: [],\r\n  //requests\r\n  fetchTopLevelSheet: thunk((actions) => {\r\n    try {\r\n      // getSheetData(\"TOP_LEVEL\", \"ZZZZ\" as string)\r\n      //   .then(\r\n      getSheetData(\"TOP_LEVEL\", process.env.REACT_APP_SHEET_URL as string)\r\n        .then((r) => {\r\n          const sheetRow = r.rows[0] as PrincipleSheetRow;\r\n          actions.setFormUrl(sheetRow.googleForm);\r\n          actions.setLayoutsSheetUrl(\r\n            googleSheetUrlToCSVUrl(sheetRow.layoutsSheet)\r\n          );\r\n          actions.setCardSheetUrl(googleSheetUrlToCSVUrl(sheetRow.cardsSheet));\r\n          // actions.fetchSheet([\r\n          //   {\r\n          //     name: \"LAYOUTS\",\r\n          //     url: \"FFFFF\",\r\n          //   },\r\n          //   { name: \"CARDS\", url: \"FFFF\" },\r\n          // ]);\r\n          actions.fetchSheet([\r\n            {\r\n              name: \"LAYOUTS\",\r\n              url: googleSheetUrlToCSVUrl(sheetRow.layoutsSheet),\r\n            },\r\n            {\r\n              name: \"CARDS\",\r\n              url: googleSheetUrlToCSVUrl(sheetRow.cardsSheet),\r\n            },\r\n          ]);\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"DOING CATCH\");\r\n          // actions.setFormUrl(`${process.env.PUBLIC_URL}/LAYOUTS_BACKUP.csv`);\r\n          actions.setLayoutsSheetUrl(\r\n            googleSheetUrlToCSVUrl(\r\n              `${process.env.PUBLIC_URL}/LAYOUTS_BACKUP.csv`\r\n            )\r\n          );\r\n          actions.setCardSheetUrl(\r\n            googleSheetUrlToCSVUrl(`${process.env.PUBLIC_URL}/CARDS_BACKUP.csv`)\r\n          );\r\n          actions.fetchSheet([\r\n            {\r\n              name: \"LAYOUTS\",\r\n              url: `${process.env.PUBLIC_URL}/LAYOUTS_BACKUP.csv`,\r\n            },\r\n            {\r\n              name: \"CARDS\",\r\n              url: `${process.env.PUBLIC_URL}/CARDS_BACKUP.csv`,\r\n            },\r\n          ]);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"DOING BACKUP\");\r\n      actions.addGoogleSheetError({\r\n        errorType: \"failed to fetch master google sheet\",\r\n        description:\r\n          \"failed to get the mater google sheet, reverting to local svg\",\r\n        source: process.env.REACT_APP_SHEET_URL ?? \"NA\",\r\n        link: process.env.REACT_APP_SHEET_URL ?? \"NA\",\r\n      });\r\n      // actions.fetchSheet([\r\n      //   {\r\n      //     name: \"LAYOUTS\",\r\n      //     url: googleSheetUrlToCSVUrl(\r\n      //       `${process.env.PUBLIC_URL}/LAYOUTS_BACKUP.csv`\r\n      //     ),\r\n      //   },\r\n      //   {\r\n      //     name: \"CARDS\",\r\n      //     url: googleSheetUrlToCSVUrl(\r\n      //       `${process.env.PUBLIC_URL}/CARDS_BACKUP.csv`\r\n      //     ),\r\n      //   },\r\n      // ]);\r\n    }\r\n  }),\r\n  fetchSheet: thunk(async (actions, sheets, { getState }) => {\r\n    console.log(getState().cardSheetUrl, getState().layoutSheetUrl);\r\n    const sheetResponses = sheets.map((s) => getSheetData(s.name, s.url));\r\n    Promise.allSettled(sheetResponses).then((results) => {\r\n      const sheetData = new GoogleSheetData(\"DSC App\", cardDataSheetKey.key);\r\n      const goodValues: PromiseFulfilledResult<LoadSheetResult>[] = [];\r\n\r\n      results.forEach((result, num) => {\r\n        console.log(result);\r\n        if (result.status == \"fulfilled\") {\r\n          goodValues.push(result);\r\n          sheetData.addSheet(result.value.sheetTitle, result.value.rows);\r\n        }\r\n        if (result.status == \"rejected\") {\r\n          console.error(\"failed \");\r\n        }\r\n      });\r\n      actions.setAppGoogleSheetData(sheetData);\r\n      sheetData.getSheetRows(\"CARDS\").then((r) => {\r\n        actions.setCardDataGoogleSheet(r as RawCardRow[]);\r\n      });\r\n      sheetData.getSheetRows(\"LAYOUTS\").then((r) => {\r\n        actions.setLayoutDataGoogleSheet(r as RawLayoutRow[]);\r\n      });\r\n    });\r\n  }),\r\n\r\n  fetchAppGoogleSheet: thunk(async (actions, _, { getState }) => {\r\n    const getCardDataResponse = getSheetData(\r\n      \"CARDS\",\r\n      getState().cardSheetUrl as string\r\n    );\r\n    const getLayoutDataResponse = getSheetData(\r\n      \"LAYOUTS\",\r\n      getState().layoutSheetUrl as string\r\n    );\r\n\r\n    Promise.allSettled([getCardDataResponse, getLayoutDataResponse]).then(\r\n      (results) => {\r\n        const sheetData = new GoogleSheetData(\"DSC App\", cardDataSheetKey.key);\r\n        const goodValues: PromiseFulfilledResult<LoadSheetResult>[] = [];\r\n\r\n        results.forEach((result, num) => {\r\n          console.log(result);\r\n          if (result.status == \"fulfilled\") {\r\n            goodValues.push(result);\r\n            sheetData.addSheet(result.value.sheetTitle, result.value.rows);\r\n          }\r\n          if (result.status == \"rejected\") {\r\n            actions.addGoogleSheetError({\r\n              errorType: \"failed to fetch layout or card sheet\",\r\n              description: \"could not retrieve google sheet\",\r\n              source: \"LAYOUTS/CARD\",\r\n              link: \"NA\",\r\n            });\r\n            console.error(\"failed \");\r\n          }\r\n        });\r\n        actions.setAppGoogleSheetData(sheetData);\r\n        sheetData.getSheetRows(\"CARDS\").then((r) => {\r\n          actions.setCardDataGoogleSheet(r as RawCardRow[]);\r\n        });\r\n        sheetData.getSheetRows(\"LAYOUTS\").then((r) => {\r\n          actions.setLayoutDataGoogleSheet(r as RawLayoutRow[]);\r\n        });\r\n      }\r\n    );\r\n  }),\r\n  setAppGoogleSheetData: action((state, googleSheet) => {\r\n    state.appGoogleSheet = googleSheet;\r\n  }),\r\n  setCardDataGoogleSheet: action((state, sheet) => {\r\n    state.cardDataGoogleSheet = sheet;\r\n  }),\r\n  setLayoutDataGoogleSheet: action((state, sheet) => {\r\n    state.layoutDataGoogleSheet = sheet;\r\n  }),\r\n  setFormUrl: action((state, formUrl) => {\r\n    state.formUrl = formUrl;\r\n  }),\r\n  setCardSheetUrl: action((state, cardSheetUrl) => {\r\n    state.formUrl = cardSheetUrl;\r\n  }),\r\n  setLayoutsSheetUrl: action((state, layoutSheetUrl) => {\r\n    state.formUrl = layoutSheetUrl;\r\n  }),\r\n  addGoogleSheetError: action((state, googleSheetError) => {\r\n    const errorsString = state.googleSheetsErrors.map(\r\n      (error) => JSON.stringify(error) as string\r\n    );\r\n    const newError = JSON.stringify(googleSheetError);\r\n    if (!errorsString.includes(newError)) {\r\n      state.googleSheetsErrors.push(googleSheetError);\r\n    }\r\n  }),\r\n};\r\n\r\nexport default googleSheetsModel;\r\n\r\n/**Converts the key for a google sheet into a url which can be used to fetch as .csv blob */\r\nfunction googleSheetUrlToCSVUrl(url: string): string {\r\n  const sections = url.split(\"/\");\r\n  const sheetKey = sections[5];\r\n  const sectionsGid = url.split(\"gid=\");\r\n  const gid = sectionsGid[1];\r\n  const csvUrl = `https://docs.google.com/spreadsheets/d/${sheetKey}/export?format=csv&gid=${gid}`;\r\n  return csvUrl;\r\n}\r\n\r\nfunction getSheetData(\r\n  sheetTitle: SheetNames,\r\n  sheetUrl: string\r\n): Promise<LoadSheetResult> {\r\n  let data;\r\n  return new Promise<LoadSheetResult>((resolve, reject) => {\r\n    try {\r\n      Papa.parse(sheetUrl, {\r\n        download: true,\r\n        header: true,\r\n        delimiter: \",\",\r\n        dynamicTyping: true,\r\n        complete: (results) => {\r\n          data = results.data;\r\n          console.log(data);\r\n          resolve({ rows: data, sheetTitle: sheetTitle });\r\n        },\r\n      });\r\n    } catch (error) {\r\n      reject(\"failed to get sheet\");\r\n    }\r\n  });\r\n}\r\n","import appData, { AppDataModel } from \"./appModel\";\r\nimport layoutsModel, { LayoutsModel } from \"./layoutsModel\";\r\nimport googleSheetsModel, { GoogleSheetsModel } from \"./googleSheetsModel\";\r\n// https://codesandbox.io/s/easy-peasy-typescript-v3-riqbl?file=/src/model/todos.ts\r\n\r\nexport interface StoreModel {\r\n  appModel: AppDataModel;\r\n  layoutsModel: LayoutsModel;\r\n  googleSheetsModel: GoogleSheetsModel;\r\n}\r\n\r\nconst model: StoreModel = {\r\n  appModel: appData,\r\n  layoutsModel: layoutsModel,\r\n  googleSheetsModel: googleSheetsModel,\r\n};\r\n\r\nexport default model;\r\n","import { createStore, action } from \"easy-peasy\";\nimport model from \"./model\";\n\nconst store = createStore(model, { name: \"Cuboard App Store\" });\n\nexport default store;\n","import React from \"react\";\nimport App from \"./App\";\nimport { StoreProvider } from \"easy-peasy\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <StoreProvider store={store}>\n    <App />\n  </StoreProvider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}