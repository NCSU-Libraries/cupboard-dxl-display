const { join } = require("path");

module.exports = {
  parser: "@typescript-eslint/parser",
  parserOptions: {
    ecmaVersion: 2019,
    sourceType: "module",
    project: join(__dirname, "./tsconfig.json"),
  },
  plugins: [
    "@typescript-eslint",
    "react-hooks",
    "react",
    "import",
    "filenames",
    "unicorn",
    "only-warn",
    "etc",
    "sort-exports",
    "simple-import-sort",
    "typescript-sort-keys",
    "sort-keys-fix",
  ],
  extends: [
    "plugin:etc/recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:sonarjs/recommended",
    "plugin:unicorn/recommended",
    // "plugin:github/recommended",
    "plugin:boundaries/recommended",
    "plugin:typescript-sort-keys/recommended",
  ],
  rules: {
    "etc/no-commented-out-code": "warn",
    "etc/no-misused-generics": "warn",
    "etc/prefer-less-than": "warn",
    "simple-import-sort/imports": "warn",
    "simple-import-sort/exports": "warn",
    "filenames/match-regex": "off",
    "no-warning-comments": [
      "warn",
      {
        terms: ["todo", "fixme", "TODO", "FIXME"],
        location: "anywhere",
      },
    ],
    "sort-keys-fix/sort-keys-fix": "warn",
    "no-console": ["warn"],
    "unicorn/filename-case": "off",
    "unicorn/no-nested-ternary": "off",
    "unicorn/prefer-array-find": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "react/prop-types": "off",
    "react/boolean-prop-naming": "warn",
    "react/destructuring-assignment": "warn",
    "react/no-access-state-in-setstate": "warn",
    "react/no-adjacent-inline-elements": "warn",
    "react/sort-comp": "warn",
    "react/sort-prop-types": "warn",
    "react/jsx-boolean-value": "warn",
    "react/jsx-child-element-spacing": "warn",
    "react/jsx-closing-bracket-location": "warn",
    "react/jsx-curly-brace-presence": "warn",
    "react/jsx-curly-newline": "warn",
    "react/jsx-first-prop-new-line": "warn",
    "react/jsx-fragments": "warn",
    "react/jsx-newline": ["warn", { prevent: true }],
    "react/jsx-no-useless-fragment": "warn",
    "react/jsx-pascal-case": "warn",
    "react/jsx-props-no-multi-spaces": "warn",
    "react/jsx-sort-props": "warn",
    "@typescript-eslint/naming-convention": [
      "warn",
      {
        selector: "default",
        format: ["camelCase"],
        leadingUnderscore: "allow",
        trailingUnderscore: "allow",
      },

      {
        selector: "variable",
        format: ["camelCase", "UPPER_CASE", "PascalCase"],
        leadingUnderscore: "allow",
        trailingUnderscore: "allow",
      },

      {
        selector: "typeLike",
        format: ["PascalCase"],
      },
      {
        selector: "enumMember",
        format: ["UPPER_CASE"],
      },
    ],
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/consistent-type-imports": "warn",
    "@typescript-eslint/consistent-type-imports": "warn",
    "@typescript-eslint/explicit-function-return-type": [
      "warn",
      {
        allowExpressions: true,
      },
    ],
    "react/prop-types": "off",
    "react/boolean-prop-naming": ["warn", { rule: "^is[A-Z]([A-Za-z0-9]?)+" }],
    "react/destructuring-assignment": ["warn"],
    "react/function-component-definition": [
      "error",
      {
        namedComponents: "arrow-function",
      },
    ],
    "react/no-children-prop": ["error"],
    "react/no-typos": ["error"],
    "filenames/match-exported": ["error"],
    // "import/no-unresolved": ["error"],
    "import/named": ["error"],
    "import/default": ["error"],
    "import/first": ["error"],
    "import/no-duplicates": ["warn"],
  },
  settings: {
    react: {
      pragma: "React",
      version: "detect",
    },
  },
};
